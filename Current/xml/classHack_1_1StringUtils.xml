<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1StringUtils" kind="class" language="C++" prot="public">
    <compoundname>Hack::StringUtils</compoundname>
    <includes local="no">Source/Utils/String.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classHack_1_1StringUtils_1a8967bdf4168b1b6865eae69ce48e9d38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::StringUtils::generate</definition>
        <argsstring>(String &amp;dest, int &amp;counter, void *seed)</argsstring>
        <name>generate</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>counter</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="47" column="1" bodyfile="Source/Utils/String.cpp" bodystart="148" bodyend="157"/>
        <references refid="classHack_1_1StringUtils_1a317411e0785122e1f415d6da27351ba6" compoundref="String_8cpp" startline="132" endline="146">scramble</references>
        <references refid="namespaceHack_1a0022073c844c619a094704ae6c9b14bf" compoundref="String_8h" startline="71" endline="76">Hack::StringCombine</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1StringUtils_1a69ee5b484bf63300d0a47a71ea806bcc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::StringUtils::replaceAll</definition>
        <argsstring>(String &amp;dest, const String &amp;input, const String &amp;a, const String &amp;b)</argsstring>
        <name>replaceAll</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="59" column="1" bodyfile="Source/Utils/String.cpp" bodystart="30" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1StringUtils_1a317411e0785122e1f415d6da27351ba6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::StringUtils::scramble</definition>
        <argsstring>(String &amp;dest, size_t value)</argsstring>
        <name>scramble</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="45" column="1" bodyfile="Source/Utils/String.cpp" bodystart="132" bodyend="146"/>
        <references refid="namespaceHack_1ab2f01cb6501d226bff7dec88849a0f23" compoundref="String_8cpp" startline="130">Hack::BaseCharsSize</references>
        <references refid="namespaceHack_1ae7e3e66ba861ebc2a81c74fab64eca4a" compoundref="String_8cpp" startline="118">Hack::BaseChars</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1StringUtils_1a23bf4c692af3b432d695218ea0143544" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::StringUtils::split</definition>
        <argsstring>(StringArray &amp;dest, const String &amp;str, char sep)</argsstring>
        <name>split</name>
        <param>
          <type><ref refid="namespaceHack_1a02a62f0f81901a275e5e91f45798b2de" kindref="member">StringArray</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="41" column="1" bodyfile="Source/Utils/String.cpp" bodystart="92" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1StringUtils_1a53310d5035726b278967009996f3f536" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::StringUtils::split</definition>
        <argsstring>(StringArray &amp;dest, const String &amp;str, const String &amp;sep)</argsstring>
        <name>split</name>
        <param>
          <type><ref refid="namespaceHack_1a02a62f0f81901a275e5e91f45798b2de" kindref="member">StringArray</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="43" column="1" bodyfile="Source/Utils/String.cpp" bodystart="101" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1StringUtils_1a3023cff3d330aedadb3eaea6f04ae076" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::StringUtils::splitLine</definition>
        <argsstring>(StringArray &amp;dest, const String &amp;input, char swap=&apos;$&apos;)</argsstring>
        <name>splitLine</name>
        <param>
          <type><ref refid="namespaceHack_1a02a62f0f81901a275e5e91f45798b2de" kindref="member">StringArray</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>char</type>
          <declname>swap</declname>
          <defval>&apos;$&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="57" column="1" bodyfile="Source/Utils/String.cpp" bodystart="75" bodyend="90"/>
        <references refid="classHack_1_1StringUtils_1a69ee5b484bf63300d0a47a71ea806bcc" compoundref="String_8cpp" startline="30" endline="73">replaceAll</references>
        <references refid="classHack_1_1StringUtils_1a23bf4c692af3b432d695218ea0143544" compoundref="String_8cpp" startline="92" endline="99">split</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1StringUtils_1af753b3b5d5e6d9a7122823f88d3cdd32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::StringUtils::trim</definition>
        <argsstring>(String &amp;dest, const String &amp;in, char ch)</argsstring>
        <name>trim</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="51" column="1" bodyfile="Source/Utils/String.cpp" bodystart="159" bodyend="163"/>
        <references refid="classHack_1_1StringUtils_1a69f375e46be64e684cc13eca491ca216" compoundref="String_8cpp" startline="195" endline="208">trimL</references>
        <references refid="classHack_1_1StringUtils_1ae247bfac8ee378f4ee806788f40fa8db" compoundref="String_8cpp" startline="210" endline="228">trimR</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1StringUtils_1a69f375e46be64e684cc13eca491ca216" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::StringUtils::trimL</definition>
        <argsstring>(String &amp;dest, const String &amp;in, char ch)</argsstring>
        <name>trimL</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="53" column="1" bodyfile="Source/Utils/String.cpp" bodystart="195" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1StringUtils_1ae247bfac8ee378f4ee806788f40fa8db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::StringUtils::trimR</definition>
        <argsstring>(String &amp;dest, const String &amp;in, char ch)</argsstring>
        <name>trimR</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="55" column="1" bodyfile="Source/Utils/String.cpp" bodystart="210" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1StringUtils_1a7aa6b5303b41ecaef5ae3ac881a6e984" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::StringUtils::trimWhiteSpace</definition>
        <argsstring>(String &amp;dest, const String &amp;in)</argsstring>
        <name>trimWhiteSpace</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="49" column="1" bodyfile="Source/Utils/String.cpp" bodystart="165" bodyend="193"/>
        <references refid="namespaceHack_1afe2cb1512758851b265f12637bd5ec7c" compoundref="Char_8h" startline="185" endline="188">Hack::isWhiteSpace</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Utils/String.h" line="39" column="1" bodyfile="Source/Utils/String.h" bodystart="38" bodyend="60"/>
    <listofallmembers>
      <member refid="classHack_1_1StringUtils_1a8967bdf4168b1b6865eae69ce48e9d38" prot="public" virt="non-virtual"><scope>Hack::StringUtils</scope><name>generate</name></member>
      <member refid="classHack_1_1StringUtils_1a69ee5b484bf63300d0a47a71ea806bcc" prot="public" virt="non-virtual"><scope>Hack::StringUtils</scope><name>replaceAll</name></member>
      <member refid="classHack_1_1StringUtils_1a317411e0785122e1f415d6da27351ba6" prot="public" virt="non-virtual"><scope>Hack::StringUtils</scope><name>scramble</name></member>
      <member refid="classHack_1_1StringUtils_1a23bf4c692af3b432d695218ea0143544" prot="public" virt="non-virtual"><scope>Hack::StringUtils</scope><name>split</name></member>
      <member refid="classHack_1_1StringUtils_1a53310d5035726b278967009996f3f536" prot="public" virt="non-virtual"><scope>Hack::StringUtils</scope><name>split</name></member>
      <member refid="classHack_1_1StringUtils_1a3023cff3d330aedadb3eaea6f04ae076" prot="public" virt="non-virtual"><scope>Hack::StringUtils</scope><name>splitLine</name></member>
      <member refid="classHack_1_1StringUtils_1af753b3b5d5e6d9a7122823f88d3cdd32" prot="public" virt="non-virtual"><scope>Hack::StringUtils</scope><name>trim</name></member>
      <member refid="classHack_1_1StringUtils_1a69f375e46be64e684cc13eca491ca216" prot="public" virt="non-virtual"><scope>Hack::StringUtils</scope><name>trimL</name></member>
      <member refid="classHack_1_1StringUtils_1ae247bfac8ee378f4ee806788f40fa8db" prot="public" virt="non-virtual"><scope>Hack::StringUtils</scope><name>trimR</name></member>
      <member refid="classHack_1_1StringUtils_1a7aa6b5303b41ecaef5ae3ac881a6e984" prot="public" virt="non-virtual"><scope>Hack::StringUtils</scope><name>trimWhiteSpace</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
