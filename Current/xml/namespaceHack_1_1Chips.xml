<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespaceHack_1_1Chips" kind="namespace" language="C++">
    <compoundname>Hack::Chips</compoundname>
    <innerclass refid="classHack_1_1Chips_1_1Add16" prot="public">Hack::Chips::Add16</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Alu" prot="public">Hack::Chips::Alu</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1And" prot="public">Hack::Chips::And</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1And16" prot="public">Hack::Chips::And16</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Bit" prot="public">Hack::Chips::Bit</innerclass>
    <innerclass refid="unionHack_1_1Chips_1_1bit16__t" prot="public">Hack::Chips::bit16_t</innerclass>
    <innerclass refid="unionHack_1_1Chips_1_1bit32__t" prot="public">Hack::Chips::bit32_t</innerclass>
    <innerclass refid="unionHack_1_1Chips_1_1bit64__t" prot="public">Hack::Chips::bit64_t</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1BitUtils" prot="public">Hack::Chips::BitUtils</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Chip" prot="public">Hack::Chips::Chip</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Clock" prot="public">Hack::Chips::Clock</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Computer" prot="public">Hack::Chips::Computer</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Cpu" prot="public">Hack::Chips::Cpu</innerclass>
    <innerclass refid="structHack_1_1Chips_1_1CpuState" prot="public">Hack::Chips::CpuState</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1DefaultMemorySegment" prot="public">Hack::Chips::DefaultMemorySegment</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1DFlipFlop" prot="public">Hack::Chips::DFlipFlop</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1DMux" prot="public">Hack::Chips::DMux</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1DMux4Way" prot="public">Hack::Chips::DMux4Way</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1DMux8Way" prot="public">Hack::Chips::DMux8Way</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1FullAdder" prot="public">Hack::Chips::FullAdder</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1HalfAdder" prot="public">Hack::Chips::HalfAdder</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1IMemorySegment" prot="public">Hack::Chips::IMemorySegment</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Inc16" prot="public">Hack::Chips::Inc16</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Memory" prot="public">Hack::Chips::Memory</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Mux" prot="public">Hack::Chips::Mux</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Mux16" prot="public">Hack::Chips::Mux16</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Mux4Way16" prot="public">Hack::Chips::Mux4Way16</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Mux8Way16" prot="public">Hack::Chips::Mux8Way16</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1NAnd" prot="public">Hack::Chips::NAnd</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1NOr" prot="public">Hack::Chips::NOr</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Not" prot="public">Hack::Chips::Not</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Not16" prot="public">Hack::Chips::Not16</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Or" prot="public">Hack::Chips::Or</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Or16" prot="public">Hack::Chips::Or16</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Or8Way" prot="public">Hack::Chips::Or8Way</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1ProgramCounter" prot="public">Hack::Chips::ProgramCounter</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Ram4k" prot="public">Hack::Chips::Ram4k</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Ram512" prot="public">Hack::Chips::Ram512</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Ram64" prot="public">Hack::Chips::Ram64</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Ram8" prot="public">Hack::Chips::Ram8</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Register" prot="public">Hack::Chips::Register</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Rom32" prot="public">Hack::Chips::Rom32</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1SRLatch" prot="public">Hack::Chips::SRLatch</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1Timer" prot="public">Hack::Chips::Timer</innerclass>
    <innerclass refid="classHack_1_1Chips_1_1XOr" prot="public">Hack::Chips::XOr</innerclass>
    <innernamespace refid="namespaceHack_1_1Chips_1_1BitwiseGates">Hack::Chips::BitwiseGates</innernamespace>
    <innernamespace refid="namespaceHack_1_1Chips_1_1Gates">Hack::Chips::Gates</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceHack_1_1Chips_1acabb309d3c28ba3a5f469d25dff4f144" prot="public" static="no" strong="no">
        <type></type>
        <name>AluFlags</name>
        <enumvalue id="namespaceHack_1_1Chips_1acabb309d3c28ba3a5f469d25dff4f144a66c2bb2834916dff1b9df0c8de5da09c" prot="public">
          <name>No</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1acabb309d3c28ba3a5f469d25dff4f144acfa209a14a88c38e78524f1d6cd6883b" prot="public">
          <name>Fn</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1acabb309d3c28ba3a5f469d25dff4f144a4ceb8925d42a26780931ee5536ebbb88" prot="public">
          <name>Ny</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1acabb309d3c28ba3a5f469d25dff4f144a36b5e715b100c9067069fcf166591565" prot="public">
          <name>Zy</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1acabb309d3c28ba3a5f469d25dff4f144a668c51179b74d30abfc0f28b97d99a62" prot="public">
          <name>Nx</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1acabb309d3c28ba3a5f469d25dff4f144a76fcc6dbc3a599d794f357556801298b" prot="public">
          <name>Zx</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1acabb309d3c28ba3a5f469d25dff4f144a1630ccda3ce240ba49b84d1111d0adb8" prot="public">
          <name>Ne</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1acabb309d3c28ba3a5f469d25dff4f144a315f157d7e9917bcfe8a0dcfa133f6fb" prot="public">
          <name>Zr</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/ALU.h" line="28" column="1" bodyfile="Source/Chips/ALU.h" bodystart="27" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2" prot="public" static="no" strong="no">
        <type></type>
        <name>BitIndex</name>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a3c93b3dc9ed5f470c6f86f10b05b2386" prot="public">
          <name>Bit0</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a8487c63d5dca7d87b359feca1a2c2ac8" prot="public">
          <name>Bit1</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a8a09deb894b81cd01eb5ea4d9f1f1cf5" prot="public">
          <name>Bit2</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ae436844fb061392d7357a1ee7fecfa14" prot="public">
          <name>Bit3</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a98268d4e716682d4a223961ff7b3ed46" prot="public">
          <name>Bit4</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a1595b1dc7056ca6b1d0a681fb1c54c44" prot="public">
          <name>Bit5</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a558a82390f139f886fdec62375e5209e" prot="public">
          <name>Bit6</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" prot="public">
          <name>Bit7</name>
          <initializer>= 0x0080</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2aadd805ed9e083686a8c569e80dcc38a8" prot="public">
          <name>Bit8</name>
          <initializer>= 0x0100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a263e88c74e7f1a10437657aeb1351029" prot="public">
          <name>Bit9</name>
          <initializer>= 0x0200</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ab2a082f07330f8fc6c5153790cd17105" prot="public">
          <name>Bit10</name>
          <initializer>= 0x0400</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a9d3016c29dafb97ff8d2c5398dbd8378" prot="public">
          <name>Bit11</name>
          <initializer>= 0x0800</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2af9d278a7553cfe77cccec3401041f75d" prot="public">
          <name>Bit12</name>
          <initializer>= 0x1000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2aa8948efac0cff6eb7b03915be33594b2" prot="public">
          <name>Bit13</name>
          <initializer>= 0x2000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a10ace9286e9376c3e786ad829115ec61" prot="public">
          <name>Bit14</name>
          <initializer>= 0x4000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2aa92c380b2c00042b5105ede3c75f8d09" prot="public">
          <name>Bit15</name>
          <initializer>= 0x8000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="32" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="31" bodyend="49"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834e" prot="public" static="no" strong="no">
        <type></type>
        <name>Control</name>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ead8acdd64728db039cd19896192b6cb91" prot="public">
          <name>XAndY</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ead194429bd882d774218235b665c40691" prot="public">
          <name>Zero</name>
          <initializer>= Zx | Zy | Fn</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea5bf31a73c4015858640cbf4525a0f635" prot="public">
          <name>One</name>
          <initializer>= Zx | Nx | Zy | Ny | Fn | No</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834eace1f386fd2bfb62375cd39260f9bfaab" prot="public">
          <name>NegativeOne</name>
          <initializer>= Zx | Nx | Zy | Fn</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834eae9d7dcbb6f68eda355091b64af6963ac" prot="public">
          <name>OutX</name>
          <initializer>= Zy | Ny</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea64ecded9e9d4bce576320438afbcc0b5" prot="public">
          <name>OutY</name>
          <initializer>= Zx | Nx</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834eae9410c9c533b94acf19cd933687903bb" prot="public">
          <name>NotX</name>
          <initializer>= Zy | Ny | No</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea92d3c2bb6b5095ec608417078b9c7c65" prot="public">
          <name>NotY</name>
          <initializer>= Zx | Nx | No</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea135215f1f6dc8beda77599a341eb01e3" prot="public">
          <name>NegativeX</name>
          <initializer>= Zy | Ny | No | Fn</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea4cd630e751714e9213ba6b4d317dad3d" prot="public">
          <name>NegativeY</name>
          <initializer>= Zx | Nx | No | Fn</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea5bf9e8694f6b94e54a595c35d5301561" prot="public">
          <name>XPlusOne</name>
          <initializer>= Nx | Zy | Ny | Fn | No</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea5799d387c4c6411ce163ace339f1134d" prot="public">
          <name>YPlusOne</name>
          <initializer>= Zx | Nx | Ny | Fn | No</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834eadf026416b8f09401bdcec8d02ed4201e" prot="public">
          <name>XMinusOne</name>
          <initializer>= Zy | Ny | Fn</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea481daef132a274ac459f4776b68a4bf0" prot="public">
          <name>YMinusOne</name>
          <initializer>= Zx | Nx | Fn</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea1c96e420eda712bdb7d30149dca9b84a" prot="public">
          <name>XPlusY</name>
          <initializer>= Fn</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea98319c0cfadf4a237d16b99336ade784" prot="public">
          <name>XMinusY</name>
          <initializer>= Nx | Fn | No</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea80e05ad94b2217d5b423e1a93d24bfdf" prot="public">
          <name>YMinusX</name>
          <initializer>= Ny | Fn | No</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1a341881db4c30c6d32529deb197b5834ea0908b6d56aaa80b7f079e5e115e89e41" prot="public">
          <name>XOrY</name>
          <initializer>= Nx | Ny | No</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/ALU.h" line="40" column="1" bodyfile="Source/Chips/ALU.h" bodystart="39" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceHack_1_1Chips_1ad2616e1e96fd36f082180cb74e89acc3" prot="public" static="no" strong="no">
        <type></type>
        <name>ProgramCounterFlags</name>
        <enumvalue id="namespaceHack_1_1Chips_1ad2616e1e96fd36f082180cb74e89acc3aa20daca2730050cc52329e14fb86997c" prot="public">
          <name>PCF_INC</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1ad2616e1e96fd36f082180cb74e89acc3ab2070c4d59e83b5d3a362c64140bf449" prot="public">
          <name>PCF_RESET</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1_1Chips_1ad2616e1e96fd36f082180cb74e89acc3a8d3b4cad187bfc23e962373076c7b347" prot="public">
          <name>PCF_LOAD</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/ProgramCounter.h" line="32" column="1" bodyfile="Source/Chips/ProgramCounter.h" bodystart="31" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceHack_1_1Chips_1a8619ab45f63c5c97d4b5430487adbaf2" prot="public" static="no">
        <type><ref refid="classHack_1_1Chips_1_1BitUtils" kindref="compound">BitUtils</ref>&lt; <ref refid="classuint16__t" kindref="compound">uint16_t</ref>, 16 &gt;</type>
        <definition>using Hack::Chips::B16 = typedef BitUtils&lt;uint16_t, 16&gt;</definition>
        <argsstring></argsstring>
        <name>B16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="258" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1_1Chips_1ab9cb4d5d1bc25154100e519567e6c702" prot="public" static="no">
        <type><ref refid="classHack_1_1Chips_1_1BitUtils" kindref="compound">BitUtils</ref>&lt; <ref refid="classuint8__t" kindref="compound">uint8_t</ref>, 8 &gt;</type>
        <definition>using Hack::Chips::B8 = typedef BitUtils&lt;uint8_t, 8&gt;</definition>
        <argsstring></argsstring>
        <name>B8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="257" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1_1Chips_1a34177040653a4658b7c74d3846e164e1" prot="public" static="no">
        <type><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment" kindref="compound">DefaultMemorySegment</ref>&lt; 0x4000, 0x8000 &gt;</type>
        <definition>typedef DefaultMemorySegment&lt;0x4000, 0x8000&gt; Hack::Chips::Ram16k</definition>
        <argsstring></argsstring>
        <name>Ram16k</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Ram16k.h" line="27" column="1" bodyfile="Source/Chips/Ram16k.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1_1Chips_1a205aa97050ad01560145252139c81057" prot="public" static="no">
        <type><ref refid="classHack_1_1Chips_1_1IMemorySegment" kindref="compound">IMemorySegment</ref>&lt; 0x6000, 0x4000 &gt;</type>
        <definition>typedef IMemorySegment&lt;0x6000, 0x4000&gt; Hack::Chips::Screen</definition>
        <argsstring></argsstring>
        <name>Screen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Screen.h" line="27" column="1" bodyfile="Source/Chips/Screen.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1_1Chips_1a40609e493601249c692ffb4b5d2d31a3" prot="public" static="no">
        <type><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment" kindref="compound">DefaultMemorySegment</ref>&lt; 0x6000, 0x4000 &gt;</type>
        <definition>using Hack::Chips::ScreenSegment = typedef DefaultMemorySegment&lt;0x6000, 0x4000&gt;</definition>
        <argsstring></argsstring>
        <name>ScreenSegment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Screen.h" line="28" column="1" bodyfile="Source/Chips/Screen.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1aaba0ba71f01d3869fbd9d00e9c7c8843" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>constexpr uint16_t Hack::Chips::ABits</definition>
        <argsstring></argsstring>
        <name>ABits</name>
        <initializer>= 0b0&apos;00&apos;1&apos;000000&apos;000&apos;000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/CPU.cpp" line="50" column="1" bodyfile="Source/Chips/CPU.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1ac2e8bb0a903ada736323d9ae15fbd83f" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>constexpr uint16_t Hack::Chips::ALoad</definition>
        <argsstring></argsstring>
        <name>ALoad</name>
        <initializer>= 0b0&apos;00&apos;0&apos;000000&apos;100&apos;000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/CPU.cpp" line="49" column="1" bodyfile="Source/Chips/CPU.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1a9da8a364a75104615da123f1e3c5e457" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
        <definition>constexpr uint8_t Hack::Chips::BitMask</definition>
        <argsstring></argsstring>
        <name>BitMask</name>
        <initializer>= 0b01011111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Bit.cpp" line="30" column="1" bodyfile="Source/Chips/Bit.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1aed76ec1c3c9eb7477302492f4a555347" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>constexpr uint16_t Hack::Chips::CBits</definition>
        <argsstring></argsstring>
        <name>CBits</name>
        <initializer>= 0b0&apos;00&apos;0&apos;111111&apos;000&apos;000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/CPU.cpp" line="51" column="1" bodyfile="Source/Chips/CPU.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1a1ff32d5ecd7b6fef93d19d0584f6a3de" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
        <definition>constexpr uint8_t Hack::Chips::ClockMask</definition>
        <argsstring></argsstring>
        <name>ClockMask</name>
        <initializer>= 0b00000011</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Clock.cpp" line="26" column="1" bodyfile="Source/Chips/Clock.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1aecca554241805bc1e9d1d50df379efaa" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>constexpr uint16_t Hack::Chips::DLoad</definition>
        <argsstring></argsstring>
        <name>DLoad</name>
        <initializer>= 0b0&apos;00&apos;0&apos;000000&apos;010&apos;000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/CPU.cpp" line="48" column="1" bodyfile="Source/Chips/CPU.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1a39ffb7370967401379a3867a99c0d502" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>constexpr uint16_t Hack::Chips::DMux8WayMask</definition>
        <argsstring></argsstring>
        <name>DMux8WayMask</name>
        <initializer>= 0b0000111111111111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.cpp" line="30" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1abba66580760a71c292f9d27068d4b248" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>constexpr uint16_t Hack::Chips::MLoad</definition>
        <argsstring></argsstring>
        <name>MLoad</name>
        <initializer>= 0b0&apos;00&apos;0&apos;000000&apos;001&apos;000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/CPU.cpp" line="47" column="1" bodyfile="Source/Chips/CPU.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1ae1b67452b254db5b0d86e024b16194d7" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
        <definition>constexpr uint8_t Hack::Chips::Mux8Way16Mask</definition>
        <argsstring></argsstring>
        <name>Mux8Way16Mask</name>
        <initializer>= 0b00000111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux8Way16.cpp" line="30" column="1" bodyfile="Source/Chips/Mux8Way16.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1a31b128b4961f42e0532f63a42c7e990c" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>constexpr uint16_t Hack::Chips::RMask</definition>
        <argsstring></argsstring>
        <name>RMask</name>
        <initializer>= 0b0111&apos;1111&apos;1111&apos;1111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/CPU.cpp" line="46" column="1" bodyfile="Source/Chips/CPU.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1_1Chips_1aa30bb2bb6c1f3ec73c3b5046db26ada2" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
        <definition>constexpr uint8_t Hack::Chips::SrLatchMask</definition>
        <argsstring></argsstring>
        <name>SrLatchMask</name>
        <initializer>= 0b01101111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/SRLatch.cpp" line="26" column="1" bodyfile="Source/Chips/SRLatch.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceHack_1_1Chips_1a7a5791fb124e7aad6c36cca12afba484" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::CpuDirty</definition>
        <argsstring>(const uint8_t &amp;bits)</argsstring>
        <name>CpuDirty</name>
        <param>
          <type>const <ref refid="classuint8__t" kindref="compound">uint8_t</ref> &amp;</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/CPU.cpp" line="40" column="1" bodyfile="Source/Chips/CPU.cpp" bodystart="40" bodyend="43"/>
        <references refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" compoundref="BitUtils_8h" startline="40">Bit7</references>
        <references refid="namespaceHack_1_1Chips_1ad7b6ac75288861f60b160dcdc43aa189" compoundref="CPU_8cpp" startline="35" endline="38">CpuIsLocked</references>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1_1Chips_1ad7b6ac75288861f60b160dcdc43aa189" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::CpuIsLocked</definition>
        <argsstring>(const uint8_t &amp;bits)</argsstring>
        <name>CpuIsLocked</name>
        <param>
          <type>const <ref refid="classuint8__t" kindref="compound">uint8_t</ref> &amp;</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/CPU.cpp" line="35" column="1" bodyfile="Source/Chips/CPU.cpp" bodystart="35" bodyend="38"/>
        <references refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a8a09deb894b81cd01eb5ea4d9f1f1cf5" compoundref="BitUtils_8h" startline="35">Bit2</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Chips/Add16.cpp" line="28" column="1"/>
  </compounddef>
</doxygen>
