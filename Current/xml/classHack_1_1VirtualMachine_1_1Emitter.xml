<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1VirtualMachine_1_1Emitter" kind="class" language="C++" prot="public">
    <compoundname>Hack::VirtualMachine::Emitter</compoundname>
    <includes local="no">Source/VirtualMachine/Emitter.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classHack_1_1VirtualMachine_1_1Emitter_1aa8ce88c353ba6d22e7540662e1df2a8a" prot="public" static="no">
        <type>std::stack&lt; <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &gt;</type>
        <definition>typedef std::stack&lt;String&gt; Hack::VirtualMachine::Emitter::StringStack</definition>
        <argsstring></argsstring>
        <name>StringStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="34" column="1" bodyfile="Source/VirtualMachine/Emitter.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHack_1_1VirtualMachine_1_1Emitter_1aa6b5ac5c97bec2417d1dfa1c439a0280" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Hack::VirtualMachine::Emitter::_cmp</definition>
        <argsstring></argsstring>
        <name>_cmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="38" column="1" bodyfile="Source/VirtualMachine/Emitter.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1VirtualMachine_1_1Emitter_1a2a92e3c12f741967213cc4c6b461716b" prot="private" static="no" mutable="no">
        <type><ref refid="classHack_1_1VirtualMachine_1_1Emitter_1aa8ce88c353ba6d22e7540662e1df2a8a" kindref="member">StringStack</ref></type>
        <definition>StringStack Hack::VirtualMachine::Emitter::_functions</definition>
        <argsstring></argsstring>
        <name>_functions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="39" column="1" bodyfile="Source/VirtualMachine/Emitter.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1VirtualMachine_1_1Emitter_1affa86d2748d6dd7e7ea5afac5cb9b2c4" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceHack_1ae3a6ca87ce783b824591a2858b2409a1" kindref="member">OutputStringStream</ref></type>
        <definition>OutputStringStream Hack::VirtualMachine::Emitter::_stream</definition>
        <argsstring></argsstring>
        <name>_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="37" column="1" bodyfile="Source/VirtualMachine/Emitter.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1afd58fa95f0cbf406512c90c9215c7a52" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::genLabel</definition>
        <argsstring>(String &amp;val)</argsstring>
        <name>genLabel</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="43" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="409" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a80a58b11a57fdcbd4f0a4ea91ddf029f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::getJumpLabels</definition>
        <argsstring>(String &amp;valTrue, String &amp;valDone)</argsstring>
        <name>getJumpLabels</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>valTrue</declname>
        </param>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>valDone</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="41" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="401" bodyend="407"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1aed412b794ba08f97702b7c9e1ddc936f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::VirtualMachine::Emitter::Emitter</definition>
        <argsstring>()</argsstring>
        <name>Emitter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="46" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1af262bc1ecd8d3450375f9f4e450a7c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="48" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1abc0dabd1997693d70d9703aa4c861abd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::popArgument</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popArgument</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="83" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="559" bodyend="563"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ada6099787eff578a9980ab4f38e27eb1" compoundref="Emitter_8cpp" startline="364" endline="377">Hack::VirtualMachine::CodeStream::popSegment</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a8ca2cf3937e5c6f1e63ee3b602fdf814" compoundref="Constants_8h" startline="30">Hack::VirtualMachine::ARG</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a1eb323d646263c89efbd6b4b609709f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::popLocal</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popLocal</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="73" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="553" bodyend="557"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ada6099787eff578a9980ab4f38e27eb1" compoundref="Emitter_8cpp" startline="364" endline="377">Hack::VirtualMachine::CodeStream::popSegment</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827acf4f05429d20255bf7128cebaf158e72" compoundref="Constants_8h" startline="29">Hack::VirtualMachine::LCL</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a56edb8fc5daceb2c366c6a06709f5d51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::popPointer</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popPointer</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="81" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="612" bodyend="627"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a6224864f8951a6763574738729682f4b" compoundref="Emitter_8cpp" startline="154" endline="162">Hack::VirtualMachine::CodeStream::moveMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a90a38165d26c1c452fdff88b0a83a928" compoundref="Emitter_8cpp" startline="169" endline="173">Hack::VirtualMachine::CodeStream::moveDIntoX</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a0edd4176219c47bc38b154d7319b2b0c" compoundref="Constants_8h" startline="31">Hack::VirtualMachine::THS</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a892ac688cf8f49defc936c85521c630b" compoundref="Constants_8h" startline="32">Hack::VirtualMachine::THT</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a2fa0b264ae63445fad0a8db36d20075a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::popStatic</definition>
        <argsstring>(const String &amp;context, const size_t &amp;idx)</argsstring>
        <name>popStatic</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="85" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="565" bodyend="575"/>
        <references refid="namespaceHack_1a0022073c844c619a094704ae6c9b14bf" compoundref="String_8h" startline="71" endline="76">Hack::StringCombine</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a6224864f8951a6763574738729682f4b" compoundref="Emitter_8cpp" startline="154" endline="162">Hack::VirtualMachine::CodeStream::moveMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a90a38165d26c1c452fdff88b0a83a928" compoundref="Emitter_8cpp" startline="169" endline="173">Hack::VirtualMachine::CodeStream::moveDIntoX</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a144f81f654a07f4f2b488b9424629bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::popTemp</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popTemp</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="79" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="589" bodyend="610"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aefd34367173992dca2ece0c2166786c4" compoundref="Emitter_8cpp" startline="146" endline="152">Hack::VirtualMachine::CodeStream::offsetTo</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a7257ce4a14d1f26d6858febfad59e371" compoundref="Constants_8h" startline="33">Hack::VirtualMachine::TMP</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a90a38165d26c1c452fdff88b0a83a928" compoundref="Emitter_8cpp" startline="169" endline="173">Hack::VirtualMachine::CodeStream::moveDIntoX</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827ac877118ac6aa475e26bcdc4dd5952f52" compoundref="Constants_8h" startline="35">Hack::VirtualMachine::SW0</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a6224864f8951a6763574738729682f4b" compoundref="Emitter_8cpp" startline="154" endline="162">Hack::VirtualMachine::CodeStream::moveMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a12bef7f8bfeef851d75676553207b359" compoundref="Emitter_8cpp" startline="79" endline="83">Hack::VirtualMachine::CodeStream::jumpToAddressIn</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a741754f2400fa7216c34d068f8f72cbd" compoundref="Emitter_8cpp" startline="181" endline="184">Hack::VirtualMachine::CodeStream::moveDIntoM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa1d9895c4a583e36a7b7767bce78384f" compoundref="Emitter_8cpp" startline="191" endline="197">Hack::VirtualMachine::CodeStream::move</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a2de462d5d98a35b4366d15d2801d157d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::popThat</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popThat</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="77" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="583" bodyend="587"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ada6099787eff578a9980ab4f38e27eb1" compoundref="Emitter_8cpp" startline="364" endline="377">Hack::VirtualMachine::CodeStream::popSegment</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a892ac688cf8f49defc936c85521c630b" compoundref="Constants_8h" startline="32">Hack::VirtualMachine::THT</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a02258187ea3b8426a88a2a6d63dda0f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::popThis</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popThis</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="75" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="577" bodyend="581"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ada6099787eff578a9980ab4f38e27eb1" compoundref="Emitter_8cpp" startline="364" endline="377">Hack::VirtualMachine::CodeStream::popSegment</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a0edd4176219c47bc38b154d7319b2b0c" compoundref="Constants_8h" startline="31">Hack::VirtualMachine::THS</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a5cbf52561c2c0e632664e9da1ef93b8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::pushArgument</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushArgument</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="61" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="495" bodyend="512"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1abbbfef8a14e762f28b7b2be672a4e658" compoundref="Emitter_8cpp" startline="379" endline="388">Hack::VirtualMachine::CodeStream::compareDIntoX</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827ae6201d4edf7d9066f2245e0d75ac1805" compoundref="Constants_8h" startline="37">Hack::VirtualMachine::SW2</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a8ca2cf3937e5c6f1e63ee3b602fdf814" compoundref="Constants_8h" startline="30">Hack::VirtualMachine::ARG</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a909f708f9e837b0183f4dd47e3ee4cc1" compoundref="Emitter_8cpp" startline="325" endline="329">Hack::VirtualMachine::CodeStream::jumpIfEquals</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a59e701f5c538e3641f8605cf4b4b87a4" compoundref="Emitter_8cpp" startline="137" endline="144">Hack::VirtualMachine::CodeStream::dereferenceOffset</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8fe8623ebe79e65925e9be23d07750ae" compoundref="Emitter_8cpp" startline="164" endline="167">Hack::VirtualMachine::CodeStream::copyMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa312694a897020b8a667fc0140a7de43" compoundref="Emitter_8cpp" startline="279" endline="283">Hack::VirtualMachine::CodeStream::pushD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1aaa58d2ca0cd17e6d4a3b6dec96d53d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::pushConstant</definition>
        <argsstring>(const int &amp;idx)</argsstring>
        <name>pushConstant</name>
        <param>
          <type>const int &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="57" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="422" bodyend="426"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a34acb94db32ce9546ba3b32e11043fd4" compoundref="Emitter_8cpp" startline="271" endline="277">Hack::VirtualMachine::CodeStream::push</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a8f6a6b66be4690f4b9aeb6eddfff713f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::pushLocal</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushLocal</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="59" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="428" bodyend="447"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1abbbfef8a14e762f28b7b2be672a4e658" compoundref="Emitter_8cpp" startline="379" endline="388">Hack::VirtualMachine::CodeStream::compareDIntoX</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827ae6201d4edf7d9066f2245e0d75ac1805" compoundref="Constants_8h" startline="37">Hack::VirtualMachine::SW2</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827acf4f05429d20255bf7128cebaf158e72" compoundref="Constants_8h" startline="29">Hack::VirtualMachine::LCL</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a909f708f9e837b0183f4dd47e3ee4cc1" compoundref="Emitter_8cpp" startline="325" endline="329">Hack::VirtualMachine::CodeStream::jumpIfEquals</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a59e701f5c538e3641f8605cf4b4b87a4" compoundref="Emitter_8cpp" startline="137" endline="144">Hack::VirtualMachine::CodeStream::dereferenceOffset</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8fe8623ebe79e65925e9be23d07750ae" compoundref="Emitter_8cpp" startline="164" endline="167">Hack::VirtualMachine::CodeStream::copyMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa312694a897020b8a667fc0140a7de43" compoundref="Emitter_8cpp" startline="279" endline="283">Hack::VirtualMachine::CodeStream::pushD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1ab918a95684ae69febf08ff7df0dc7977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::pushPointer</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushPointer</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="71" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="514" bodyend="540"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1abbbfef8a14e762f28b7b2be672a4e658" compoundref="Emitter_8cpp" startline="379" endline="388">Hack::VirtualMachine::CodeStream::compareDIntoX</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827ae6201d4edf7d9066f2245e0d75ac1805" compoundref="Constants_8h" startline="37">Hack::VirtualMachine::SW2</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a8ca2cf3937e5c6f1e63ee3b602fdf814" compoundref="Constants_8h" startline="30">Hack::VirtualMachine::ARG</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a909f708f9e837b0183f4dd47e3ee4cc1" compoundref="Emitter_8cpp" startline="325" endline="329">Hack::VirtualMachine::CodeStream::jumpIfEquals</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aefd34367173992dca2ece0c2166786c4" compoundref="Emitter_8cpp" startline="146" endline="152">Hack::VirtualMachine::CodeStream::offsetTo</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a0edd4176219c47bc38b154d7319b2b0c" compoundref="Constants_8h" startline="31">Hack::VirtualMachine::THS</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8fe8623ebe79e65925e9be23d07750ae" compoundref="Emitter_8cpp" startline="164" endline="167">Hack::VirtualMachine::CodeStream::copyMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa312694a897020b8a667fc0140a7de43" compoundref="Emitter_8cpp" startline="279" endline="283">Hack::VirtualMachine::CodeStream::pushD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a058483c1d4c8d8f37cb173df25aaf0cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::pushStatic</definition>
        <argsstring>(const String &amp;context, const size_t &amp;idx)</argsstring>
        <name>pushStatic</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="67" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="542" bodyend="551"/>
        <references refid="namespaceHack_1a0022073c844c619a094704ae6c9b14bf" compoundref="String_8h" startline="71" endline="76">Hack::StringCombine</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a175bf06345174fcce65d1191e39a3003" compoundref="Emitter_8cpp" startline="49" endline="52">Hack::VirtualMachine::CodeStream::atAddressOf</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8fe8623ebe79e65925e9be23d07750ae" compoundref="Emitter_8cpp" startline="164" endline="167">Hack::VirtualMachine::CodeStream::copyMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a200c1f50e617de5b500ce368db456fbb" compoundref="Emitter_8cpp" startline="131" endline="135">Hack::VirtualMachine::CodeStream::incrementAndJump</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a741754f2400fa7216c34d068f8f72cbd" compoundref="Emitter_8cpp" startline="181" endline="184">Hack::VirtualMachine::CodeStream::moveDIntoM</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a7e845f9ab740405fc8cac69e48e3f35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::pushTemp</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushTemp</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="69" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="487" bodyend="493"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aefd34367173992dca2ece0c2166786c4" compoundref="Emitter_8cpp" startline="146" endline="152">Hack::VirtualMachine::CodeStream::offsetTo</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a7257ce4a14d1f26d6858febfad59e371" compoundref="Constants_8h" startline="33">Hack::VirtualMachine::TMP</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a6224864f8951a6763574738729682f4b" compoundref="Emitter_8cpp" startline="154" endline="162">Hack::VirtualMachine::CodeStream::moveMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa312694a897020b8a667fc0140a7de43" compoundref="Emitter_8cpp" startline="279" endline="283">Hack::VirtualMachine::CodeStream::pushD</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1af1a7a98b19545def95f6bc05e3e573d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::pushThat</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushThat</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="65" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="468" bodyend="485"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1abbbfef8a14e762f28b7b2be672a4e658" compoundref="Emitter_8cpp" startline="379" endline="388">Hack::VirtualMachine::CodeStream::compareDIntoX</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827ae6201d4edf7d9066f2245e0d75ac1805" compoundref="Constants_8h" startline="37">Hack::VirtualMachine::SW2</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a892ac688cf8f49defc936c85521c630b" compoundref="Constants_8h" startline="32">Hack::VirtualMachine::THT</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a909f708f9e837b0183f4dd47e3ee4cc1" compoundref="Emitter_8cpp" startline="325" endline="329">Hack::VirtualMachine::CodeStream::jumpIfEquals</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a59e701f5c538e3641f8605cf4b4b87a4" compoundref="Emitter_8cpp" startline="137" endline="144">Hack::VirtualMachine::CodeStream::dereferenceOffset</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8fe8623ebe79e65925e9be23d07750ae" compoundref="Emitter_8cpp" startline="164" endline="167">Hack::VirtualMachine::CodeStream::copyMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa312694a897020b8a667fc0140a7de43" compoundref="Emitter_8cpp" startline="279" endline="283">Hack::VirtualMachine::CodeStream::pushD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a0aa1816c96c0f6deb1971ef113a79af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::pushThis</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushThis</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="63" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="449" bodyend="466"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1abbbfef8a14e762f28b7b2be672a4e658" compoundref="Emitter_8cpp" startline="379" endline="388">Hack::VirtualMachine::CodeStream::compareDIntoX</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827ae6201d4edf7d9066f2245e0d75ac1805" compoundref="Constants_8h" startline="37">Hack::VirtualMachine::SW2</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a0edd4176219c47bc38b154d7319b2b0c" compoundref="Constants_8h" startline="31">Hack::VirtualMachine::THS</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a909f708f9e837b0183f4dd47e3ee4cc1" compoundref="Emitter_8cpp" startline="325" endline="329">Hack::VirtualMachine::CodeStream::jumpIfEquals</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a59e701f5c538e3641f8605cf4b4b87a4" compoundref="Emitter_8cpp" startline="137" endline="144">Hack::VirtualMachine::CodeStream::dereferenceOffset</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8fe8623ebe79e65925e9be23d07750ae" compoundref="Emitter_8cpp" startline="164" endline="167">Hack::VirtualMachine::CodeStream::copyMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa312694a897020b8a667fc0140a7de43" compoundref="Emitter_8cpp" startline="279" endline="283">Hack::VirtualMachine::CodeStream::pushD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1aa6529297748da36b15e9ed7674ec60b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::setRam</definition>
        <argsstring>(int index, int value)</argsstring>
        <name>setRam</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="55" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="415" bodyend="420"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa1d9895c4a583e36a7b7767bce78384f" compoundref="Emitter_8cpp" startline="191" endline="197">Hack::VirtualMachine::CodeStream::move</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a3944cc6bbc9993953d7b4543af940128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceHack_1ae3a6ca87ce783b824591a2858b2409a1" kindref="member">OutputStringStream</ref> &amp;</type>
        <definition>OutputStringStream&amp; Hack::VirtualMachine::Emitter::stream</definition>
        <argsstring>()</argsstring>
        <name>stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="50" column="1" bodyfile="Source/VirtualMachine/Emitter.h" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1aaace24f338366621d97233f0a0505e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeAdd</definition>
        <argsstring>()</argsstring>
        <name>writeAdd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="93" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="659" bodyend="667"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a6224864f8951a6763574738729682f4b" compoundref="Emitter_8cpp" startline="154" endline="162">Hack::VirtualMachine::CodeStream::moveMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a63f901cea27d2aea7ce908221a7dcd29" compoundref="Emitter_8cpp" startline="116" endline="119">Hack::VirtualMachine::CodeStream::decrementA</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1af986393f5cbff6ce44748f241c15c63b" compoundref="Emitter_8cpp" startline="209" endline="212">Hack::VirtualMachine::CodeStream::addDmIntoM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1ae83c1294d792a8a07a2c2d1ae42b65ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeAnd</definition>
        <argsstring>()</argsstring>
        <name>writeAnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="89" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="639" bodyend="647"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a6224864f8951a6763574738729682f4b" compoundref="Emitter_8cpp" startline="154" endline="162">Hack::VirtualMachine::CodeStream::moveMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a63f901cea27d2aea7ce908221a7dcd29" compoundref="Emitter_8cpp" startline="116" endline="119">Hack::VirtualMachine::CodeStream::decrementA</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a55d42e45337699cea476f3d217d8839b" compoundref="Emitter_8cpp" startline="234" endline="237">Hack::VirtualMachine::CodeStream::andDmIntoM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1ad150c2fea65ae75600e16c7af316999e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeCall</definition>
        <argsstring>(const String &amp;name, const int &amp;args)</argsstring>
        <name>writeCall</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="117" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="804" bodyend="857"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ae92290ff5aa525f4872f52c11ecfba2f" compoundref="Emitter_8cpp" startline="293" endline="299">Hack::VirtualMachine::CodeStream::setD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa312694a897020b8a667fc0140a7de43" compoundref="Emitter_8cpp" startline="279" endline="283">Hack::VirtualMachine::CodeStream::pushD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a175bf06345174fcce65d1191e39a3003" compoundref="Emitter_8cpp" startline="49" endline="52">Hack::VirtualMachine::CodeStream::atAddressOf</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1adac2df82286980d0157b3d7ca5f84db2" compoundref="Emitter_8cpp" startline="186" endline="189">Hack::VirtualMachine::CodeStream::moveAIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa64fee49965171d8b1977dbb310fa314" compoundref="Emitter_8cpp" startline="337" endline="341">Hack::VirtualMachine::CodeStream::copyMIntoDAt</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827acf4f05429d20255bf7128cebaf158e72" compoundref="Constants_8h" startline="29">Hack::VirtualMachine::LCL</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a8ca2cf3937e5c6f1e63ee3b602fdf814" compoundref="Constants_8h" startline="30">Hack::VirtualMachine::ARG</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a0edd4176219c47bc38b154d7319b2b0c" compoundref="Constants_8h" startline="31">Hack::VirtualMachine::THS</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a892ac688cf8f49defc936c85521c630b" compoundref="Constants_8h" startline="32">Hack::VirtualMachine::THT</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a7b3485d5bcdb0077f04a795300192aa1" compoundref="Emitter_8cpp" startline="259" endline="263">Hack::VirtualMachine::CodeStream::addXToD</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a863abda83f7c8925cceaf04098e3cb34" compoundref="Constants_8h" startline="28">Hack::VirtualMachine::STP</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a77ac380a3651c409a3c5d9cfa595f44a" compoundref="Emitter_8cpp" startline="219" endline="222">Hack::VirtualMachine::CodeStream::subDmIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8e21be8722f05faaf98bf330cc90cdb3" compoundref="Emitter_8cpp" startline="265" endline="269">Hack::VirtualMachine::CodeStream::subXFromD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a741754f2400fa7216c34d068f8f72cbd" compoundref="Emitter_8cpp" startline="181" endline="184">Hack::VirtualMachine::CodeStream::moveDIntoM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a173d6752019266017c924ba132da9730" compoundref="Emitter_8cpp" startline="313" endline="317">Hack::VirtualMachine::CodeStream::jumpTo</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1aaf525ae23391a46b4ede8a6313f6a5d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeCode</definition>
        <argsstring>(const String &amp;cs)</argsstring>
        <name>writeCode</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="121" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="894" bodyend="898"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa24d8232152dbeb130978b871402e41b" compoundref="Emitter_8cpp" startline="42" endline="47">Hack::VirtualMachine::CodeStream::write</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1ab7130849685d66f3dbfdb66516a6666b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeEq</definition>
        <argsstring>()</argsstring>
        <name>writeEq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="99" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="683" bodyend="704"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8fe8623ebe79e65925e9be23d07750ae" compoundref="Emitter_8cpp" startline="164" endline="167">Hack::VirtualMachine::CodeStream::copyMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a63f901cea27d2aea7ce908221a7dcd29" compoundref="Emitter_8cpp" startline="116" endline="119">Hack::VirtualMachine::CodeStream::decrementA</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1abede0a565d50c119dde2f3c1176da963" compoundref="Emitter_8cpp" startline="254" endline="257">Hack::VirtualMachine::CodeStream::subMdIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a909f708f9e837b0183f4dd47e3ee4cc1" compoundref="Emitter_8cpp" startline="325" endline="329">Hack::VirtualMachine::CodeStream::jumpIfEquals</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ae92290ff5aa525f4872f52c11ecfba2f" compoundref="Emitter_8cpp" startline="293" endline="299">Hack::VirtualMachine::CodeStream::setD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a173d6752019266017c924ba132da9730" compoundref="Emitter_8cpp" startline="313" endline="317">Hack::VirtualMachine::CodeStream::jumpTo</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a741754f2400fa7216c34d068f8f72cbd" compoundref="Emitter_8cpp" startline="181" endline="184">Hack::VirtualMachine::CodeStream::moveDIntoM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1aab3f6bc5273771ec46046381c7253242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeFunction</definition>
        <argsstring>(const String &amp;name, const int &amp;locals)</argsstring>
        <name>writeFunction</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>locals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="115" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="787" bodyend="802"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a59e701f5c538e3641f8605cf4b4b87a4" compoundref="Emitter_8cpp" startline="137" endline="144">Hack::VirtualMachine::CodeStream::dereferenceOffset</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827acf4f05429d20255bf7128cebaf158e72" compoundref="Constants_8h" startline="29">Hack::VirtualMachine::LCL</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ad8f38975cc515f0db92975ffb113d023" compoundref="Emitter_8cpp" startline="285" endline="291">Hack::VirtualMachine::CodeStream::setM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ae12a2b3735c9ad4c7ffcf06f4e8f235a" compoundref="Emitter_8cpp" startline="110" endline="114">Hack::VirtualMachine::CodeStream::increment</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a755e9953659ecf7df60423bd30dfe80c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeGt</definition>
        <argsstring>()</argsstring>
        <name>writeGt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="103" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="728" bodyend="748"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8fe8623ebe79e65925e9be23d07750ae" compoundref="Emitter_8cpp" startline="164" endline="167">Hack::VirtualMachine::CodeStream::copyMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a63f901cea27d2aea7ce908221a7dcd29" compoundref="Emitter_8cpp" startline="116" endline="119">Hack::VirtualMachine::CodeStream::decrementA</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1abede0a565d50c119dde2f3c1176da963" compoundref="Emitter_8cpp" startline="254" endline="257">Hack::VirtualMachine::CodeStream::subMdIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a7742f807f5a50d04bf97199b2250f131" compoundref="Emitter_8cpp" startline="307" endline="311">Hack::VirtualMachine::CodeStream::jumpIfGreater</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ae92290ff5aa525f4872f52c11ecfba2f" compoundref="Emitter_8cpp" startline="293" endline="299">Hack::VirtualMachine::CodeStream::setD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a173d6752019266017c924ba132da9730" compoundref="Emitter_8cpp" startline="313" endline="317">Hack::VirtualMachine::CodeStream::jumpTo</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a741754f2400fa7216c34d068f8f72cbd" compoundref="Emitter_8cpp" startline="181" endline="184">Hack::VirtualMachine::CodeStream::moveDIntoM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a0257d1433f36b284b726033a6f6760f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeHalt</definition>
        <argsstring>()</argsstring>
        <name>writeHalt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="107" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="756" bodyend="764"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a4fea9b6b37191464b43ba65b5a5e5685" compoundref="Emitter_8cpp" startline="85" endline="89">Hack::VirtualMachine::CodeStream::jumpToRomAddress</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1aaca9c3ae0e13532b9d44339d7ecbc06d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeLabel</definition>
        <argsstring>(const String &amp;value)</argsstring>
        <name>writeLabel</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="113" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="781" bodyend="785"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a1628ba2540e176473ece7714482fd895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeLt</definition>
        <argsstring>()</argsstring>
        <name>writeLt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="101" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="706" bodyend="726"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8fe8623ebe79e65925e9be23d07750ae" compoundref="Emitter_8cpp" startline="164" endline="167">Hack::VirtualMachine::CodeStream::copyMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a63f901cea27d2aea7ce908221a7dcd29" compoundref="Emitter_8cpp" startline="116" endline="119">Hack::VirtualMachine::CodeStream::decrementA</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1abede0a565d50c119dde2f3c1176da963" compoundref="Emitter_8cpp" startline="254" endline="257">Hack::VirtualMachine::CodeStream::subMdIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a2936d187196df9f509153d44f3c50aef" compoundref="Emitter_8cpp" startline="319" endline="323">Hack::VirtualMachine::CodeStream::jumpIfLess</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ae92290ff5aa525f4872f52c11ecfba2f" compoundref="Emitter_8cpp" startline="293" endline="299">Hack::VirtualMachine::CodeStream::setD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a173d6752019266017c924ba132da9730" compoundref="Emitter_8cpp" startline="313" endline="317">Hack::VirtualMachine::CodeStream::jumpTo</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="Emitter_8cpp" startline="74" endline="77">Hack::VirtualMachine::CodeStream::label</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a741754f2400fa7216c34d068f8f72cbd" compoundref="Emitter_8cpp" startline="181" endline="184">Hack::VirtualMachine::CodeStream::moveDIntoM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a2f860b25cccd5835f087d13a33f6f4ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeNeg</definition>
        <argsstring>()</argsstring>
        <name>writeNeg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="97" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="676" bodyend="681"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab42de1bc627a17990d40b6871d4a2041" compoundref="Emitter_8cpp" startline="249" endline="252">Hack::VirtualMachine::CodeStream::negMIntoM</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a79e7c8b178799150cf1bc9a0179bfcc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeNot</definition>
        <argsstring>()</argsstring>
        <name>writeNot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="95" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="669" bodyend="674"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a7b1173a77edb1d1791096d55dbee2ee4" compoundref="Emitter_8cpp" startline="244" endline="247">Hack::VirtualMachine::CodeStream::notMIntoM</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a5a9dd7c8028d6eb7a0f10f04d727ffb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeOr</definition>
        <argsstring>()</argsstring>
        <name>writeOr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="87" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="629" bodyend="637"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a6224864f8951a6763574738729682f4b" compoundref="Emitter_8cpp" startline="154" endline="162">Hack::VirtualMachine::CodeStream::moveMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a63f901cea27d2aea7ce908221a7dcd29" compoundref="Emitter_8cpp" startline="116" endline="119">Hack::VirtualMachine::CodeStream::decrementA</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a191dcae54a330f670280a08629a5b6cc" compoundref="Emitter_8cpp" startline="239" endline="242">Hack::VirtualMachine::CodeStream::orDmIntoM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a2fdb4876761af2db20b9511303b432bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeReset</definition>
        <argsstring>()</argsstring>
        <name>writeReset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="105" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="750" bodyend="754"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a4fea9b6b37191464b43ba65b5a5e5685" compoundref="Emitter_8cpp" startline="85" endline="89">Hack::VirtualMachine::CodeStream::jumpToRomAddress</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a02fbd64d23b39a2a5b4bc631d94aedae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeReturn</definition>
        <argsstring>()</argsstring>
        <name>writeReturn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="119" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="859" bodyend="892"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa64fee49965171d8b1977dbb310fa314" compoundref="Emitter_8cpp" startline="337" endline="341">Hack::VirtualMachine::CodeStream::copyMIntoDAt</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827acf4f05429d20255bf7128cebaf158e72" compoundref="Constants_8h" startline="29">Hack::VirtualMachine::LCL</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a90a38165d26c1c452fdff88b0a83a928" compoundref="Emitter_8cpp" startline="169" endline="173">Hack::VirtualMachine::CodeStream::moveDIntoX</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827ac877118ac6aa475e26bcdc4dd5952f52" compoundref="Constants_8h" startline="35">Hack::VirtualMachine::SW0</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a6224864f8951a6763574738729682f4b" compoundref="Emitter_8cpp" startline="154" endline="162">Hack::VirtualMachine::CodeStream::moveMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a96425b2e3bba2e053c15308f32ed124a" compoundref="Emitter_8cpp" startline="59" endline="63">Hack::VirtualMachine::CodeStream::atDeReferencedAddressOf</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a8ca2cf3937e5c6f1e63ee3b602fdf814" compoundref="Constants_8h" startline="30">Hack::VirtualMachine::ARG</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a741754f2400fa7216c34d068f8f72cbd" compoundref="Emitter_8cpp" startline="181" endline="184">Hack::VirtualMachine::CodeStream::moveDIntoM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a7b3485d5bcdb0077f04a795300192aa1" compoundref="Emitter_8cpp" startline="259" endline="263">Hack::VirtualMachine::CodeStream::addXToD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a175bf06345174fcce65d1191e39a3003" compoundref="Emitter_8cpp" startline="49" endline="52">Hack::VirtualMachine::CodeStream::atAddressOf</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a863abda83f7c8925cceaf04098e3cb34" compoundref="Constants_8h" startline="28">Hack::VirtualMachine::STP</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1aa362e930130af35f89144bcb3408b85f" compoundref="Emitter_8cpp" startline="65" endline="72">Hack::VirtualMachine::CodeStream::popStackFrame</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a892ac688cf8f49defc936c85521c630b" compoundref="Constants_8h" startline="32">Hack::VirtualMachine::THT</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827a0edd4176219c47bc38b154d7319b2b0c" compoundref="Constants_8h" startline="31">Hack::VirtualMachine::THS</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab03c98b791f59029938061bb68180ea7" compoundref="Emitter_8cpp" startline="343" endline="347">Hack::VirtualMachine::CodeStream::moveMIntoDAt</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a8e21be8722f05faaf98bf330cc90cdb3" compoundref="Emitter_8cpp" startline="265" endline="269">Hack::VirtualMachine::CodeStream::subXFromD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a85ac74c78a8b176ded04af2096eac85d" compoundref="Emitter_8cpp" startline="349" endline="352">Hack::VirtualMachine::CodeStream::dereferenceD</references>
        <references refid="namespaceHack_1_1VirtualMachine_1ab2a36ae607c4ab166da225c1f6f71827ae6201d4edf7d9066f2245e0d75ac1805" compoundref="Constants_8h" startline="37">Hack::VirtualMachine::SW2</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a3c5bdd06abb474311bd67e86f4235573" compoundref="Emitter_8cpp" startline="359" endline="362">Hack::VirtualMachine::CodeStream::jumpToD</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1ace6851f1122c7b49eaf7363d0fd00311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writeSub</definition>
        <argsstring>()</argsstring>
        <name>writeSub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="91" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="649" bodyend="657"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a6224864f8951a6763574738729682f4b" compoundref="Emitter_8cpp" startline="154" endline="162">Hack::VirtualMachine::CodeStream::moveMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a63f901cea27d2aea7ce908221a7dcd29" compoundref="Emitter_8cpp" startline="116" endline="119">Hack::VirtualMachine::CodeStream::decrementA</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a881189b74424125c63a8424483775ae3" compoundref="Emitter_8cpp" startline="214" endline="217">Hack::VirtualMachine::CodeStream::subMdIntoM</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a732f25ca250ae685216a138788a8ab83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writGoto</definition>
        <argsstring>(const String &amp;value)</argsstring>
        <name>writGoto</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="109" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="766" bodyend="770"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a4fea9b6b37191464b43ba65b5a5e5685" compoundref="Emitter_8cpp" startline="85" endline="89">Hack::VirtualMachine::CodeStream::jumpToRomAddress</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1VirtualMachine_1_1Emitter_1a838a57865474ad8fed8f0d872ade28e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::Emitter::writIfGoto</definition>
        <argsstring>(const String &amp;value)</argsstring>
        <name>writIfGoto</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.h" line="111" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="772" bodyend="779"/>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="Emitter_8cpp" startline="301" endline="305">Hack::VirtualMachine::CodeStream::jumpStackTop</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a6224864f8951a6763574738729682f4b" compoundref="Emitter_8cpp" startline="154" endline="162">Hack::VirtualMachine::CodeStream::moveMIntoD</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1ab437fc0874dd768e6cad8960e446f870" compoundref="Emitter_8cpp" startline="121" endline="129">Hack::VirtualMachine::CodeStream::decrement</references>
        <references refid="classHack_1_1VirtualMachine_1_1CodeStream_1a514fbe2de487f40838e2f2e06375321a" compoundref="Emitter_8cpp" startline="331" endline="335">Hack::VirtualMachine::CodeStream::jumpIfNotEquals</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/VirtualMachine/Emitter.h" line="32" column="1" bodyfile="Source/VirtualMachine/Emitter.h" bodystart="31" bodyend="122"/>
    <listofallmembers>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1aa6b5ac5c97bec2417d1dfa1c439a0280" prot="private" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>_cmp</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a2a92e3c12f741967213cc4c6b461716b" prot="private" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>_functions</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1affa86d2748d6dd7e7ea5afac5cb9b2c4" prot="private" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>_stream</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1af262bc1ecd8d3450375f9f4e450a7c19" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>clear</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1aed412b794ba08f97702b7c9e1ddc936f" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>Emitter</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1afd58fa95f0cbf406512c90c9215c7a52" prot="private" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>genLabel</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a80a58b11a57fdcbd4f0a4ea91ddf029f" prot="private" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>getJumpLabels</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1abc0dabd1997693d70d9703aa4c861abd" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>popArgument</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a1eb323d646263c89efbd6b4b609709f6" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>popLocal</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a56edb8fc5daceb2c366c6a06709f5d51" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>popPointer</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a2fa0b264ae63445fad0a8db36d20075a" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>popStatic</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a144f81f654a07f4f2b488b9424629bfd" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>popTemp</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a2de462d5d98a35b4366d15d2801d157d" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>popThat</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a02258187ea3b8426a88a2a6d63dda0f4" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>popThis</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a5cbf52561c2c0e632664e9da1ef93b8d" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>pushArgument</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1aaa58d2ca0cd17e6d4a3b6dec96d53d76" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>pushConstant</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a8f6a6b66be4690f4b9aeb6eddfff713f" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>pushLocal</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1ab918a95684ae69febf08ff7df0dc7977" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>pushPointer</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a058483c1d4c8d8f37cb173df25aaf0cb" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>pushStatic</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a7e845f9ab740405fc8cac69e48e3f35e" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>pushTemp</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1af1a7a98b19545def95f6bc05e3e573d1" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>pushThat</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a0aa1816c96c0f6deb1971ef113a79af3" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>pushThis</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1aa6529297748da36b15e9ed7674ec60b2" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>setRam</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a3944cc6bbc9993953d7b4543af940128" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>stream</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1aa8ce88c353ba6d22e7540662e1df2a8a" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>StringStack</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1aaace24f338366621d97233f0a0505e38" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeAdd</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1ae83c1294d792a8a07a2c2d1ae42b65ae" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeAnd</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1ad150c2fea65ae75600e16c7af316999e" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeCall</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1aaf525ae23391a46b4ede8a6313f6a5d9" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeCode</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1ab7130849685d66f3dbfdb66516a6666b" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeEq</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1aab3f6bc5273771ec46046381c7253242" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeFunction</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a755e9953659ecf7df60423bd30dfe80c" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeGt</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a0257d1433f36b284b726033a6f6760f2" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeHalt</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1aaca9c3ae0e13532b9d44339d7ecbc06d" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeLabel</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a1628ba2540e176473ece7714482fd895" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeLt</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a2f860b25cccd5835f087d13a33f6f4ff" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeNeg</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a79e7c8b178799150cf1bc9a0179bfcc2" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeNot</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a5a9dd7c8028d6eb7a0f10f04d727ffb8" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeOr</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a2fdb4876761af2db20b9511303b432bc" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeReset</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a02fbd64d23b39a2a5b4bc631d94aedae" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeReturn</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1ace6851f1122c7b49eaf7363d0fd00311" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writeSub</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a732f25ca250ae685216a138788a8ab83" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writGoto</name></member>
      <member refid="classHack_1_1VirtualMachine_1_1Emitter_1a838a57865474ad8fed8f0d872ade28e2" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::Emitter</scope><name>writIfGoto</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
