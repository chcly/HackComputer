<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespaceHack" kind="namespace" language="C++">
    <compoundname>Hack</compoundname>
    <innerclass refid="classHack_1_1Cache" prot="public">Hack::Cache</innerclass>
    <innerclass refid="classHack_1_1Char" prot="public">Hack::Char</innerclass>
    <innerclass refid="classHack_1_1Console" prot="public">Hack::Console</innerclass>
    <innerclass refid="classHack_1_1Exception" prot="public">Hack::Exception</innerclass>
    <innerclass refid="classHack_1_1FileSystem" prot="public">Hack::FileSystem</innerclass>
    <innerclass refid="classHack_1_1IndexCache" prot="public">Hack::IndexCache</innerclass>
    <innerclass refid="classHack_1_1KeyIndexCache" prot="public">Hack::KeyIndexCache</innerclass>
    <innerclass refid="classHack_1_1ParseError" prot="public">Hack::ParseError</innerclass>
    <innerclass refid="classHack_1_1ParserBase" prot="public">Hack::ParserBase</innerclass>
    <innerclass refid="classHack_1_1ScannerBase" prot="public">Hack::ScannerBase</innerclass>
    <innerclass refid="classHack_1_1StringUtils" prot="public">Hack::StringUtils</innerclass>
    <innerclass refid="classHack_1_1TokenBase" prot="public">Hack::TokenBase</innerclass>
    <innernamespace refid="namespaceHack_1_1Assembler">Hack::Assembler</innernamespace>
    <innernamespace refid="namespaceHack_1_1Binding">Hack::Binding</innernamespace>
    <innernamespace refid="namespaceHack_1_1Chips">Hack::Chips</innernamespace>
    <innernamespace refid="namespaceHack_1_1CommandLine">Hack::CommandLine</innernamespace>
    <innernamespace refid="namespaceHack_1_1Compiler">Hack::Compiler</innernamespace>
    <innernamespace refid="namespaceHack_1_1Computer">Hack::Computer</innernamespace>
    <innernamespace refid="namespaceHack_1_1OperatingSystem">Hack::OperatingSystem</innernamespace>
    <innernamespace refid="namespaceHack_1_1Programs">Hack::Programs</innernamespace>
    <innernamespace refid="namespaceHack_1_1Ui">Hack::Ui</innernamespace>
    <innernamespace refid="namespaceHack_1_1VirtualMachine">Hack::VirtualMachine</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422" prot="public" static="no" strong="no">
        <type></type>
        <name>ConsoleColor</name>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422ac12944af8b48da06fea92305e07d5a86" prot="public">
          <name>CS_BLACK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422a3e322f5c257e1d60511f9efb852499ff" prot="public">
          <name>CS_DARK_BLUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422a4a0ef12656585d3d7de9098f4a367ed8" prot="public">
          <name>CS_DARK_GREEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422aabe6734a69d20b2eb87d53460411647f" prot="public">
          <name>CS_DARK_CYAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422a5087dcb93e87c9ccb9cebeb709dd670c" prot="public">
          <name>CS_DARK_RED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422aa6617dec2367bd28f31ca80b8f85be5c" prot="public">
          <name>CS_DARK_MAGENTA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422acec9e9d56bbc26b7aa4e07ecae158fb3" prot="public">
          <name>CS_DARK_YELLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422a33f74366ed335de9402ded1513faa1fd" prot="public">
          <name>CS_LIGHT_GREY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422a7a3a406783331d9982717cda0c4b9d32" prot="public">
          <name>CS_GREY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422a83887a2dd719baca7ae876a83a5dcdf0" prot="public">
          <name>CS_BLUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422ad8940f15cc539c584cab06a6254e3fcb" prot="public">
          <name>CS_GREEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422acb0eff31aec39069dc2b5065415a3e4c" prot="public">
          <name>CS_CYAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422a85995eae0ed8467e1a9f39691004a08e" prot="public">
          <name>CS_RED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422a3be7623273d8f4f63c18cbd69a265f93" prot="public">
          <name>CS_MAGENTA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422a341ebe38c827def41083c99fcc558b49" prot="public">
          <name>CS_YELLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422aad0499502630b8e0c45c07d85d8dd477" prot="public">
          <name>CS_WHITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Console.h" line="29" column="1" bodyfile="Source/Utils/Console.h" bodystart="28" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceHack_1a8babd9628a6940a2d49cd7fb5993819d" prot="public" static="no">
        <type>std::filesystem::directory_entry</type>
        <definition>using Hack::Directory = typedef std::filesystem::directory_entry</definition>
        <argsstring></argsstring>
        <name>Directory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/FileSystem.cpp" line="26" column="1" bodyfile="Source/Utils/FileSystem.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1a069b2b49d9f6855f21d1077654021188" prot="public" static="no">
        <type>std::ifstream</type>
        <definition>using Hack::InputFileStream = typedef std::ifstream</definition>
        <argsstring></argsstring>
        <name>InputFileStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/FileSystem.h" line="30" column="1" bodyfile="Source/Utils/FileSystem.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1ab983b76961e0322ec2ffdfd7d0e17a6c" prot="public" static="no">
        <type>std::istringstream</type>
        <definition>using Hack::InputStringStream = typedef std::istringstream</definition>
        <argsstring></argsstring>
        <name>InputStringStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="33" column="1" bodyfile="Source/Utils/String.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1a0fe26662b7931e1996129243b3461d14" prot="public" static="no">
        <type><ref refid="classHack_1_1IndexCache" kindref="compound">IndexCache</ref>&lt; int &gt;</type>
        <definition>using Hack::IntTable = typedef IndexCache&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>IntTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/ParserBase/ScannerBase.h" line="29" column="1" bodyfile="Source/Utils/ParserBase/ScannerBase.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1a830c8eb3c005ef2fbc470e0b141b93c5" prot="public" static="no">
        <type>std::istream</type>
        <definition>using Hack::IStream = typedef std::istream</definition>
        <argsstring></argsstring>
        <name>IStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="35" column="1" bodyfile="Source/Utils/String.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1a404ae4dff97be2fec362955db83690da" prot="public" static="no">
        <type>std::ostream</type>
        <definition>using Hack::OStream = typedef std::ostream</definition>
        <argsstring></argsstring>
        <name>OStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="36" column="1" bodyfile="Source/Utils/String.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1a068aa148c32623cf89bbf84e2ece8ed1" prot="public" static="no">
        <type>std::ofstream</type>
        <definition>using Hack::OutputFileStream = typedef std::ofstream</definition>
        <argsstring></argsstring>
        <name>OutputFileStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/FileSystem.h" line="31" column="1" bodyfile="Source/Utils/FileSystem.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1ae3a6ca87ce783b824591a2858b2409a1" prot="public" static="no">
        <type>std::ostringstream</type>
        <definition>using Hack::OutputStringStream = typedef std::ostringstream</definition>
        <argsstring></argsstring>
        <name>OutputStringStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="34" column="1" bodyfile="Source/Utils/String.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1a95e191d8af73e79ac197701ac6a6c9a6" prot="public" static="no">
        <type>std::filesystem::path</type>
        <definition>using Hack::Path = typedef std::filesystem::path</definition>
        <argsstring></argsstring>
        <name>Path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/FileSystem.h" line="33" column="1" bodyfile="Source/Utils/FileSystem.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1a7c50e21fc90ae27988ef26dd0b40a118" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespaceHack_1a95e191d8af73e79ac197701ac6a6c9a6" kindref="member">Path</ref> &gt;</type>
        <definition>using Hack::PathArray = typedef std::vector&lt;Path&gt;</definition>
        <argsstring></argsstring>
        <name>PathArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/FileSystem.h" line="34" column="1" bodyfile="Source/Utils/FileSystem.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" prot="public" static="no">
        <type>std::string</type>
        <definition>using Hack::String = typedef std::string</definition>
        <argsstring></argsstring>
        <name>String</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="30" column="1" bodyfile="Source/Utils/String.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1a02a62f0f81901a275e5e91f45798b2de" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>using Hack::StringArray = typedef std::vector&lt;std::string&gt;</definition>
        <argsstring></argsstring>
        <name>StringArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="31" column="1" bodyfile="Source/Utils/String.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1a3359517a07995b79651874c054caa348" prot="public" static="no">
        <type>std::stringstream</type>
        <definition>using Hack::StringStream = typedef std::stringstream</definition>
        <argsstring></argsstring>
        <name>StringStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="32" column="1" bodyfile="Source/Utils/String.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceHack_1ae83ea09a8716690d1b9e9e8b462e5960" prot="public" static="no">
        <type><ref refid="classHack_1_1IndexCache" kindref="compound">IndexCache</ref>&lt; <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &gt;</type>
        <definition>using Hack::StringTable = typedef IndexCache&lt;String&gt;</definition>
        <argsstring></argsstring>
        <name>StringTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/ParserBase/ScannerBase.h" line="28" column="1" bodyfile="Source/Utils/ParserBase/ScannerBase.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceHack_1a041cfca460e5405322e744c8081279a6" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422" kindref="member">ConsoleColor</ref></type>
        <definition>ConsoleColor Hack::__gBackground</definition>
        <argsstring></argsstring>
        <name>__gBackground</name>
        <initializer>= <ref refid="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422ac12944af8b48da06fea92305e07d5a86" kindref="member">CS_BLACK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Console.cpp" line="33" column="1" bodyfile="Source/Utils/Console.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1a31eb56db00653252b73a1d6f1aef8fb1" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422" kindref="member">ConsoleColor</ref></type>
        <definition>ConsoleColor Hack::__gForeground</definition>
        <argsstring></argsstring>
        <name>__gForeground</name>
        <initializer>= <ref refid="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422aad0499502630b8e0c45c07d85d8dd477" kindref="member">CS_WHITE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Console.cpp" line="32" column="1" bodyfile="Source/Utils/Console.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1ae7e3e66ba861ebc2a81c74fab64eca4a" prot="public" static="no" mutable="no">
        <type>constexpr char</type>
        <definition>constexpr char Hack::BaseChars[]</definition>
        <argsstring>[]</argsstring>
        <name>BaseChars</name>
        <initializer>= {
        &apos;D&apos;, &apos;c&apos;, &apos;U&apos;, &apos;y&apos;, &apos;3&apos;, &apos;b&apos;, &apos;C&apos;, &apos;g&apos;,
        &apos;p&apos;, &apos;J&apos;, &apos;9&apos;, &apos;L&apos;, &apos;p&apos;, &apos;J&apos;, &apos;0&apos;, &apos;A&apos;,
        &apos;W&apos;, &apos;o&apos;, &apos;x&apos;, &apos;O&apos;, &apos;a&apos;, &apos;N&apos;, &apos;u&apos;, &apos;8&apos;,
        &apos;n&apos;, &apos;x&apos;, &apos;7&apos;, &apos;s&apos;, &apos;E&apos;, &apos;z&apos;, &apos;h&apos;, &apos;E&apos;,
        &apos;q&apos;, &apos;Z&apos;, &apos;L&apos;, &apos;4&apos;, &apos;F&apos;, &apos;2&apos;, &apos;Q&apos;, &apos;i&apos;,
        &apos;S&apos;, &apos;K&apos;, &apos;w&apos;, &apos;G&apos;, &apos;r&apos;, &apos;f&apos;, &apos;1&apos;, &apos;Z&apos;,
        &apos;d&apos;, &apos;t&apos;, &apos;Y&apos;, &apos;5&apos;, &apos;I&apos;, &apos;3&apos;, &apos;K&apos;, &apos;t&apos;,
        &apos;B&apos;, &apos;6&apos;, &apos;a&apos;, &apos;R&apos;, &apos;l&apos;, &apos;H&apos;, &apos;m&apos;, &apos;M&apos;,
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.cpp" line="118" column="1" bodyfile="Source/Utils/String.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceHack_1ab2f01cb6501d226bff7dec88849a0f23" prot="public" static="no" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t Hack::BaseCharsSize</definition>
        <argsstring></argsstring>
        <name>BaseCharsSize</name>
        <initializer>= sizeof <ref refid="namespaceHack_1ae7e3e66ba861ebc2a81c74fab64eca4a" kindref="member">BaseChars</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.cpp" line="130" column="1" bodyfile="Source/Utils/String.cpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceHack_1acedcdb10c14663034876ff1f2d01c86c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::CrtDump</definition>
        <argsstring>()</argsstring>
        <name>CrtDump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Win32/CrtUtils.cpp" line="55" column="1" bodyfile="Source/Utils/Win32/CrtUtils.cpp" bodystart="55" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1a8ab6304471ef372d768f7c50db9432b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::CrtTestMemory</definition>
        <argsstring>()</argsstring>
        <name>CrtTestMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Win32/CrtUtils.cpp" line="40" column="1" bodyfile="Source/Utils/Win32/CrtUtils.cpp" bodystart="40" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1a3072f15c6cc44192ad127f00ab7430cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::isDecimal</definition>
        <argsstring>(const int ch)</argsstring>
        <name>isDecimal</name>
        <param>
          <type>const int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para><simplesect kind="return"><para>True if the character is in the range of [0-9]</para></simplesect>
</para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Char.h" line="191" column="1" bodyfile="Source/Utils/Char.h" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1a3b7e26319acf069b65ddb8e0f3f34812" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::isLetter</definition>
        <argsstring>(const int ch)</argsstring>
        <name>isLetter</name>
        <param>
          <type>const int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para><simplesect kind="return"><para>True if the character is in the range of [a-zA-Z]</para></simplesect>
</para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Char.h" line="197" column="1" bodyfile="Source/Utils/Char.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1a997ba9c78deb35bd113a03a3da54f8cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::isNewLine</definition>
        <argsstring>(const int constant)</argsstring>
        <name>isNewLine</name>
        <param>
          <type>const int</type>
          <declname>constant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the supplied constant is a line feed character or a carriage return character. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Char.h" line="176" column="1" bodyfile="Source/Utils/Char.h" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1afe2cb1512758851b265f12637bd5ec7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::isWhiteSpace</definition>
        <argsstring>(const int ch)</argsstring>
        <name>isWhiteSpace</name>
        <param>
          <type>const int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the character is a white space character, tab character or a newline character. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Char.h" line="185" column="1" bodyfile="Source/Utils/Char.h" bodystart="185" bodyend="188"/>
        <references refid="namespaceHack_1a997ba9c78deb35bd113a03a3da54f8cd" compoundref="Char_8h" startline="176" endline="179">isNewLine</references>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1aa7cb53a739bf7a43f184136d60bbd6d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
        <definition>static uint8_t Hack::MapColor</definition>
        <argsstring>(const ConsoleColor &amp;col, bool bg)</argsstring>
        <name>MapColor</name>
        <param>
          <type>const <ref refid="namespaceHack_1a36cd9148d33ac143e1ab550c0cc95422" kindref="member">ConsoleColor</ref> &amp;</type>
          <declname>col</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Console.cpp" line="36" column="1" bodyfile="Source/Utils/Console.cpp" bodystart="36" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1a92c69899a09a2e10c63aa0ed739cdad3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Hack::SetColor</definition>
        <argsstring>()</argsstring>
        <name>SetColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/Console.cpp" line="97" column="1" bodyfile="Source/Utils/Console.cpp" bodystart="97" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1a5364723a01adba9b9d85c38f1cb8e9df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Hack::StreamMerge</definition>
        <argsstring>(OutputStringStream &amp;dest, Args &amp;&amp;...args)</argsstring>
        <name>StreamMerge</name>
        <param>
          <type><ref refid="namespaceHack_1ae3a6ca87ce783b824591a2858b2409a1" kindref="member">OutputStringStream</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="63" column="1" bodyfile="Source/Utils/String.h" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1a0022073c844c619a094704ae6c9b14bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Hack::StringCombine</definition>
        <argsstring>(String &amp;dest, Args &amp;&amp;...args)</argsstring>
        <name>StringCombine</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="71" column="1" bodyfile="Source/Utils/String.h" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1ab53f5c42920e217a6da19d1e7b0bed33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref></type>
        <definition>String Hack::StringCombine</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>StringCombine</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Utils/String.h" line="79" column="1" bodyfile="Source/Utils/String.h" bodystart="79" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1" column="1"/>
  </compounddef>
</doxygen>
