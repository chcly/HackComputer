<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable" kind="class" language="C++" prot="public">
    <compoundname>Hack::Compiler::CodeGenerator::SymbolTable</compoundname>
    <includes local="no">Source/Compiler/Generator/SymbolTable.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a0d8e87a96b187b220864d705fe0b4d6d" prot="public" static="no">
        <type>Symbols::Array::const_iterator</type>
        <definition>typedef Symbols::Array::const_iterator Hack::Compiler::CodeGenerator::SymbolTable::Iterator</definition>
        <argsstring></argsstring>
        <name>Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="32" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a4fb879b16caeacc3226834a066bcd793" prot="public" static="no">
        <type><ref refid="classHack_1_1KeyIndexCache" kindref="compound">KeyIndexCache</ref>&lt; <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref>, <ref refid="classHack_1_1Compiler_1_1CodeGenerator_1_1Symbol" kindref="compound">Symbol</ref> &gt;</type>
        <definition>typedef KeyIndexCache&lt;String, Symbol&gt; Hack::Compiler::CodeGenerator::SymbolTable::Symbols</definition>
        <argsstring></argsstring>
        <name>Symbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="31" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1ade6097cd87d113c87081c3f0f29adddc" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Hack::Compiler::CodeGenerator::SymbolTable::_argument</definition>
        <argsstring></argsstring>
        <name>_argument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="39" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a0ef9c8868d7469643261784e873c0e7b" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Hack::Compiler::CodeGenerator::SymbolTable::_field</definition>
        <argsstring></argsstring>
        <name>_field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="36" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a731aea79d885743d9ec90e03ec0b6cb6" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Hack::Compiler::CodeGenerator::SymbolTable::_local</definition>
        <argsstring></argsstring>
        <name>_local</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="38" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a423d788929a2c3828f37c86c548711a9" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Hack::Compiler::CodeGenerator::SymbolTable::_static</definition>
        <argsstring></argsstring>
        <name>_static</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="37" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a56bd79e04a9c4c1f44d83e226843d144" prot="private" static="no" mutable="no">
        <type><ref refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a4fb879b16caeacc3226834a066bcd793" kindref="member">Symbols</ref></type>
        <definition>Symbols Hack::Compiler::CodeGenerator::SymbolTable::_symbols</definition>
        <argsstring></argsstring>
        <name>_symbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="35" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a2aded908190c142bd2f0ca5af51e49ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Compiler::CodeGenerator::SymbolTable::SymbolTable</definition>
        <argsstring>()</argsstring>
        <name>SymbolTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="42" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.cpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a7816b673744e8e227af22eb786d60243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Compiler::CodeGenerator::SymbolTable::~SymbolTable</definition>
        <argsstring>()</argsstring>
        <name>~SymbolTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a892911564f8c98df29757a46e769fdf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Hack::Compiler::CodeGenerator::SymbolTable::argumentCount</definition>
        <argsstring>() const</argsstring>
        <name>argumentCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="59" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a1f60af6db5e447baca76af69b0a271c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a0d8e87a96b187b220864d705fe0b4d6d" kindref="member">Iterator</ref></type>
        <definition>SymbolTable::Iterator Hack::Compiler::CodeGenerator::SymbolTable::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="64" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="91" bodyend="94"/>
        <references refid="classHack_1_1KeyIndexCache_1a0fd5eea2e8058e139b2271454be62582" compoundref="IndexCache_8h" startline="219" endline="222">Hack::KeyIndexCache&lt; Key, Value &gt;::begin</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1ab81396209682f9143daa360bd07359d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::SymbolTable::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="62" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.cpp" bodystart="82" bodyend="89"/>
        <references refid="classHack_1_1KeyIndexCache_1a18b96df1b4ddc75f5ddf9bcc10c204bc" compoundref="IndexCache_8h" startline="213" endline="217">Hack::KeyIndexCache&lt; Key, Value &gt;::clear</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a848c4357a0a30607202d20ca7497129e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Compiler::CodeGenerator::SymbolTable::contains</definition>
        <argsstring>(const String &amp;name) const</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="47" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.cpp" bodystart="60" bodyend="63"/>
        <references refid="classHack_1_1KeyIndexCache_1abbd89fa863fa95aec96f703443b61d94" compoundref="IndexCache_8h" startline="187" endline="192">Hack::KeyIndexCache&lt; Key, Value &gt;::contains</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a8d9d9de9a0be606c74f2e01ae8234745" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a0d8e87a96b187b220864d705fe0b4d6d" kindref="member">Iterator</ref></type>
        <definition>SymbolTable::Iterator Hack::Compiler::CodeGenerator::SymbolTable::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="66" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="96" bodyend="99"/>
        <references refid="classHack_1_1KeyIndexCache_1ac978b9fc09833bb518f501feb90021ff" compoundref="IndexCache_8h" startline="224" endline="227">Hack::KeyIndexCache&lt; Key, Value &gt;::end</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1aff6d1f022b85f019432f46a1ff7af054" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Hack::Compiler::CodeGenerator::SymbolTable::fieldCount</definition>
        <argsstring>() const</argsstring>
        <name>fieldCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="53" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a88ca038b8ddded062c6796edb530c66b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classHack_1_1Compiler_1_1CodeGenerator_1_1Symbol" kindref="compound">Symbol</ref> &amp;</type>
        <definition>const Symbol &amp; Hack::Compiler::CodeGenerator::SymbolTable::get</definition>
        <argsstring>(const String &amp;name) const</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="49" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.cpp" bodystart="65" bodyend="72"/>
        <references refid="classHack_1_1KeyIndexCache_1a68a725c8077e9a3cb9547ee718a9fe24" compoundref="IndexCache_8h" startline="200" endline="206">Hack::KeyIndexCache&lt; Key, Value &gt;::find</references>
        <references refid="classHack_1_1KeyIndexCache_1a011e81ec8452fc7ceeef5b91b4e3cd81" compoundref="IndexCache_8h" startline="172" endline="178">Hack::KeyIndexCache&lt; Key, Value &gt;::at</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1ab72950f96e7167af1a858d22b9078305" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classHack_1_1Compiler_1_1CodeGenerator_1_1Symbol" kindref="compound">Symbol</ref> &amp;</type>
        <definition>const Symbol &amp; Hack::Compiler::CodeGenerator::SymbolTable::get</definition>
        <argsstring>(const size_t &amp;idx) const</argsstring>
        <name>get</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="51" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.cpp" bodystart="74" bodyend="80"/>
        <references refid="classHack_1_1KeyIndexCache_1abbd89fa863fa95aec96f703443b61d94" compoundref="IndexCache_8h" startline="187" endline="192">Hack::KeyIndexCache&lt; Key, Value &gt;::contains</references>
        <references refid="classHack_1_1KeyIndexCache_1a011e81ec8452fc7ceeef5b91b4e3cd81" compoundref="IndexCache_8h" startline="172" endline="178">Hack::KeyIndexCache&lt; Key, Value &gt;::at</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a3d2e48de0e04c590fb3dbbd4aa322f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::SymbolTable::insert</definition>
        <argsstring>(const String &amp;name, int8_t type, int8_t kind)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="45" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.cpp" bodystart="36" bodyend="58"/>
        <references refid="classHack_1_1KeyIndexCache_1abbd89fa863fa95aec96f703443b61d94" compoundref="IndexCache_8h" startline="187" endline="192">Hack::KeyIndexCache&lt; Key, Value &gt;::contains</references>
        <references refid="namespaceHack_1_1Compiler_1_1CodeGenerator_1ac08293c0a6cadd380abba4ce7069b7bcac16d59cf9aa39e37737b703b8d21a9ee" compoundref="Symbol_8h" startline="32">Hack::Compiler::CodeGenerator::Local</references>
        <references refid="classHack_1_1KeyIndexCache_1afb44ce29acae57afb72dff25a7cf742e" compoundref="IndexCache_8h" startline="154" endline="170">Hack::KeyIndexCache&lt; Key, Value &gt;::insert</references>
        <references refid="namespaceHack_1_1Compiler_1_1CodeGenerator_1ac08293c0a6cadd380abba4ce7069b7bcac846b86715799a34e6b35cfef36ea1bb" compoundref="Symbol_8h" startline="33">Hack::Compiler::CodeGenerator::Argument</references>
        <references refid="namespaceHack_1_1Compiler_1_1CodeGenerator_1ac08293c0a6cadd380abba4ce7069b7bca4e24ef81cf7ed83a94dc616bb8b510a8" compoundref="Symbol_8h" startline="31">Hack::Compiler::CodeGenerator::Static</references>
        <references refid="namespaceHack_1_1Compiler_1_1CodeGenerator_1ac08293c0a6cadd380abba4ce7069b7bca758124b318712f1ca6e7abfcceb26517" compoundref="Symbol_8h" startline="30">Hack::Compiler::CodeGenerator::Field</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1adbb678fa100f3f16045a3dd2a6b19c2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Hack::Compiler::CodeGenerator::SymbolTable::localCount</definition>
        <argsstring>() const</argsstring>
        <name>localCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="57" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a5fe79191360de781057e5ac3f4ceea88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Hack::Compiler::CodeGenerator::SymbolTable::staticCount</definition>
        <argsstring>() const</argsstring>
        <name>staticCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/SymbolTable.h" line="55" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="75" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Compiler/Generator/SymbolTable.h" line="29" column="1" bodyfile="Source/Compiler/Generator/SymbolTable.h" bodystart="28" bodyend="67"/>
    <listofallmembers>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1ade6097cd87d113c87081c3f0f29adddc" prot="private" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>_argument</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a0ef9c8868d7469643261784e873c0e7b" prot="private" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>_field</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a731aea79d885743d9ec90e03ec0b6cb6" prot="private" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>_local</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a423d788929a2c3828f37c86c548711a9" prot="private" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>_static</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a56bd79e04a9c4c1f44d83e226843d144" prot="private" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>_symbols</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a892911564f8c98df29757a46e769fdf2" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>argumentCount</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a1f60af6db5e447baca76af69b0a271c6" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>begin</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1ab81396209682f9143daa360bd07359d9" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>clear</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a848c4357a0a30607202d20ca7497129e" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>contains</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a8d9d9de9a0be606c74f2e01ae8234745" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>end</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1aff6d1f022b85f019432f46a1ff7af054" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>fieldCount</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a88ca038b8ddded062c6796edb530c66b" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>get</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1ab72950f96e7167af1a858d22b9078305" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>get</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a3d2e48de0e04c590fb3dbbd4aa322f84" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>insert</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a0d8e87a96b187b220864d705fe0b4d6d" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>Iterator</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1adbb678fa100f3f16045a3dd2a6b19c2e" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>localCount</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a5fe79191360de781057e5ac3f4ceea88" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>staticCount</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a4fb879b16caeacc3226834a066bcd793" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>Symbols</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a2aded908190c142bd2f0ca5af51e49ee" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>SymbolTable</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1SymbolTable_1a7816b673744e8e227af22eb786d60243" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::SymbolTable</scope><name>~SymbolTable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
