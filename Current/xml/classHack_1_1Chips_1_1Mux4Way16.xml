<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Chips_1_1Mux4Way16" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Hack::Chips::Mux4Way16</compoundname>
    <basecompoundref refid="classHack_1_1Chips_1_1Chip" prot="public" virt="non-virtual">Hack::Chips::Chip&lt; bit64_t, 64 &gt;</basecompoundref>
    <includes local="no">Source/Chips/Mux4Way16.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Mux4Way16_1a7976c63374d153aacb3e93c6373f0f0a" prot="private" static="no" mutable="no">
        <type><ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
        <definition>uint8_t Hack::Chips::Mux4Way16::_flags</definition>
        <argsstring></argsstring>
        <name>_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux4Way16.h" line="32" column="1" bodyfile="Source/Chips/Mux4Way16.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Mux4Way16_1aad0d35aa0dffea1c871d68c2d5385943" prot="private" static="no" mutable="no">
        <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>uint16_t Hack::Chips::Mux4Way16::_out</definition>
        <argsstring></argsstring>
        <name>_out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux4Way16.h" line="33" column="1" bodyfile="Source/Chips/Mux4Way16.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHack_1_1Chips_1_1Mux4Way16_1a273fb5ff5663e9b67047b9c19a213ad0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Mux4Way16::evaluate</definition>
        <argsstring>()</argsstring>
        <name>evaluate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux4Way16.h" line="30" column="1" bodyfile="Source/Chips/Mux4Way16.cpp" bodystart="71" bodyend="104"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Chips_1_1Mux4Way16_1a89b2c7bd11b3a18a0e7b4cfbcb5255aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Chips::Mux4Way16::Mux4Way16</definition>
        <argsstring>()</argsstring>
        <name>Mux4Way16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux4Way16.h" line="36" column="1" bodyfile="Source/Chips/Mux4Way16.cpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Mux4Way16_1a382fc2a7d2fff224a70e4420e4d74b2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>uint16_t Hack::Chips::Mux4Way16::getOut</definition>
        <argsstring>()</argsstring>
        <name>getOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux4Way16.h" line="45" column="1" bodyfile="Source/Chips/Mux4Way16.cpp" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Mux4Way16_1a89dda32a00ef6c72e87edf0b7c7d1506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Mux4Way16::setA</definition>
        <argsstring>(const uint16_t &amp;v)</argsstring>
        <name>setA</name>
        <param>
          <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux4Way16.h" line="38" column="1" bodyfile="Source/Chips/Mux4Way16.cpp" bodystart="33" bodyend="37"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" compoundref="Chip_8h" startline="49">Hack::Chips::Chip&lt; bit64_t, 64 &gt;::_bits</references>
        <references refid="unionHack_1_1Chips_1_1bit64__t_1af415893333942f41fb4c4ad619083a16" compoundref="BitUtils_8h" startline="78">Hack::Chips::bit64_t::s</references>
        <references refid="classHack_1_1Chips_1_1BitUtils_1ab1a8c5970c7a58f399c82c96c872a920" compoundref="BitUtils_8h" startline="214" endline="217">Hack::Chips::BitUtils&lt; T, Count &gt;::setBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Mux4Way16_1a04e74e897da70acc2084aa9d4f22def4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Mux4Way16::setB</definition>
        <argsstring>(const uint16_t &amp;v)</argsstring>
        <name>setB</name>
        <param>
          <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux4Way16.h" line="39" column="1" bodyfile="Source/Chips/Mux4Way16.cpp" bodystart="39" bodyend="43"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" compoundref="Chip_8h" startline="49">Hack::Chips::Chip&lt; bit64_t, 64 &gt;::_bits</references>
        <references refid="unionHack_1_1Chips_1_1bit64__t_1af415893333942f41fb4c4ad619083a16" compoundref="BitUtils_8h" startline="78">Hack::Chips::bit64_t::s</references>
        <references refid="classHack_1_1Chips_1_1BitUtils_1ab1a8c5970c7a58f399c82c96c872a920" compoundref="BitUtils_8h" startline="214" endline="217">Hack::Chips::BitUtils&lt; T, Count &gt;::setBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Mux4Way16_1a61a72328f8b0191142d1fe60a5d8ee53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Mux4Way16::setC</definition>
        <argsstring>(const uint16_t &amp;v)</argsstring>
        <name>setC</name>
        <param>
          <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux4Way16.h" line="40" column="1" bodyfile="Source/Chips/Mux4Way16.cpp" bodystart="45" bodyend="49"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" compoundref="Chip_8h" startline="49">Hack::Chips::Chip&lt; bit64_t, 64 &gt;::_bits</references>
        <references refid="unionHack_1_1Chips_1_1bit64__t_1af415893333942f41fb4c4ad619083a16" compoundref="BitUtils_8h" startline="78">Hack::Chips::bit64_t::s</references>
        <references refid="classHack_1_1Chips_1_1BitUtils_1ab1a8c5970c7a58f399c82c96c872a920" compoundref="BitUtils_8h" startline="214" endline="217">Hack::Chips::BitUtils&lt; T, Count &gt;::setBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Mux4Way16_1a2f5cb78ec61da56b6b09cefa0aecb71f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Mux4Way16::setD</definition>
        <argsstring>(const uint16_t &amp;v)</argsstring>
        <name>setD</name>
        <param>
          <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux4Way16.h" line="41" column="1" bodyfile="Source/Chips/Mux4Way16.cpp" bodystart="51" bodyend="55"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" compoundref="Chip_8h" startline="49">Hack::Chips::Chip&lt; bit64_t, 64 &gt;::_bits</references>
        <references refid="unionHack_1_1Chips_1_1bit64__t_1af415893333942f41fb4c4ad619083a16" compoundref="BitUtils_8h" startline="78">Hack::Chips::bit64_t::s</references>
        <references refid="classHack_1_1Chips_1_1BitUtils_1ab1a8c5970c7a58f399c82c96c872a920" compoundref="BitUtils_8h" startline="214" endline="217">Hack::Chips::BitUtils&lt; T, Count &gt;::setBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Mux4Way16_1abaa152acf1be764df397d7fa3b20dd7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Mux4Way16::setSel</definition>
        <argsstring>(uint8_t v)</argsstring>
        <name>setSel</name>
        <param>
          <type><ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Mux4Way16.h" line="43" column="1" bodyfile="Source/Chips/Mux4Way16.cpp" bodystart="57" bodyend="62"/>
        <references refid="classHack_1_1Chips_1_1BitUtils_1a266db4b38d31abd421bdb6356b6d8f6a" compoundref="BitUtils_8h" startline="240" endline="243">Hack::Chips::BitUtils&lt; T, Count &gt;::applyBit</references>
        <references refid="classHack_1_1Chips_1_1BitUtils_1ab1a8c5970c7a58f399c82c96c872a920" compoundref="BitUtils_8h" startline="214" endline="217">Hack::Chips::BitUtils&lt; T, Count &gt;::setBit</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="182">
        <label>Hack::Chips::Mux4Way16</label>
        <link refid="classHack_1_1Chips_1_1Mux4Way16"/>
        <childnode refid="183" relation="public-inheritance">
        </childnode>
      </node>
      <node id="183">
        <label>Hack::Chips::Chip&lt; bit64_t, 64 &gt;</label>
        <link refid="classHack_1_1Chips_1_1Chip"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="187">
        <label>uint64_t</label>
      </node>
      <node id="188">
        <label>uint16_t</label>
        <link refid="classuint16__t"/>
      </node>
      <node id="189">
        <label>uint32_t</label>
      </node>
      <node id="190">
        <label>uint8_t</label>
        <link refid="classuint8__t"/>
      </node>
      <node id="186">
        <label>Hack::Chips::bit64_t</label>
        <link refid="unionHack_1_1Chips_1_1bit64__t"/>
        <childnode refid="187" relation="usage">
          <edgelabel>ll</edgelabel>
        </childnode>
        <childnode refid="188" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
        <childnode refid="189" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
        <childnode refid="190" relation="usage">
          <edgelabel>b</edgelabel>
        </childnode>
      </node>
      <node id="184">
        <label>Hack::Chips::Mux4Way16</label>
        <link refid="classHack_1_1Chips_1_1Mux4Way16"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="185">
        <label>Hack::Chips::Chip&lt; bit64_t, 64 &gt;</label>
        <link refid="classHack_1_1Chips_1_1Chip"/>
        <childnode refid="186" relation="usage">
          <edgelabel>_bits</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Source/Chips/Mux4Way16.h" line="28" column="1" bodyfile="Source/Chips/Mux4Way16.h" bodystart="27" bodyend="46"/>
    <listofallmembers>
      <member refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" prot="protected" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>_bits</name></member>
      <member refid="classHack_1_1Chips_1_1Mux4Way16_1a7976c63374d153aacb3e93c6373f0f0a" prot="private" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>_flags</name></member>
      <member refid="classHack_1_1Chips_1_1Mux4Way16_1aad0d35aa0dffea1c871d68c2d5385943" prot="private" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>_out</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a1971f958edb5fa83790baa14c9d39ee8" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>applyBit</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a5a604431fa35bc87e0d7f4328b4ad4a1" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>assignBit</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a485588367ebaefcaaec8847faffe8870" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>Chip</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a21ec8cfbaba9e08deb3607c7eff9ad63" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>clearBit</name></member>
      <member refid="classHack_1_1Chips_1_1Mux4Way16_1a273fb5ff5663e9b67047b9c19a213ad0" prot="private" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>evaluate</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>getBit</name></member>
      <member refid="classHack_1_1Chips_1_1Mux4Way16_1a382fc2a7d2fff224a70e4420e4d74b2c" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>getOut</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a63bb368bb0827830235759b33718d1b4" prot="protected" virt="virtual"><scope>Hack::Chips::Mux4Way16</scope><name>isDirty</name></member>
      <member refid="classHack_1_1Chips_1_1Mux4Way16_1a89b2c7bd11b3a18a0e7b4cfbcb5255aa" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>Mux4Way16</name></member>
      <member refid="classHack_1_1Chips_1_1Mux4Way16_1a89dda32a00ef6c72e87edf0b7c7d1506" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>setA</name></member>
      <member refid="classHack_1_1Chips_1_1Mux4Way16_1a04e74e897da70acc2084aa9d4f22def4" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>setB</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a1240a9c5045e3dfcb5595700b6c474d6" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>setBit</name></member>
      <member refid="classHack_1_1Chips_1_1Mux4Way16_1a61a72328f8b0191142d1fe60a5d8ee53" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>setC</name></member>
      <member refid="classHack_1_1Chips_1_1Mux4Way16_1a2f5cb78ec61da56b6b09cefa0aecb71f" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>setD</name></member>
      <member refid="classHack_1_1Chips_1_1Mux4Way16_1abaa152acf1be764df397d7fa3b20dd7a" prot="public" virt="non-virtual"><scope>Hack::Chips::Mux4Way16</scope><name>setSel</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a512ea103436d620cad8b3fc80ca9c06c" prot="public" virt="virtual"><scope>Hack::Chips::Mux4Way16</scope><name>~Chip</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
