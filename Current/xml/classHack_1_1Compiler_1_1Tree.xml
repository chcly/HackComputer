<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Compiler_1_1Tree" kind="class" language="C++" prot="public">
    <compoundname>Hack::Compiler::Tree</compoundname>
    <includes local="no">Source/Compiler/Common/Tree.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHack_1_1Compiler_1_1Tree_1a71af1e32842d01a8cb34947b582ead35" prot="private" static="no" mutable="no">
        <type><ref refid="classHack_1_1Compiler_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node* Hack::Compiler::Tree::_root</definition>
        <argsstring></argsstring>
        <name>_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Common/Tree.h" line="32" column="1" bodyfile="Source/Compiler/Common/Tree.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Tree_1a23c525c96dd46a4b7982949318112499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Compiler::Tree::Tree</definition>
        <argsstring>()</argsstring>
        <name>Tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Common/Tree.h" line="35" column="1" bodyfile="Source/Compiler/Common/Tree.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Tree_1a45358a8d6576f798c84aa599d3c8968e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Compiler::Tree::~Tree</definition>
        <argsstring>()</argsstring>
        <name>~Tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Common/Tree.h" line="36" column="1" bodyfile="Source/Compiler/Common/Tree.cpp" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Tree_1ab00b92685755429ac933b3507a79bcd0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::Tree::filename</definition>
        <argsstring>(const String &amp;fileName) const</argsstring>
        <name>filename</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Common/Tree.h" line="42" column="1" bodyfile="Source/Compiler/Common/Tree.cpp" bodystart="42" bodyend="45"/>
        <references refid="classHack_1_1Compiler_1_1Node_1a7159b0a48fe5e2fff5ffe0472666a016" compoundref="Node_8h" startline="206" endline="209">Hack::Compiler::Node::filename</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Tree_1a58e4ebbe1e9af83ed2d9ceb8843f90e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHack_1_1Compiler_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node * Hack::Compiler::Tree::getRoot</definition>
        <argsstring>() const</argsstring>
        <name>getRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Common/Tree.h" line="38" column="1" bodyfile="Source/Compiler/Common/Tree.h" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Tree_1a6a896a5aa2081ea5b7acbb59c82b9b69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::Tree::write</definition>
        <argsstring>(OStream &amp;out, int format) const</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="namespaceHack_1a404ae4dff97be2fec362955db83690da" kindref="member">OStream</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Common/Tree.h" line="40" column="1" bodyfile="Source/Compiler/Common/Tree.cpp" bodystart="47" bodyend="59"/>
        <references refid="classHack_1_1Compiler_1_1XmlWriter_1a3cda3976be2f39380491275e681cdde9" compoundref="XmlWriter_8cpp" startline="154" endline="158">Hack::Compiler::XmlWriter::write</references>
        <references refid="classHack_1_1Compiler_1_1DotWriter_1a3c42eaf7c27647c3e266d5c02fc62e48" compoundref="DotWriter_8cpp" startline="131" endline="135">Hack::Compiler::DotWriter::write</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Compiler/Common/Tree.h" line="30" column="1" bodyfile="Source/Compiler/Common/Tree.h" bodystart="29" bodyend="43"/>
    <listofallmembers>
      <member refid="classHack_1_1Compiler_1_1Tree_1a71af1e32842d01a8cb34947b582ead35" prot="private" virt="non-virtual"><scope>Hack::Compiler::Tree</scope><name>_root</name></member>
      <member refid="classHack_1_1Compiler_1_1Tree_1ab00b92685755429ac933b3507a79bcd0" prot="public" virt="non-virtual"><scope>Hack::Compiler::Tree</scope><name>filename</name></member>
      <member refid="classHack_1_1Compiler_1_1Tree_1a58e4ebbe1e9af83ed2d9ceb8843f90e4" prot="public" virt="non-virtual"><scope>Hack::Compiler::Tree</scope><name>getRoot</name></member>
      <member refid="classHack_1_1Compiler_1_1Tree_1a23c525c96dd46a4b7982949318112499" prot="public" virt="non-virtual"><scope>Hack::Compiler::Tree</scope><name>Tree</name></member>
      <member refid="classHack_1_1Compiler_1_1Tree_1a6a896a5aa2081ea5b7acbb59c82b9b69" prot="public" virt="non-virtual"><scope>Hack::Compiler::Tree</scope><name>write</name></member>
      <member refid="classHack_1_1Compiler_1_1Tree_1a45358a8d6576f798c84aa599d3c8968e" prot="public" virt="non-virtual"><scope>Hack::Compiler::Tree</scope><name>~Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
