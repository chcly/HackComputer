<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Compiler_1_1Analyzer_1_1Scanner" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Hack::Compiler::Analyzer::Scanner</compoundname>
    <basecompoundref refid="classHack_1_1ScannerBase" prot="public" virt="non-virtual">Hack::ScannerBase</basecompoundref>
    <includes local="no">Source/Compiler/Analyzer/Scanner.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1aa9e5c7254c10b4f09558081fa067bb91" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceHack_1_1Compiler_1_1Analyzer_1a5d51cba76b1c9a4e05f7a36a0912c98e" kindref="member">CodeCache</ref></type>
        <definition>CodeCache Hack::Compiler::Analyzer::Scanner::_code</definition>
        <argsstring></argsstring>
        <name>_code</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Scanner.h" line="35" column="1" bodyfile="Source/Compiler/Analyzer/Scanner.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a8894f7372d18a72b7330f217926a0044" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::Analyzer::Scanner::scanCode</definition>
        <argsstring>(Token &amp;tok)</argsstring>
        <name>scanCode</name>
        <param>
          <type><ref refid="namespaceHack_1_1Compiler_1_1Analyzer_1a365a4ba8e3278740601f02b8d6c45910" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Scanner.h" line="37" column="1" bodyfile="Source/Compiler/Analyzer/Scanner.cpp" bodystart="71" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a52f18445f470383be9ec8c8c783c3947" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::Analyzer::Scanner::scanDigit</definition>
        <argsstring>(Token &amp;tok)</argsstring>
        <name>scanDigit</name>
        <param>
          <type><ref refid="namespaceHack_1_1Compiler_1_1Analyzer_1a365a4ba8e3278740601f02b8d6c45910" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Scanner.h" line="41" column="1" bodyfile="Source/Compiler/Analyzer/Scanner.cpp" bodystart="115" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a209c3a160c60dfc3ffa4f0beaa397bb2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::Analyzer::Scanner::scanString</definition>
        <argsstring>(Token &amp;tok)</argsstring>
        <name>scanString</name>
        <param>
          <type><ref refid="namespaceHack_1_1Compiler_1_1Analyzer_1a365a4ba8e3278740601f02b8d6c45910" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Scanner.h" line="43" column="1" bodyfile="Source/Compiler/Analyzer/Scanner.cpp" bodystart="133" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a18bdc90143c60ef1fa30993dd9329fa5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::Analyzer::Scanner::scanSymbol</definition>
        <argsstring>(Token &amp;tok)</argsstring>
        <name>scanSymbol</name>
        <param>
          <type><ref refid="namespaceHack_1_1Compiler_1_1Analyzer_1a365a4ba8e3278740601f02b8d6c45910" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Scanner.h" line="39" column="1" bodyfile="Source/Compiler/Analyzer/Scanner.cpp" bodystart="81" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a22bbfeed6a0fd316f2d4c05b8fe47bd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Compiler::Analyzer::Scanner::Scanner</definition>
        <argsstring>()</argsstring>
        <name>Scanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Scanner.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a719fc526a3ad0ea70ed7dbba71f0b686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::Analyzer::Scanner::getCode</definition>
        <argsstring>(String &amp;dest, const size_t &amp;idx)</argsstring>
        <name>getCode</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Scanner.h" line="51" column="1" bodyfile="Source/Compiler/Analyzer/Scanner.cpp" bodystart="189" bodyend="195"/>
        <references refid="classHack_1_1ScannerBase_1a0aa5a628913e1c8f04db54201f97e1a7" compoundref="ScannerBase_8h" startline="51" endline="57">Hack::ScannerBase::syntaxError</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1af357c61090b712e7cfcc4cbaeaa68a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hack::Compiler::Analyzer::Scanner::scan</definition>
        <argsstring>(Token &amp;tok) override</argsstring>
        <name>scan</name>
        <reimplements refid="classHack_1_1ScannerBase_1ac24b88935d8f5463217aacbfa9b87e9b">scan</reimplements>
        <param>
          <type><ref refid="namespaceHack_1_1Compiler_1_1Analyzer_1a365a4ba8e3278740601f02b8d6c45910" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Scanner.h" line="49" column="1" bodyfile="Source/Compiler/Analyzer/Scanner.cpp" bodystart="197" bodyend="307"/>
        <references refid="classHack_1_1ScannerBase_1a553484b098225d77804ffcfbf0382922" compoundref="ScannerBase_8h" startline="34">Hack::ScannerBase::_stream</references>
        <references refid="classHack_1_1ScannerBase_1a0aa5a628913e1c8f04db54201f97e1a7" compoundref="ScannerBase_8h" startline="51" endline="57">Hack::ScannerBase::syntaxError</references>
        <references refid="classHack_1_1TokenBase_1a30cd135b1d593a583b727309323138ad" compoundref="TokenBase_8h" startline="47" endline="56">Hack::TokenBase::clear</references>
        <references refid="classHack_1_1TokenBase_1ae4eadcf3980d196a66db3dc5a1c0d4bd" compoundref="TokenBase_8h" startline="96" endline="99">Hack::TokenBase::setLine</references>
        <references refid="classHack_1_1ScannerBase_1ac7ff4bb59d95de6dcd83f827794086f2" compoundref="ScannerBase_8h" startline="38">Hack::ScannerBase::_line</references>
        <references refid="classHack_1_1ScannerBase_1a16d67c5310c35106dd5caed204460adb" compoundref="ScannerBase_8cpp" startline="66" endline="76">Hack::ScannerBase::scanLineComment</references>
        <references refid="classHack_1_1ScannerBase_1af515b00a44514c004aaefa7da2944674" compoundref="ScannerBase_8cpp" startline="78">Hack::ScannerBase::scanMultiLineComment</references>
        <references refid="classHack_1_1TokenBase_1aa299ccac72d52b74f3ebc2ce2dcf96a1" compoundref="Token_8cpp" startline="38" endline="41">Hack::TokenBase::setType</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213eafb37aafcf316cd19f283b70185a6c7db" compoundref="Compiler_2Analyzer_2Token_8h" startline="63">Hack::Compiler::Analyzer::TokOpDivide</references>
        <references refid="classHack_1_1ScannerBase_1a4b419e3a4f91e1f4f136ead8941b7c5e">Hack::ScannerBase::scanWhiteSpace</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea7137a22e01a5be5107a978261d9e516c" compoundref="Compiler_2Analyzer_2Token_8h" startline="60">Hack::Compiler::Analyzer::TokOpPlus</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea43ad123222961ed0ba51292c5477456e" compoundref="Compiler_2Analyzer_2Token_8h" startline="61">Hack::Compiler::Analyzer::TokOpMinus</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea0b94377eace5b63712399ac9217a16f3" compoundref="Compiler_2Analyzer_2Token_8h" startline="62">Hack::Compiler::Analyzer::TokOpMultiply</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213eae145e1948582f41d8142b03f672577e0" compoundref="Compiler_2Analyzer_2Token_8h" startline="64">Hack::Compiler::Analyzer::TokOpAnd</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea9e7478436d156c0c3a1db85422186218" compoundref="Compiler_2Analyzer_2Token_8h" startline="65">Hack::Compiler::Analyzer::TokOpOr</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea6d8bef72aaef7e066efde4ac33be78b7" compoundref="Compiler_2Analyzer_2Token_8h" startline="66">Hack::Compiler::Analyzer::TokOpNot</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea59302097276b3efce9d00a1b56260b53" compoundref="Compiler_2Analyzer_2Token_8h" startline="69">Hack::Compiler::Analyzer::TokOpEq</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea35aaca16e06f074aac288a35ea1fb334" compoundref="Compiler_2Analyzer_2Token_8h" startline="68">Hack::Compiler::Analyzer::TokOpLt</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213eafb2ee9a2e649e7cca8fae5a74f4150ea" compoundref="Compiler_2Analyzer_2Token_8h" startline="67">Hack::Compiler::Analyzer::TokOpGt</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea3f40c46f83b01cd10c2f0e44f488b7a0" compoundref="Compiler_2Analyzer_2Token_8h" startline="76">Hack::Compiler::Analyzer::TokSymPeriod</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea75b99e6336f6b1f0c48e8b0152258abe" compoundref="Compiler_2Analyzer_2Token_8h" startline="72">Hack::Compiler::Analyzer::TokSymLBrace</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea74d79d469720fac9d5dd69b4875a1b84" compoundref="Compiler_2Analyzer_2Token_8h" startline="73">Hack::Compiler::Analyzer::TokSymRBrace</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213eafb944d2a0e4ad0c586816d56c1029078" compoundref="Compiler_2Analyzer_2Token_8h" startline="70">Hack::Compiler::Analyzer::TokSymLBracket</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213eaaf7e383183280f916f91b4cc577b6666" compoundref="Compiler_2Analyzer_2Token_8h" startline="71">Hack::Compiler::Analyzer::TokSymRBracket</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea3e31bd9b170ad514bb5a76e879112bf4" compoundref="Compiler_2Analyzer_2Token_8h" startline="74">Hack::Compiler::Analyzer::TokSymLPar</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea832c288ebb3bb5101fcf65fe48ef307d" compoundref="Compiler_2Analyzer_2Token_8h" startline="75">Hack::Compiler::Analyzer::TokSymRPar</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea17c04349dc66747e992f5f8fe52c61bb" compoundref="Compiler_2Analyzer_2Token_8h" startline="77">Hack::Compiler::Analyzer::TokSymComma</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213eafbeba2a07000ac4e4118f1b8f2a9ea20" compoundref="Compiler_2Analyzer_2Token_8h" startline="78">Hack::Compiler::Analyzer::TokSymSemicolon</references>
        <references refid="namespaceHack_1_1Compiler_1_1Analyzer_1af2b20fa0841330bfd08bb1cbae04213ea1ba4f9d692cc431d36fb140c844a9aaa" compoundref="Compiler_2Analyzer_2Token_8h" startline="30">Hack::Compiler::Analyzer::TokEof</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="330">
        <label>Hack::Compiler::Analyzer::Scanner</label>
        <link refid="classHack_1_1Compiler_1_1Analyzer_1_1Scanner"/>
        <childnode refid="331" relation="public-inheritance">
        </childnode>
      </node>
      <node id="331">
        <label>Hack::ScannerBase</label>
        <link refid="classHack_1_1ScannerBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="336">
        <label>size_t</label>
      </node>
      <node id="334">
        <label>Hack::IndexCache&lt; String &gt;</label>
        <link refid="classHack_1_1IndexCache"/>
      </node>
      <node id="338">
        <label>IStream *</label>
      </node>
      <node id="337">
        <label>string</label>
      </node>
      <node id="332">
        <label>Hack::Compiler::Analyzer::Scanner</label>
        <link refid="classHack_1_1Compiler_1_1Analyzer_1_1Scanner"/>
        <childnode refid="333" relation="public-inheritance">
        </childnode>
      </node>
      <node id="333">
        <label>Hack::ScannerBase</label>
        <link refid="classHack_1_1ScannerBase"/>
        <childnode refid="334" relation="usage">
          <edgelabel>_stringTable</edgelabel>
        </childnode>
        <childnode refid="335" relation="usage">
          <edgelabel>_intTable</edgelabel>
        </childnode>
        <childnode refid="336" relation="usage">
          <edgelabel>_line</edgelabel>
        </childnode>
        <childnode refid="337" relation="usage">
          <edgelabel>_file</edgelabel>
        </childnode>
        <childnode refid="338" relation="usage">
          <edgelabel>_stream</edgelabel>
        </childnode>
      </node>
      <node id="335">
        <label>Hack::IndexCache&lt; int &gt;</label>
        <link refid="classHack_1_1IndexCache"/>
      </node>
    </collaborationgraph>
    <location file="Source/Compiler/Analyzer/Scanner.h" line="32" column="1" bodyfile="Source/Compiler/Analyzer/Scanner.h" bodystart="31" bodyend="52"/>
    <listofallmembers>
      <member refid="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1aa9e5c7254c10b4f09558081fa067bb91" prot="private" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>_code</name></member>
      <member refid="classHack_1_1ScannerBase_1aee2410ff35c9642a4addab5377339b99" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>_file</name></member>
      <member refid="classHack_1_1ScannerBase_1aa2fe138fe481c6a129d048ed4d58bab8" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>_intTable</name></member>
      <member refid="classHack_1_1ScannerBase_1ac7ff4bb59d95de6dcd83f827794086f2" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>_line</name></member>
      <member refid="classHack_1_1ScannerBase_1a553484b098225d77804ffcfbf0382922" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>_stream</name></member>
      <member refid="classHack_1_1ScannerBase_1a414a40b1cf631e4125e828c2607ee137" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>_stringTable</name></member>
      <member refid="classHack_1_1ScannerBase_1a2412fd20aba2fc636877f3ac8db780d0" prot="public" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>attach</name></member>
      <member refid="classHack_1_1ScannerBase_1a5255f93a5545c9c6e5ea7a80f9ed12f5" prot="public" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>containsString</name></member>
      <member refid="classHack_1_1ScannerBase_1a60a1083d1af7068a54330d565ddcb44f" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>extractCode</name></member>
      <member refid="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a719fc526a3ad0ea70ed7dbba71f0b686" prot="public" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>getCode</name></member>
      <member refid="classHack_1_1ScannerBase_1ad43d94370b9191abd0a79c6148f1ce5c" prot="public" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>integer</name></member>
      <member refid="classHack_1_1ScannerBase_1a30f51f62024dec9e10aae0f40bfe04e6" prot="public" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>line</name></member>
      <member refid="classHack_1_1ScannerBase_1ac95ab910b82639657337e5a3f6b634ed" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>save</name></member>
      <member refid="classHack_1_1ScannerBase_1a857c80250b61d01dc34925958b979362" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>save</name></member>
      <member refid="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1af357c61090b712e7cfcc4cbaeaa68a3f" prot="public" virt="virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>scan</name></member>
      <member refid="classHack_1_1ScannerBase_1a4d2174fd338ba032ccb9101087e752dd" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>scanAny</name></member>
      <member refid="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a8894f7372d18a72b7330f217926a0044" prot="private" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>scanCode</name></member>
      <member refid="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a52f18445f470383be9ec8c8c783c3947" prot="private" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>scanDigit</name></member>
      <member refid="classHack_1_1ScannerBase_1a16d67c5310c35106dd5caed204460adb" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>scanLineComment</name></member>
      <member refid="classHack_1_1ScannerBase_1af515b00a44514c004aaefa7da2944674" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>scanMultiLineComment</name></member>
      <member refid="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a22bbfeed6a0fd316f2d4c05b8fe47bd8" prot="public" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>Scanner</name></member>
      <member refid="classHack_1_1ScannerBase_1a39a50ecb7b671cefcbf45b1900c10ffb" prot="public" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>ScannerBase</name></member>
      <member refid="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a209c3a160c60dfc3ffa4f0beaa397bb2" prot="private" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>scanString</name></member>
      <member refid="classHack_1_1Compiler_1_1Analyzer_1_1Scanner_1a18bdc90143c60ef1fa30993dd9329fa5" prot="private" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>scanSymbol</name></member>
      <member refid="classHack_1_1ScannerBase_1a4b419e3a4f91e1f4f136ead8941b7c5e" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>scanWhiteSpace</name></member>
      <member refid="classHack_1_1ScannerBase_1aa7dc42bcd86a806dffaf235aed8efeb6" prot="public" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>string</name></member>
      <member refid="classHack_1_1ScannerBase_1a2b080ab6ef2ee68120cbc10a883c92bd" prot="public" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>string</name></member>
      <member refid="classHack_1_1ScannerBase_1a0aa5a628913e1c8f04db54201f97e1a7" prot="protected" virt="non-virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>syntaxError</name></member>
      <member refid="classHack_1_1ScannerBase_1a3ed512a25958a785d2ca050c254d113e" prot="public" virt="virtual"><scope>Hack::Compiler::Analyzer::Scanner</scope><name>~ScannerBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
