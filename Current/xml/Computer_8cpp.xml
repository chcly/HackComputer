<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="Computer_8cpp" kind="file" language="C++">
    <compoundname>Computer.cpp</compoundname>
    <includes refid="Computer_8h" local="yes">Computer.h</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">iostream</includes>
    <includes refid="Timer_8h" local="yes">Chips/Timer.h</includes>
    <includes refid="Char_8h" local="yes">Utils/Char.h</includes>
    <incdepgraph>
      <node id="1163">
        <label>iomanip</label>
      </node>
      <node id="1152">
        <label>cstdint</label>
      </node>
      <node id="1155">
        <label>Chips/Register.h</label>
        <childnode refid="1142" relation="include">
        </childnode>
      </node>
      <node id="1143">
        <label>Chips/BitUtils.h</label>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
      </node>
      <node id="1167">
        <label>Utils/Char.h</label>
        <childnode refid="1152" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
      </node>
      <node id="1161">
        <label>Chips/Screen.h</label>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1150">
        <label>UserInterface/Context.h</label>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1151" relation="include">
        </childnode>
        <childnode refid="1153" relation="include">
        </childnode>
      </node>
      <node id="1165">
        <label>Chips/Timer.h</label>
        <childnode refid="1166" relation="include">
        </childnode>
      </node>
      <node id="1148">
        <label>string</label>
      </node>
      <node id="1166">
        <label>Chips/Clock.h</label>
        <childnode refid="1142" relation="include">
        </childnode>
      </node>
      <node id="1151">
        <label>Utils/UserInterface/Common.h</label>
        <childnode refid="1152" relation="include">
        </childnode>
      </node>
      <node id="1146">
        <label>String.h</label>
        <childnode refid="1147" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
      </node>
      <node id="1154">
        <label>Chips/ProgramCounter.h</label>
        <childnode refid="1142" relation="include">
        </childnode>
      </node>
      <node id="1159">
        <label>Chips/IMemorySegment.h</label>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1142" relation="include">
        </childnode>
      </node>
      <node id="1141">
        <label>ALU.h</label>
        <childnode refid="1142" relation="include">
        </childnode>
      </node>
      <node id="1144">
        <label>bitset</label>
      </node>
      <node id="1140">
        <label>Chips/CPU.h</label>
        <childnode refid="1141" relation="include">
        </childnode>
        <childnode refid="1142" relation="include">
        </childnode>
        <childnode refid="1154" relation="include">
        </childnode>
        <childnode refid="1155" relation="include">
        </childnode>
      </node>
      <node id="1162">
        <label>Chips/Rom32.h</label>
        <childnode refid="1142" relation="include">
        </childnode>
      </node>
      <node id="1158">
        <label>Chips/DefaultMemorySegment.h</label>
        <childnode refid="1159" relation="include">
        </childnode>
      </node>
      <node id="1149">
        <label>vector</label>
      </node>
      <node id="1157">
        <label>Chips/Ram16k.h</label>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1147">
        <label>sstream</label>
      </node>
      <node id="1164">
        <label>iostream</label>
      </node>
      <node id="1153">
        <label>Utils/UserInterface/Math.h</label>
        <childnode refid="1152" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1151" relation="include">
        </childnode>
      </node>
      <node id="1142">
        <label>Chips/Chip.h</label>
        <childnode refid="1143" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
      </node>
      <node id="1139">
        <label>Computer.h</label>
        <childnode refid="1140" relation="include">
        </childnode>
        <childnode refid="1156" relation="include">
        </childnode>
        <childnode refid="1162" relation="include">
        </childnode>
      </node>
      <node id="1156">
        <label>Chips/Memory.h</label>
        <childnode refid="1142" relation="include">
        </childnode>
        <childnode refid="1157" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
      </node>
      <node id="1138">
        <label>Source/Chips/Computer.cpp</label>
        <link refid="Computer_8cpp"/>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1163" relation="include">
        </childnode>
        <childnode refid="1164" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1167" relation="include">
        </childnode>
      </node>
      <node id="1145">
        <label>Utils/Console.h</label>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
      </node>
      <node id="1160">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceHack_1_1Chips">Hack::Chips</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>Charles<sp/>Carley.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Computer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Chips/Timer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Utils/Char.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceHack_1_1Chips" kindref="compound">Hack::Chips</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>CpuState<sp/><ref refid="classHack_1_1Chips_1_1Computer_1aa280cc035bb3869f0d63c55d5c608a7f" kindref="member">Computer::NullState</ref><sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classHack_1_1Chips_1_1Computer_1ad9e1addc596ec6f58fa56631086491e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1Computer_1ad9e1addc596ec6f58fa56631086491e3" kindref="member">Computer::Computer</ref>()<sp/>:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rom(new<sp/><ref refid="classHack_1_1Chips_1_1Rom32" kindref="compound">Rom32</ref>()),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpu(new<sp/><ref refid="classHack_1_1Chips_1_1Cpu" kindref="compound">Cpu</ref>()),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram(new<sp/><ref refid="classHack_1_1Chips_1_1Memory" kindref="compound">Memory</ref>()),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_reset(false),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState(NullState)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classHack_1_1Chips_1_1Computer_1ae76586a1a8385c183863269158c19083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1Computer_1ae76586a1a8385c183863269158c19083" kindref="member">Computer::~Computer</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_ram;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_cpu;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_rom;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classHack_1_1Chips_1_1Computer_1ab215c3ad1dfa7242b4edaccb75869063" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1Computer_1ab215c3ad1dfa7242b4edaccb75869063" kindref="member">Computer::load</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>*<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rom-&gt;<ref refid="classHack_1_1Chips_1_1Rom32_1ac604efafb3c2bec9d439d7d33f551b2a" kindref="member">load</ref>(data,<sp/>size);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_reset<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1Computer_1aa44e98396b5191c503bd5255fe0ffa1f" kindref="member">update</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classHack_1_1Chips_1_1Computer_1af05aa34a76553dbe510a97b0c7027399" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1Computer_1af05aa34a76553dbe510a97b0c7027399" kindref="member">Computer::canRead</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="57"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a8ff12fb359df46f8c2b7bb4536b03bd2" kindref="member">pc</ref><sp/>&lt;<sp/>_rom-&gt;<ref refid="classHack_1_1Chips_1_1Rom32_1aca05d80f8b7c52b5c17e0465fe2aeb7c" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classHack_1_1Chips_1_1Computer_1ad4e3bd9b1c6831220b8c9802cbf679bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1Computer_1ad4e3bd9b1c6831220b8c9802cbf679bf" kindref="member">Computer::runToEnd</ref>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/>max<sp/>=<sp/>_rom-&gt;<ref refid="classHack_1_1Chips_1_1Rom32_1aca05d80f8b7c52b5c17e0465fe2aeb7c" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a8ff12fb359df46f8c2b7bb4536b03bd2" kindref="member">pc</ref><sp/>&lt;<sp/>max)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1Computer_1aa44e98396b5191c503bd5255fe0ffa1f" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1Computer_1a2dbfa6b9bb02786f4e91770527d8624b" kindref="member">captureState</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Computer::clearState()</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a599e7ef3d1afa3a29c3f12f2e457f265" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram-&gt;<ref refid="classHack_1_1Chips_1_1Memory_1a0f261c4cfff3ae3fcd99537d2588a180" kindref="member">zero</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram-&gt;<ref refid="classHack_1_1Chips_1_1Memory_1a5b672deb1ea7feca8dc1b2edd6970e08" kindref="member">setValue</ref>(0,<sp/>(<ref refid="classuint16__t" kindref="compound">uint16_t</ref>)<ref refid="classHack_1_1Chips_1_1Memory_1af6c812b43306431812791769cc63a7f1" kindref="member">Memory::StackAddress</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState<sp/>=<sp/><ref refid="classHack_1_1Chips_1_1Computer_1aa280cc035bb3869f0d63c55d5c608a7f" kindref="member">NullState</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1Timer_1a7570f5f591474c56e6f96ab6d3f77044" kindref="member">Timer::reset</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classHack_1_1Chips_1_1Computer_1a2dbfa6b9bb02786f4e91770527d8624b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1Computer_1a2dbfa6b9bb02786f4e91770527d8624b" kindref="member">Computer::captureState</ref>()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>to<sp/>prevent<sp/>evaluation<sp/>when<sp/>querying<sp/>the<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1ae5b1d8f46e76e589ca99c6dee2fd7390" kindref="member">lock</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram-&gt;<ref refid="classHack_1_1Chips_1_1Memory_1a5d32929ad9a9abf8f0634549462e7f0b" kindref="member">lock</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rom-&gt;<ref refid="classHack_1_1Chips_1_1Rom32_1a767e0cee036509120d2a6436b7be26f4" kindref="member">lock</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>current<sp/>CPU<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a918ad89614f75599104e9c1a8123c916" kindref="member">regD</ref><sp/><sp/><sp/>=<sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a91db924b7a0e4fe6b99999402b00336b" kindref="member">getDRegister</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a764dbb644ba5bb323c97e09cb26ae122" kindref="member">regA</ref><sp/><sp/><sp/>=<sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a6ac458a81ab675897e277d07cb093193" kindref="member">getAmRegister</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a8ff12fb359df46f8c2b7bb4536b03bd2" kindref="member">pc</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a9500b587542088fd9b9574d81508e6e2" kindref="member">getNext</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a3bdae3da64a41fd9b98171cea0f1b1c1" kindref="member">inst</ref><sp/><sp/><sp/>=<sp/>_rom-&gt;<ref refid="classHack_1_1Chips_1_1Rom32_1ac4786f98ecaa6c91a1cd31e438c29aab" kindref="member">getOut</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1ae932a7489f8bdecf33ffd43c9410130f" kindref="member">ram</ref><sp/><sp/><sp/><sp/>=<sp/>_ram-&gt;<ref refid="classHack_1_1Chips_1_1Memory_1a9c799940a43fb1588ec230cd4d799ed3" kindref="member">getOut</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1af1398587a09d5722d1d794f87d427a35" kindref="member">writeM</ref><sp/>=<sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a09ccfdbe1ebceb25ef9964834cee904f" kindref="member">getWrite</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a7b6ea40228d9e23b00fd2ee43133a6f3" kindref="member">addrM</ref><sp/><sp/>=<sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a5af96f7c73c15c4f0fff860481dc83bf" kindref="member">getAddress</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a4898fb8aa66f45e0e07d4b754b8d93ba" kindref="member">outM</ref><sp/><sp/><sp/>=<sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a1f9a2cb8f03f3196c82d0fca242c6903" kindref="member">getOut</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1af9c11b4b51b6cd89cdfdcccdf52341db" kindref="member">reset</ref><sp/><sp/>=<sp/>_reset<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1ae5b1d8f46e76e589ca99c6dee2fd7390" kindref="member">lock</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram-&gt;<ref refid="classHack_1_1Chips_1_1Memory_1a5d32929ad9a9abf8f0634549462e7f0b" kindref="member">lock</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rom-&gt;<ref refid="classHack_1_1Chips_1_1Rom32_1a767e0cee036509120d2a6436b7be26f4" kindref="member">lock</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classHack_1_1Chips_1_1Computer_1aa44e98396b5191c503bd5255fe0ffa1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1Computer_1aa44e98396b5191c503bd5255fe0ffa1f" kindref="member">Computer::update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>saveState)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a5606ebaf9ae4d826b421dce343c223f9" kindref="member">clock</ref><sp/>=<sp/><ref refid="classHack_1_1Chips_1_1Timer_1a06197be547ad70f903d23120252cf044" kindref="member">Timer::tick</ref>()<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_reset)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clearState();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(saveState)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1Computer_1a2dbfa6b9bb02786f4e91770527d8624b" kindref="member">captureState</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a8ff12fb359df46f8c2b7bb4536b03bd2" kindref="member">pc</ref><sp/>=<sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a9500b587542088fd9b9574d81508e6e2" kindref="member">getNext</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a8ff12fb359df46f8c2b7bb4536b03bd2" kindref="member">pc</ref><sp/>&gt;=<sp/>0x7FFF)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>a<sp/>reset...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@32766</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0;JMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_reset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1af9c11b4b51b6cd89cdfdcccdf52341db" kindref="member">reset</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rom-&gt;<ref refid="classHack_1_1Chips_1_1Rom32_1ae7bd95475bee92dfd9c9992da8fba511" kindref="member">setIn</ref>(_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a8ff12fb359df46f8c2b7bb4536b03bd2" kindref="member">pc</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>I/O<sp/>to<sp/>the<sp/>CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1aed70d190ffe8390a4ad3f74ade6e60fe" kindref="member">setInstruction</ref>(_rom-&gt;<ref refid="classHack_1_1Chips_1_1Rom32_1ac4786f98ecaa6c91a1cd31e438c29aab" kindref="member">getOut</ref>());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1ad12d07395a9bb6a137027a086bad44d3" kindref="member">setClock</ref>(_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a5606ebaf9ae4d826b421dce343c223f9" kindref="member">clock</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1ac14c3298730fc31946de0c05ee2c7a2b" kindref="member">setReset</ref>(_reset);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a79cecbb18e73a58f32d84d8a4da53dc8" kindref="member">setInMemory</ref>(_ram-&gt;<ref refid="classHack_1_1Chips_1_1Memory_1a9c799940a43fb1588ec230cd4d799ed3" kindref="member">getOut</ref>());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tie<sp/>the<sp/>CPU<sp/>outputs<sp/>to<sp/>the<sp/>ram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram-&gt;<ref refid="classHack_1_1Chips_1_1Memory_1aff5964e2c12b9d9d2df86251852f7667" kindref="member">setClock</ref>(_cpuState.<ref refid="structHack_1_1Chips_1_1CpuState_1a5606ebaf9ae4d826b421dce343c223f9" kindref="member">clock</ref><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram-&gt;<ref refid="classHack_1_1Chips_1_1Memory_1a1e0256353b44cb5742b01d569e004aa3" kindref="member">setLoad</ref>(_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a09ccfdbe1ebceb25ef9964834cee904f" kindref="member">getWrite</ref>());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram-&gt;<ref refid="classHack_1_1Chips_1_1Memory_1a5baffcb2b03efd29620483621723b412" kindref="member">setAddress</ref>(_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a5af96f7c73c15c4f0fff860481dc83bf" kindref="member">getAddress</ref>());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram-&gt;<ref refid="classHack_1_1Chips_1_1Memory_1a2543b6659fa9ecce5b9f72076a6dc4f9" kindref="member">setIn</ref>(_cpu-&gt;<ref refid="classHack_1_1Chips_1_1Cpu_1a1f9a2cb8f03f3196c82d0fca242c6903" kindref="member">getOut</ref>());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_reset<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classHack_1_1Chips_1_1Computer_1a5e2ff33095c4f19eecdfdbfdba101b52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1Computer_1a5e2ff33095c4f19eecdfdbfdba101b52" kindref="member">Computer::reset</ref>()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_reset<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Hack::Chips</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Chips/Computer.cpp"/>
  </compounddef>
</doxygen>
