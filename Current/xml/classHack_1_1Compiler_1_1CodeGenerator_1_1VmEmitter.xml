<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter" kind="class" language="C++" prot="public">
    <compoundname>Hack::Compiler::CodeGenerator::VmEmitter</compoundname>
    <includes local="no">Source/Compiler/Generator/VmEmitter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1acca2d2302cddbfdbc618e257b90660a8" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref></type>
        <definition>String Hack::Compiler::CodeGenerator::VmEmitter::_eof</definition>
        <argsstring></argsstring>
        <name>_eof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="37" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1acad116dff117c890dee71d50c4747bd2" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceHack_1ae3a6ca87ce783b824591a2858b2409a1" kindref="member">OutputStringStream</ref></type>
        <definition>OutputStringStream Hack::Compiler::CodeGenerator::VmEmitter::_stream</definition>
        <argsstring></argsstring>
        <name>_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="35" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1aec573cb3bb118b14d68071204f07c46d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Hack::Compiler::CodeGenerator::VmEmitter::_uid</definition>
        <argsstring></argsstring>
        <name>_uid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="36" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a727e4ba64842efcefce580ae927278cc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::write</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>write</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="40" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.h" bodystart="40" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1aca147d001b3cffe9a53464181459cad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Compiler::CodeGenerator::VmEmitter::VmEmitter</definition>
        <argsstring>()</argsstring>
        <name>VmEmitter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="48" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a3b96b5d03aa066616d8aef4d72b0db47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="56" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a1a2ae5d924f71804513cd5488a9a86bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="54" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a6229401619e2ee5ca78c5a48db58efe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref></type>
        <definition>String Hack::Compiler::CodeGenerator::VmEmitter::generateLabel</definition>
        <argsstring>()</argsstring>
        <name>generateLabel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="58" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="52" bodyend="57"/>
        <references refid="classHack_1_1StringUtils_1a8967bdf4168b1b6865eae69ce48e9d38" compoundref="String_8cpp" startline="148" endline="157">Hack::StringUtils::generate</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a2a6c8f1db091bebf378b21e21e4e48e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="52" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="35" bodyend="40"/>
        <references refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a6229401619e2ee5ca78c5a48db58efe5" compoundref="VmEmitter_8cpp" startline="52" endline="57">generateLabel</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a30fc52a18faffe03a2598ad9a49099cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::popArgument</definition>
        <argsstring>(const size_t &amp;size)</argsstring>
        <name>popArgument</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="76" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a78c57d2e509f34c54490010467540819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::popLocal</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popLocal</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="74" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1aee9961cdadf9ad79486cd97bff824e5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::popPointer</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popPointer</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="82" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="118" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1af96149eeb94e3df9a2cb29ee08f851d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::popStatic</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popStatic</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="84" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a2652e4e6db16de81ef7d16af2785bb70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::popTemp</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popTemp</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="86" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a4ea04c0f4ebffd3452ed3baa0653df3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::popThat</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popThat</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="80" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1ac21c6540f1a3105ae2493c73a8d71c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::popThis</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>popThis</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="78" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1ac60bf44248b01087aa83065bf0436e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::pushArgument</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushArgument</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="90" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1ac811d5d37137f526351f57da1a125402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::pushConstant</definition>
        <argsstring>(const String &amp;value)</argsstring>
        <name>pushConstant</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="70" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="83" bodyend="86"/>
        <references refid="classHack_1_1Char_1a1d1dca952e59d2b38615e7240d3b9055" compoundref="Char_8cpp" startline="50" endline="62">Hack::Char::toInt16</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a0c7498a6adc9657ad5d587cb0adc9e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::pushConstant</definition>
        <argsstring>(const size_t &amp;value)</argsstring>
        <name>pushConstant</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="72" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a0352121340e64201fad464781466d61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::pushLocal</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushLocal</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="88" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1aaed7c39531e5e0ed0a3ee4a9891b2311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::pushPointer</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushPointer</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="96" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="150" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1aaaf443d634df5a3cb6e4bc27a18b9519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::pushStatic</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushStatic</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="98" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a22f463158a009f4c334bd5d12e50104e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::pushTemp</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushTemp</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="100" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a13ece2eb3d3e4748ba3ae5c3a9e3de57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::pushThat</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushThat</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="94" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a8155e92dc619c5c9409975e9e5f72c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::pushThis</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>pushThis</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="92" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a437cd42d4486dc6d1072f58b0517a187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceHack_1ae3a6ca87ce783b824591a2858b2409a1" kindref="member">OutputStringStream</ref> &amp;</type>
        <definition>OutputStringStream &amp; Hack::Compiler::CodeGenerator::VmEmitter::stream</definition>
        <argsstring>()</argsstring>
        <name>stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="50" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.h" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a30ba6c2cb9ef29b543cf2775f545585e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::symbolAdd</definition>
        <argsstring>()</argsstring>
        <name>symbolAdd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="104" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a0a12058ec6bda2214f6aad7e237d59a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::symbolAnd</definition>
        <argsstring>()</argsstring>
        <name>symbolAnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="108" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1afd32c76b785edf6226409b78909951bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::symbolEquals</definition>
        <argsstring>()</argsstring>
        <name>symbolEquals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="118" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a9531a75d95a32efffadf3bc150a0c143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::symbolGreater</definition>
        <argsstring>()</argsstring>
        <name>symbolGreater</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="114" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a74f60676e9b7ec9f3ac9702f0d9966e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::symbolLess</definition>
        <argsstring>()</argsstring>
        <name>symbolLess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="116" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a19929a0f9b56879cd0fa600f420bcfe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::symbolNeg</definition>
        <argsstring>()</argsstring>
        <name>symbolNeg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="120" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a91cd27f4346df0cfd645307773f6fb29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::symbolNot</definition>
        <argsstring>()</argsstring>
        <name>symbolNot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="112" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1af33855ee64ca59ebd56e93f8fe19bcff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::symbolOr</definition>
        <argsstring>()</argsstring>
        <name>symbolOr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="110" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a560f45eb8128f049e4ca6302a57fed2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::symbolSub</definition>
        <argsstring>()</argsstring>
        <name>symbolSub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="106" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a76cc1bcc19df9d0cfe8d05a381ee65ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::writeCall</definition>
        <argsstring>(const String &amp;id, size_t size)</argsstring>
        <name>writeCall</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="122" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a3266aebe118a737f3d69ce51d725c8ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::writeCode</definition>
        <argsstring>(int type, const String &amp;code)</argsstring>
        <name>writeCode</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="130" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="238" bodyend="250"/>
        <references refid="namespaceHack_1_1Compiler_1a661f20cd8ee85e44fdd5e021df7c42b6afe32ecf4dda649e33924606d05e85ccd" compoundref="NodeUtils_8h" startline="45">Hack::Compiler::RuleInlineVm</references>
        <references refid="namespaceHack_1_1Compiler_1a661f20cd8ee85e44fdd5e021df7c42b6acbaba7a7dcfa3aeec822934d931f42c1" compoundref="NodeUtils_8h" startline="46">Hack::Compiler::RuleInlineAsm</references>
        <references refid="classHack_1_1StringUtils_1a3023cff3d330aedadb3eaea6f04ae076" compoundref="String_8cpp" startline="75" endline="90">Hack::StringUtils::splitLine</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a0ea140227de6ec16c89ef2a49041290b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::writeField</definition>
        <argsstring>(const Symbol &amp;sym)</argsstring>
        <name>writeField</name>
        <param>
          <type>const <ref refid="classHack_1_1Compiler_1_1CodeGenerator_1_1Symbol" kindref="compound">Symbol</ref> &amp;</type>
          <declname>sym</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="62" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="65" bodyend="69"/>
        <references refid="classHack_1_1Compiler_1_1CodeGenerator_1_1Symbol_1ab608d0a405d8de2551e2317acded64e5" compoundref="Symbol_8h" startline="85" endline="88">Hack::Compiler::CodeGenerator::Symbol::entry</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a887bbafd972c3f0296d038a80df094ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::writeFunction</definition>
        <argsstring>(const String &amp;name, uint16_t numParams)</argsstring>
        <name>writeFunction</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
          <declname>numParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="64" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a34e09683eb7f0e1166e83f16187da273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::writeGoto</definition>
        <argsstring>(const String &amp;label)</argsstring>
        <name>writeGoto</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="126" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a9e0b5844f56ca139dfd64d60b77ff041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::writeIfStart</definition>
        <argsstring>(const String &amp;label)</argsstring>
        <name>writeIfStart</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="124" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="222" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a8487ee1fe886564bacaa66801f944500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::writeLabel</definition>
        <argsstring>(const String &amp;label)</argsstring>
        <name>writeLabel</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="128" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a0eb64971e0e67eb3c175ab4fd365ceef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::writeMethod</definition>
        <argsstring>(const String &amp;className, const String &amp;methodName, uint16_t numParams)</argsstring>
        <name>writeMethod</name>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>className</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>methodName</declname>
        </param>
        <param>
          <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
          <declname>numParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="66" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1ad7ff8af91267d5b1186c65c3ecd3d7dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::writeReturn</definition>
        <argsstring>()</argsstring>
        <name>writeReturn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="102" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a05d6649bc24d397c5b9f79154b0ff042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Compiler::CodeGenerator::VmEmitter::writeStatic</definition>
        <argsstring>(const Symbol &amp;sym)</argsstring>
        <name>writeStatic</name>
        <param>
          <type>const <ref refid="classHack_1_1Compiler_1_1CodeGenerator_1_1Symbol" kindref="compound">Symbol</ref> &amp;</type>
          <declname>sym</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Generator/VmEmitter.h" line="60" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.cpp" bodystart="59" bodyend="63"/>
        <references refid="classHack_1_1Compiler_1_1CodeGenerator_1_1Symbol_1ab608d0a405d8de2551e2317acded64e5" compoundref="Symbol_8h" startline="85" endline="88">Hack::Compiler::CodeGenerator::Symbol::entry</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Compiler/Generator/VmEmitter.h" line="33" column="1" bodyfile="Source/Compiler/Generator/VmEmitter.h" bodystart="32" bodyend="131"/>
    <listofallmembers>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1acca2d2302cddbfdbc618e257b90660a8" prot="private" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>_eof</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1acad116dff117c890dee71d50c4747bd2" prot="private" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>_stream</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1aec573cb3bb118b14d68071204f07c46d" prot="private" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>_uid</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a3b96b5d03aa066616d8aef4d72b0db47" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>clear</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a1a2ae5d924f71804513cd5488a9a86bd" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>finalize</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a6229401619e2ee5ca78c5a48db58efe5" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>generateLabel</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a2a6c8f1db091bebf378b21e21e4e48e7" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>initialize</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a30fc52a18faffe03a2598ad9a49099cf" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>popArgument</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a78c57d2e509f34c54490010467540819" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>popLocal</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1aee9961cdadf9ad79486cd97bff824e5e" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>popPointer</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1af96149eeb94e3df9a2cb29ee08f851d4" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>popStatic</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a2652e4e6db16de81ef7d16af2785bb70" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>popTemp</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a4ea04c0f4ebffd3452ed3baa0653df3d" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>popThat</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1ac21c6540f1a3105ae2493c73a8d71c70" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>popThis</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1ac60bf44248b01087aa83065bf0436e69" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>pushArgument</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1ac811d5d37137f526351f57da1a125402" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>pushConstant</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a0c7498a6adc9657ad5d587cb0adc9e95" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>pushConstant</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a0352121340e64201fad464781466d61d" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>pushLocal</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1aaed7c39531e5e0ed0a3ee4a9891b2311" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>pushPointer</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1aaaf443d634df5a3cb6e4bc27a18b9519" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>pushStatic</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a22f463158a009f4c334bd5d12e50104e" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>pushTemp</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a13ece2eb3d3e4748ba3ae5c3a9e3de57" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>pushThat</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a8155e92dc619c5c9409975e9e5f72c9e" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>pushThis</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a437cd42d4486dc6d1072f58b0517a187" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>stream</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a30ba6c2cb9ef29b543cf2775f545585e" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>symbolAdd</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a0a12058ec6bda2214f6aad7e237d59a1" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>symbolAnd</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1afd32c76b785edf6226409b78909951bb" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>symbolEquals</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a9531a75d95a32efffadf3bc150a0c143" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>symbolGreater</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a74f60676e9b7ec9f3ac9702f0d9966e7" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>symbolLess</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a19929a0f9b56879cd0fa600f420bcfe4" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>symbolNeg</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a91cd27f4346df0cfd645307773f6fb29" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>symbolNot</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1af33855ee64ca59ebd56e93f8fe19bcff" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>symbolOr</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a560f45eb8128f049e4ca6302a57fed2c" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>symbolSub</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1aca147d001b3cffe9a53464181459cad1" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>VmEmitter</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a727e4ba64842efcefce580ae927278cc" prot="private" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>write</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a76cc1bcc19df9d0cfe8d05a381ee65ce" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>writeCall</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a3266aebe118a737f3d69ce51d725c8ca" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>writeCode</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a0ea140227de6ec16c89ef2a49041290b" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>writeField</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a887bbafd972c3f0296d038a80df094ec" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>writeFunction</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a34e09683eb7f0e1166e83f16187da273" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>writeGoto</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a9e0b5844f56ca139dfd64d60b77ff041" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>writeIfStart</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a8487ee1fe886564bacaa66801f944500" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>writeLabel</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a0eb64971e0e67eb3c175ab4fd365ceef" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>writeMethod</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1ad7ff8af91267d5b1186c65c3ecd3d7dc" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>writeReturn</name></member>
      <member refid="classHack_1_1Compiler_1_1CodeGenerator_1_1VmEmitter_1a05d6649bc24d397c5b9f79154b0ff042" prot="public" virt="non-virtual"><scope>Hack::Compiler::CodeGenerator::VmEmitter</scope><name>writeStatic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
