<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="IMemorySegment_8h" kind="file" language="C++">
    <compoundname>IMemorySegment.h</compoundname>
    <includes local="no">cstring</includes>
    <includes refid="Chip_8h" local="yes">Chips/Chip.h</includes>
    <includedby refid="DefaultMemorySegment_8h" local="yes">Source/Chips/DefaultMemorySegment.h</includedby>
    <incdepgraph>
      <node id="1495">
        <label>cstdint</label>
      </node>
      <node id="1486">
        <label>Chips/BitUtils.h</label>
        <childnode refid="1487" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
      </node>
      <node id="1493">
        <label>UserInterface/Context.h</label>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1496" relation="include">
        </childnode>
      </node>
      <node id="1491">
        <label>string</label>
      </node>
      <node id="1494">
        <label>Utils/UserInterface/Common.h</label>
        <childnode refid="1495" relation="include">
        </childnode>
      </node>
      <node id="1489">
        <label>String.h</label>
        <childnode refid="1490" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1492" relation="include">
        </childnode>
      </node>
      <node id="1483">
        <label>Source/Chips/IMemorySegment.h</label>
        <link refid="IMemorySegment_8h"/>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1485" relation="include">
        </childnode>
      </node>
      <node id="1487">
        <label>bitset</label>
      </node>
      <node id="1492">
        <label>vector</label>
      </node>
      <node id="1490">
        <label>sstream</label>
      </node>
      <node id="1496">
        <label>Utils/UserInterface/Math.h</label>
        <childnode refid="1495" relation="include">
        </childnode>
        <childnode refid="1492" relation="include">
        </childnode>
        <childnode refid="1494" relation="include">
        </childnode>
      </node>
      <node id="1485">
        <label>Chips/Chip.h</label>
        <childnode refid="1486" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
      </node>
      <node id="1488">
        <label>Utils/Console.h</label>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1493" relation="include">
        </childnode>
      </node>
      <node id="1484">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1512">
        <label>Source/Computer/AssemblyDebugger.h</label>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1506" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
      </node>
      <node id="1516">
        <label>Source/Chips/Screen.h</label>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1512" relation="include">
        </childnode>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
      </node>
      <node id="1502">
        <label>Source/Bindings/Bindings.cpp</label>
      </node>
      <node id="1504">
        <label>Source/Computer/AssemblyDebugger/AssemblyDebuggerPrivate.cpp</label>
      </node>
      <node id="1505">
        <label>Source/Computer/AssemblyDebugger/AssemblyDebuggerPrivate.h</label>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1506" relation="include">
        </childnode>
      </node>
      <node id="1510">
        <label>Source/Computer/Executable.cpp</label>
      </node>
      <node id="1497">
        <label>Source/Chips/IMemorySegment.h</label>
        <link refid="IMemorySegment_8h"/>
        <childnode refid="1498" relation="include">
        </childnode>
      </node>
      <node id="1508">
        <label>Source/Computer/ConsoleRuntime/ConsoleRuntimePrivate.h</label>
        <childnode refid="1507" relation="include">
        </childnode>
        <childnode refid="1509" relation="include">
        </childnode>
      </node>
      <node id="1498">
        <label>Source/Chips/DefaultMemorySegment.h</label>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1516" relation="include">
        </childnode>
      </node>
      <node id="1499">
        <label>Source/Chips/Ram16k.h</label>
        <childnode refid="1500" relation="include">
        </childnode>
      </node>
      <node id="1506">
        <label>Source/Computer/AssemblyDebugger.cpp</label>
      </node>
      <node id="1507">
        <label>Source/Computer/ConsoleRuntime/ConsoleRuntimePrivate.cpp</label>
      </node>
      <node id="1511">
        <label>Source/Computer/RuntimeInterface.h</label>
        <childnode refid="1512" relation="include">
        </childnode>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
      </node>
      <node id="1515">
        <label>Source/Chips/Memory.cpp</label>
      </node>
      <node id="1514">
        <label>Source/Computer/WindowedRuntime.h</label>
      </node>
      <node id="1501">
        <label>Source/Chips/Computer.h</label>
        <childnode refid="1502" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1506" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
        <childnode refid="1508" relation="include">
        </childnode>
        <childnode refid="1509" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
        <childnode refid="1511" relation="include">
        </childnode>
      </node>
      <node id="1500">
        <label>Source/Chips/Memory.h</label>
        <childnode refid="1501" relation="include">
        </childnode>
        <childnode refid="1515" relation="include">
        </childnode>
      </node>
      <node id="1503">
        <label>Source/Chips/Computer.cpp</label>
      </node>
      <node id="1509">
        <label>Source/Computer/ConsoleRuntime.cpp</label>
      </node>
      <node id="1513">
        <label>Source/Computer/ConsoleRuntime.h</label>
        <childnode refid="1509" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classHack_1_1Chips_1_1IMemorySegment" prot="public">Hack::Chips::IMemorySegment</innerclass>
    <innernamespace refid="namespaceHack_1_1Chips">Hack::Chips</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>Charles<sp/>Carley.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Chips/Chip.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceHack_1_1Chips" kindref="compound">Hack::Chips</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="29" refid="classHack_1_1Chips_1_1IMemorySegment" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classHack_1_1Chips_1_1IMemorySegment" kindref="compound">IMemorySegment</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1Chip" kindref="compound" tooltip="Chip is the base class for all chips defined in this system. ">Chip</ref>&lt;uint8_t,<sp/>8&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classHack_1_1Chips_1_1IMemorySegment_1aaf6fabe5db913367af8e124cd5ef30e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1aaf6fabe5db913367af8e124cd5ef30e1" kindref="member">HighAddress</ref><sp/>=<sp/>High;</highlight></codeline>
<codeline lineno="33" refid="classHack_1_1Chips_1_1IMemorySegment_1aa48a78ccd8824a135002ef01092a2f92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1aa48a78ccd8824a135002ef01092a2f92" kindref="member">Max</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(High<sp/>&lt;&lt;<sp/>1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="classHack_1_1Chips_1_1IMemorySegment_1af4867aa2cec1454452363f1850fe39e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1af4867aa2cec1454452363f1850fe39e6" kindref="member">_in</ref>;</highlight></codeline>
<codeline lineno="37" refid="classHack_1_1Chips_1_1IMemorySegment_1abee2969f70c7cad9ae4fc48c95b4ee34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1abee2969f70c7cad9ae4fc48c95b4ee34" kindref="member">_out</ref>;</highlight></codeline>
<codeline lineno="38" refid="classHack_1_1Chips_1_1IMemorySegment_1a9683f3a1be07724bee0f2adfe59d90de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a9683f3a1be07724bee0f2adfe59d90de" kindref="member">_address</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a3f938d0e6ba15d79fedeece254327efe" kindref="member">IMemorySegment</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a105e374a106c298b3a0426b8387260d3" kindref="member">setIn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>&amp;<sp/>input);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a9dcf0c5af1012d1d54492f216eb85a61" kindref="member">setAddress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>&amp;<sp/>address);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a053f5b47a681f7e04ec9b8039f68363f" kindref="member">setLoad</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>load);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a8ad357587c581db496ef05f4fcd5c292" kindref="member">setClock</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clock);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1adb872ebbc96cf2a449721f1a40754353" kindref="member">lock</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a8886f1e112e29f9f4ba7ec1d6550cb7b" kindref="member">getOut</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>*<sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a928606841d9d6b0130aa7dbdbe7d294e" kindref="member">pointer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>address)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a2fe4fb4ddf831109accb6c95f6dbf990" kindref="member">setValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>address,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>&amp;<sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1aae4cff10f3ec39ef2c6b08c42fcc937c" kindref="member">zero</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a50ee5c87fba14eaaaa5c564c55d1f757" kindref="member">lockScreen</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classHack_1_1Chips_1_1IMemorySegment_1a6556e06d0b5c14d72336a25f67e2b217" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a6556e06d0b5c14d72336a25f67e2b217" kindref="member">sync</ref>()</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a09442f604ad85fdd0b02c8bdf2ca729d" kindref="member">unlockScreen</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a0adcc77581ef7d16475c343df92db060" kindref="member">isDirty</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a28c590cc3f546ec6938c5742dd8c7467" kindref="member">markDirty</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="78" refid="classHack_1_1Chips_1_1IMemorySegment_1a3f938d0e6ba15d79fedeece254327efe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a3f938d0e6ba15d79fedeece254327efe" kindref="member">IMemorySegment&lt;High, ElementCount&gt;::IMemorySegment</ref>()<sp/>:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_in(0),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_out(0),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_address(0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" kindref="member">_bits</ref><sp/>=<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" kindref="member">Bit7</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="87" refid="classHack_1_1Chips_1_1IMemorySegment_1a105e374a106c298b3a0426b8387260d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a105e374a106c298b3a0426b8387260d3" kindref="member">IMemorySegment&lt;High, ElementCount&gt;::setIn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>&amp;<sp/>input)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_in<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bits<sp/>|=<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" kindref="member">Bit7</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="94" refid="classHack_1_1Chips_1_1IMemorySegment_1a9dcf0c5af1012d1d54492f216eb85a61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a9dcf0c5af1012d1d54492f216eb85a61" kindref="member">IMemorySegment&lt;High, ElementCount&gt;::setAddress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>&amp;<sp/>address)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CHECK_INT_BOUNDS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>&gt;=<sp/>High)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IndexOutOfBounds();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>&lt;<sp/>High)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_address<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="105" refid="classHack_1_1Chips_1_1IMemorySegment_1a053f5b47a681f7e04ec9b8039f68363f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a053f5b47a681f7e04ec9b8039f68363f" kindref="member">IMemorySegment&lt;High, ElementCount&gt;::setLoad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>load)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(load)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bits<sp/>|=<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a3c93b3dc9ed5f470c6f86f10b05b2386" kindref="member">Bit0</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bits<sp/>&amp;=<sp/>~<ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a3c93b3dc9ed5f470c6f86f10b05b2386" kindref="member">Bit0</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bits<sp/>|=<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" kindref="member">Bit7</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="115" refid="classHack_1_1Chips_1_1IMemorySegment_1a8ad357587c581db496ef05f4fcd5c292" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a8ad357587c581db496ef05f4fcd5c292" kindref="member">IMemorySegment&lt;High, ElementCount&gt;::setClock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clock)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clock)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bits<sp/>|=<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a8487c63d5dca7d87b359feca1a2c2ac8" kindref="member">Bit1</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bits<sp/>&amp;=<sp/>~<ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a8487c63d5dca7d87b359feca1a2c2ac8" kindref="member">Bit1</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bits<sp/>|=<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" kindref="member">Bit7</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="125" refid="classHack_1_1Chips_1_1IMemorySegment_1adb872ebbc96cf2a449721f1a40754353" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1adb872ebbc96cf2a449721f1a40754353" kindref="member">IMemorySegment&lt;High, ElementCount&gt;::lock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bits<sp/>|=<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a558a82390f139f886fdec62375e5209e" kindref="member">Bit6</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bits<sp/>&amp;=<sp/>~<ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a558a82390f139f886fdec62375e5209e" kindref="member">Bit6</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="134" refid="classHack_1_1Chips_1_1IMemorySegment_1a50ee5c87fba14eaaaa5c564c55d1f757" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a50ee5c87fba14eaaaa5c564c55d1f757" kindref="member">IMemorySegment&lt;High, ElementCount&gt;::lockScreen</ref>()</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="139" refid="classHack_1_1Chips_1_1IMemorySegment_1a09442f604ad85fdd0b02c8bdf2ca729d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a09442f604ad85fdd0b02c8bdf2ca729d" kindref="member">IMemorySegment&lt;High, ElementCount&gt;::unlockScreen</ref>()</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="144" refid="classHack_1_1Chips_1_1IMemorySegment_1a0adcc77581ef7d16475c343df92db060" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a0adcc77581ef7d16475c343df92db060" kindref="member">IMemorySegment&lt;High, ElementCount&gt;::isDirty</ref>()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_bits<sp/>&amp;<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" kindref="member">Bit7</ref>)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(_bits<sp/>&amp;<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a558a82390f139f886fdec62375e5209e" kindref="member">Bit6</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="150" refid="classHack_1_1Chips_1_1IMemorySegment_1a28c590cc3f546ec6938c5742dd8c7467" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment_1a28c590cc3f546ec6938c5742dd8c7467" kindref="member">IMemorySegment&lt;High, ElementCount&gt;::markDirty</ref>()</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bits<sp/>|=<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" kindref="member">Bit7</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Hack::Chips</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Chips/IMemorySegment.h"/>
  </compounddef>
</doxygen>
