<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespaceHack_1_1Chips_1_1Gates" kind="namespace" language="C++">
    <compoundname>Hack::Chips::Gates</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceHack_1_1Chips_1_1Gates_1ae497dca5e03287bf0b47755e4727966c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Gates::And</definition>
        <argsstring>(const bool a, const bool b)</argsstring>
        <name>And</name>
        <param>
          <type>const bool</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="272" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="272" bodyend="276"/>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1ada9a46218595da6aec64c80462c5c48f" compoundref="BitUtils_8h" startline="262" endline="265">NAnd</references>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1_1Chips_1_1Gates_1a498cc0f1f89eba40c58e757c83ef9efc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Gates::And3</definition>
        <argsstring>(const bool a, const bool b, const bool c)</argsstring>
        <name>And3</name>
        <param>
          <type>const bool</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="278" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="278" bodyend="281"/>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1ae497dca5e03287bf0b47755e4727966c" compoundref="BitUtils_8h" startline="272" endline="276">And</references>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1_1Chips_1_1Gates_1a6c50ba4cc3bfcf7d92a1628e357c19b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Gates::Mux</definition>
        <argsstring>(const bool a, const bool b, const bool s)</argsstring>
        <name>Mux</name>
        <param>
          <type>const bool</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="304" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="304" bodyend="307"/>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1a5251fc609c60aa33cc653dc5bbfa39d4" compoundref="BitUtils_8h" startline="283" endline="286">Or</references>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1ae497dca5e03287bf0b47755e4727966c" compoundref="BitUtils_8h" startline="272" endline="276">And</references>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1a47f1937b5e8e2f1f55c52ece2e236d9a" compoundref="BitUtils_8h" startline="267" endline="270">Not</references>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1_1Chips_1_1Gates_1ada9a46218595da6aec64c80462c5c48f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Gates::NAnd</definition>
        <argsstring>(const bool a, const bool b)</argsstring>
        <name>NAnd</name>
        <param>
          <type>const bool</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="262" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1_1Chips_1_1Gates_1a0a9a77de5bb6d99ccb690718019659b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Gates::NOr</definition>
        <argsstring>(const bool a, const bool b)</argsstring>
        <name>NOr</name>
        <param>
          <type>const bool</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="293" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="293" bodyend="296"/>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1a47f1937b5e8e2f1f55c52ece2e236d9a" compoundref="BitUtils_8h" startline="267" endline="270">Not</references>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1ada9a46218595da6aec64c80462c5c48f" compoundref="BitUtils_8h" startline="262" endline="265">NAnd</references>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1_1Chips_1_1Gates_1a47f1937b5e8e2f1f55c52ece2e236d9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Gates::Not</definition>
        <argsstring>(const bool a)</argsstring>
        <name>Not</name>
        <param>
          <type>const bool</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="267" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="267" bodyend="270"/>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1ada9a46218595da6aec64c80462c5c48f" compoundref="BitUtils_8h" startline="262" endline="265">NAnd</references>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1_1Chips_1_1Gates_1a5251fc609c60aa33cc653dc5bbfa39d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Gates::Or</definition>
        <argsstring>(const bool a, const bool b)</argsstring>
        <name>Or</name>
        <param>
          <type>const bool</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="283" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="283" bodyend="286"/>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1ada9a46218595da6aec64c80462c5c48f" compoundref="BitUtils_8h" startline="262" endline="265">NAnd</references>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1a47f1937b5e8e2f1f55c52ece2e236d9a" compoundref="BitUtils_8h" startline="267" endline="270">Not</references>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1_1Chips_1_1Gates_1a6acffbc2c6a453d2d4f856180395cf24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Gates::Or3</definition>
        <argsstring>(const bool a, const bool b, const bool c)</argsstring>
        <name>Or3</name>
        <param>
          <type>const bool</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="288" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="288" bodyend="291"/>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1a5251fc609c60aa33cc653dc5bbfa39d4" compoundref="BitUtils_8h" startline="283" endline="286">Or</references>
      </memberdef>
      <memberdef kind="function" id="namespaceHack_1_1Chips_1_1Gates_1a002092c1145c7301b06c0a0cab9fc889" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Gates::XOr</definition>
        <argsstring>(const bool a, const bool b)</argsstring>
        <name>XOr</name>
        <param>
          <type>const bool</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/BitUtils.h" line="298" column="1" bodyfile="Source/Chips/BitUtils.h" bodystart="298" bodyend="302"/>
        <references refid="namespaceHack_1_1Chips_1_1Gates_1ada9a46218595da6aec64c80462c5c48f" compoundref="BitUtils_8h" startline="262" endline="265">NAnd</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Chips/BitUtils.h" line="261" column="1"/>
  </compounddef>
</doxygen>
