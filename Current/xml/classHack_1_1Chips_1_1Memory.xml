<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Chips_1_1Memory" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Hack::Chips::Memory</compoundname>
    <basecompoundref refid="classHack_1_1Chips_1_1Chip" prot="public" virt="non-virtual">Hack::Chips::Chip&lt; uint8_t, 8 &gt;</basecompoundref>
    <includes local="no">Source/Chips/Memory.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Memory_1aff9db55bc27659fc1765468a4fdd7077" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>const uint16_t Hack::Chips::Memory::ExtensionAddress</definition>
        <argsstring></argsstring>
        <name>ExtensionAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="36" column="1" bodyfile="Source/Chips/Memory.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Memory_1a0185f63e7f6bde6f829142ba97800c73" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>const uint16_t Hack::Chips::Memory::HeapAddress</definition>
        <argsstring></argsstring>
        <name>HeapAddress</name>
        <initializer>= 0x0800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="35" column="1" bodyfile="Source/Chips/Memory.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Memory_1aeacf9b833a7fde722f19829077675b60" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>const uint16_t Hack::Chips::Memory::MaxAddress</definition>
        <argsstring></argsstring>
        <name>MaxAddress</name>
        <initializer>= 0x6000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="32" column="1" bodyfile="Source/Chips/Memory.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Memory_1a5e6ec45243f237084d377b6aefb6981b" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>const uint16_t Hack::Chips::Memory::ScreenAddress</definition>
        <argsstring></argsstring>
        <name>ScreenAddress</name>
        <initializer>= 0x4000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="33" column="1" bodyfile="Source/Chips/Memory.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Memory_1af6c812b43306431812791769cc63a7f1" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>const uint16_t Hack::Chips::Memory::StackAddress</definition>
        <argsstring></argsstring>
        <name>StackAddress</name>
        <initializer>= 0x0100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="34" column="1" bodyfile="Source/Chips/Memory.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Memory_1af90dd7179df6ab18e1683d1734583d3f" prot="private" static="no" mutable="no">
        <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>uint16_t Hack::Chips::Memory::_address</definition>
        <argsstring></argsstring>
        <name>_address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="45" column="1" bodyfile="Source/Chips/Memory.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Memory_1a945ff73b32a627124f4304adf6d32b63" prot="private" static="no" mutable="no">
        <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>uint16_t Hack::Chips::Memory::_in</definition>
        <argsstring></argsstring>
        <name>_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="43" column="1" bodyfile="Source/Chips/Memory.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Memory_1a52c99b8e93fd12ef32912e5e2bbc1395" prot="private" static="no" mutable="no">
        <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>uint16_t Hack::Chips::Memory::_out</definition>
        <argsstring></argsstring>
        <name>_out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="44" column="1" bodyfile="Source/Chips/Memory.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Memory_1a8dcdf891c8b31f18dd38452431933b01" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceHack_1_1Chips_1a34177040653a4658b7c74d3846e164e1" kindref="member">Ram16k</ref> *</type>
        <definition>Ram16k* Hack::Chips::Memory::_ram16</definition>
        <argsstring></argsstring>
        <name>_ram16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="47" column="1" bodyfile="Source/Chips/Memory.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Memory_1ac2016f1aef2e2d41d1ca4a98f80def12" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceHack_1_1Chips_1a205aa97050ad01560145252139c81057" kindref="member">Screen</ref> *</type>
        <definition>Screen* Hack::Chips::Memory::_screen</definition>
        <argsstring></argsstring>
        <name>_screen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="48" column="1" bodyfile="Source/Chips/Memory.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a7b99f6f26a6a223cf30bd4c828232f0e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Memory::evaluate</definition>
        <argsstring>()</argsstring>
        <name>evaluate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="39" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="155" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1aac065d165b148fee6c54c1f6efe49f33" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Memory::isDirty</definition>
        <argsstring>() override</argsstring>
        <name>isDirty</name>
        <reimplements refid="classHack_1_1Chips_1_1Chip_1a63bb368bb0827830235759b33718d1b4">isDirty</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="40" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a61230569ad0974409e4bd637b882da2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Memory::markDirty</definition>
        <argsstring>()</argsstring>
        <name>markDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="41" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="150" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a8b1121ef63c4984ff65de8bf52132e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Chips::Memory::Memory</definition>
        <argsstring>()</argsstring>
        <name>Memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="51" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1ab977922882f28388d828482d2bba497d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Chips::Memory::~Memory</definition>
        <argsstring>() override</argsstring>
        <name>~Memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="52" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a7f5b5e64aa1b441be1bc547e27602559" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>uint16_t Hack::Chips::Memory::get</definition>
        <argsstring>(const size_t &amp;i) const</argsstring>
        <name>get</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="72" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="121" bodyend="130"/>
        <references refid="classHack_1_1Chips_1_1Memory_1aeacf9b833a7fde722f19829077675b60" compoundref="Chips_2Memory_8h" startline="32">MaxAddress</references>
        <references refid="classHack_1_1Chips_1_1Memory_1a5e6ec45243f237084d377b6aefb6981b" compoundref="Chips_2Memory_8h" startline="33">ScreenAddress</references>
        <references refid="classHack_1_1Chips_1_1DefaultMemorySegment_1a94ef78fc28470abbd4b024e2b6d44510" compoundref="DefaultMemorySegment_8h" startline="69" endline="78">Hack::Chips::DefaultMemorySegment&lt; High, ElementCount &gt;::get</references>
        <references refid="classHack_1_1Chips_1_1IMemorySegment_1abd9da88a0da67c4ea4cebb492cef6b78">Hack::Chips::IMemorySegment&lt; High, ElementCount &gt;::get</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a9c799940a43fb1588ec230cd4d799ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>uint16_t Hack::Chips::Memory::getOut</definition>
        <argsstring>()</argsstring>
        <name>getOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="70" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="114" bodyend="119"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" compoundref="Chip_8h" startline="49">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::_bits</references>
        <references refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" compoundref="BitUtils_8h" startline="40">Hack::Chips::Bit7</references>
        <references refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a558a82390f139f886fdec62375e5209e" compoundref="BitUtils_8h" startline="39">Hack::Chips::Bit6</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1aa7afb1c4ee2a01723002472bcabbc728" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceHack_1_1Chips_1a205aa97050ad01560145252139c81057" kindref="member">Screen</ref> *</type>
        <definition>Screen * Hack::Chips::Memory::getScreen</definition>
        <argsstring>() const</argsstring>
        <name>getScreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="54" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a3eeff5b61f578ed990745b0b1ce96d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Memory::initializeScreen</definition>
        <argsstring>(Screen *screen=nullptr)</argsstring>
        <name>initializeScreen</name>
        <param>
          <type><ref refid="namespaceHack_1_1Chips_1a205aa97050ad01560145252139c81057" kindref="member">Screen</ref> *</type>
          <declname>screen</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="56" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="51" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a5d32929ad9a9abf8f0634549462e7f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Memory::lock</definition>
        <argsstring>(bool v)</argsstring>
        <name>lock</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="68" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="106" bodyend="112"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" compoundref="Chip_8h" startline="49">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::_bits</references>
        <references refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a558a82390f139f886fdec62375e5209e" compoundref="BitUtils_8h" startline="39">Hack::Chips::Bit6</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a33e18b325ababb24a8f50de7dcf03fd0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref> *</type>
        <definition>uint16_t * Hack::Chips::Memory::pointer</definition>
        <argsstring>(const size_t &amp;address) const</argsstring>
        <name>pointer</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="74" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="132" bodyend="137"/>
        <references refid="classHack_1_1Chips_1_1Memory_1a5e6ec45243f237084d377b6aefb6981b" compoundref="Chips_2Memory_8h" startline="33">ScreenAddress</references>
        <references refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ad4b862a78421101fef5afc7ad76cd942" compoundref="DefaultMemorySegment_8h" startline="81" endline="86">Hack::Chips::DefaultMemorySegment&lt; High, ElementCount &gt;::pointer</references>
        <references refid="classHack_1_1Chips_1_1IMemorySegment_1a928606841d9d6b0130aa7dbdbe7d294e">Hack::Chips::IMemorySegment&lt; High, ElementCount &gt;::pointer</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a5baffcb2b03efd29620483621723b412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Memory::setAddress</definition>
        <argsstring>(const uint16_t &amp;v)</argsstring>
        <name>setAddress</name>
        <param>
          <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="60" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="71" bodyend="75"/>
        <references refid="classHack_1_1Chips_1_1Memory_1aeacf9b833a7fde722f19829077675b60" compoundref="Chips_2Memory_8h" startline="32">MaxAddress</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1aff5964e2c12b9d9d2df86251852f7667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Memory::setClock</definition>
        <argsstring>(bool v)</argsstring>
        <name>setClock</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="66" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="97" bodyend="104"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" compoundref="Chip_8h" startline="49">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::_bits</references>
        <references refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a8487c63d5dca7d87b359feca1a2c2ac8" compoundref="BitUtils_8h" startline="34">Hack::Chips::Bit1</references>
        <references refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" compoundref="BitUtils_8h" startline="40">Hack::Chips::Bit7</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a2543b6659fa9ecce5b9f72076a6dc4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Memory::setIn</definition>
        <argsstring>(const uint16_t &amp;v)</argsstring>
        <name>setIn</name>
        <param>
          <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="58" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="62" bodyend="69"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" compoundref="Chip_8h" startline="49">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::_bits</references>
        <references refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" compoundref="BitUtils_8h" startline="40">Hack::Chips::Bit7</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a1e0256353b44cb5742b01d569e004aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Memory::setLoad</definition>
        <argsstring>(bool v)</argsstring>
        <name>setLoad</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="64" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="88" bodyend="95"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" compoundref="Chip_8h" startline="49">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::_bits</references>
        <references refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a3c93b3dc9ed5f470c6f86f10b05b2386" compoundref="BitUtils_8h" startline="33">Hack::Chips::Bit0</references>
        <references refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" compoundref="BitUtils_8h" startline="40">Hack::Chips::Bit7</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a5b672deb1ea7feca8dc1b2edd6970e08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Memory::setValue</definition>
        <argsstring>(const size_t &amp;index, const uint16_t &amp;v) const</argsstring>
        <name>setValue</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="62" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="77" bodyend="86"/>
        <references refid="classHack_1_1Chips_1_1Memory_1aeacf9b833a7fde722f19829077675b60" compoundref="Chips_2Memory_8h" startline="32">MaxAddress</references>
        <references refid="classHack_1_1Chips_1_1Memory_1a5e6ec45243f237084d377b6aefb6981b" compoundref="Chips_2Memory_8h" startline="33">ScreenAddress</references>
        <references refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ac10efeb1855e75c99717840b6bca98d7" compoundref="DefaultMemorySegment_8h" startline="89" endline="94">Hack::Chips::DefaultMemorySegment&lt; High, ElementCount &gt;::setValue</references>
        <references refid="classHack_1_1Chips_1_1IMemorySegment_1a2fe4fb4ddf831109accb6c95f6dbf990">Hack::Chips::IMemorySegment&lt; High, ElementCount &gt;::setValue</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Memory_1a0f261c4cfff3ae3fcd99537d2588a180" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Memory::zero</definition>
        <argsstring>() const</argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Memory.h" line="76" column="1" bodyfile="Source/Chips/Memory.cpp" bodystart="139" bodyend="143"/>
        <references refid="classHack_1_1Chips_1_1DefaultMemorySegment_1af6db3804cc8555a3a302e9264885d5b4" compoundref="DefaultMemorySegment_8h" startline="97" endline="100">Hack::Chips::DefaultMemorySegment&lt; High, ElementCount &gt;::zero</references>
        <references refid="classHack_1_1Chips_1_1IMemorySegment_1aae4cff10f3ec39ef2c6b08c42fcc937c">Hack::Chips::IMemorySegment&lt; High, ElementCount &gt;::zero</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="163">
        <label>Hack::Chips::Chip&lt; uint8_t, 8 &gt;</label>
        <link refid="classHack_1_1Chips_1_1Chip"/>
      </node>
      <node id="162">
        <label>Hack::Chips::Memory</label>
        <link refid="classHack_1_1Chips_1_1Memory"/>
        <childnode refid="163" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="167">
        <label>uint16_t</label>
        <link refid="classuint16__t"/>
      </node>
      <node id="166">
        <label>uint8_t</label>
        <link refid="classuint8__t"/>
      </node>
      <node id="165">
        <label>Hack::Chips::Chip&lt; uint8_t, 8 &gt;</label>
        <link refid="classHack_1_1Chips_1_1Chip"/>
        <childnode refid="166" relation="usage">
          <edgelabel>_bits</edgelabel>
        </childnode>
      </node>
      <node id="164">
        <label>Hack::Chips::Memory</label>
        <link refid="classHack_1_1Chips_1_1Memory"/>
        <childnode refid="165" relation="public-inheritance">
        </childnode>
        <childnode refid="167" relation="usage">
          <edgelabel>MaxAddress</edgelabel>
          <edgelabel>ScreenAddress</edgelabel>
          <edgelabel>HeapAddress</edgelabel>
          <edgelabel>StackAddress</edgelabel>
          <edgelabel>ExtensionAddress</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Source/Chips/Memory.h" line="30" column="1" bodyfile="Source/Chips/Memory.h" bodystart="29" bodyend="77"/>
    <listofallmembers>
      <member refid="classHack_1_1Chips_1_1Memory_1af90dd7179df6ab18e1683d1734583d3f" prot="private" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>_address</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" prot="protected" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>_bits</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a945ff73b32a627124f4304adf6d32b63" prot="private" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>_in</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a52c99b8e93fd12ef32912e5e2bbc1395" prot="private" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>_out</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a8dcdf891c8b31f18dd38452431933b01" prot="private" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>_ram16</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1ac2016f1aef2e2d41d1ca4a98f80def12" prot="private" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>_screen</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a1971f958edb5fa83790baa14c9d39ee8" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>applyBit</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a5a604431fa35bc87e0d7f4328b4ad4a1" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>assignBit</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a485588367ebaefcaaec8847faffe8870" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>Chip</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a21ec8cfbaba9e08deb3607c7eff9ad63" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>clearBit</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a7b99f6f26a6a223cf30bd4c828232f0e" prot="private" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>evaluate</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1aff9db55bc27659fc1765468a4fdd7077" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>ExtensionAddress</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a7f5b5e64aa1b441be1bc547e27602559" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>get</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>getBit</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a9c799940a43fb1588ec230cd4d799ed3" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>getOut</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1aa7afb1c4ee2a01723002472bcabbc728" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>getScreen</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a0185f63e7f6bde6f829142ba97800c73" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>HeapAddress</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a3eeff5b61f578ed990745b0b1ce96d9b" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>initializeScreen</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1aac065d165b148fee6c54c1f6efe49f33" prot="private" virt="virtual"><scope>Hack::Chips::Memory</scope><name>isDirty</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a5d32929ad9a9abf8f0634549462e7f0b" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>lock</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a61230569ad0974409e4bd637b882da2f" prot="private" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>markDirty</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1aeacf9b833a7fde722f19829077675b60" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>MaxAddress</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a8b1121ef63c4984ff65de8bf52132e0e" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>Memory</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a33e18b325ababb24a8f50de7dcf03fd0" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>pointer</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a5e6ec45243f237084d377b6aefb6981b" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>ScreenAddress</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a5baffcb2b03efd29620483621723b412" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>setAddress</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a1240a9c5045e3dfcb5595700b6c474d6" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>setBit</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1aff5964e2c12b9d9d2df86251852f7667" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>setClock</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a2543b6659fa9ecce5b9f72076a6dc4f9" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>setIn</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a1e0256353b44cb5742b01d569e004aa3" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>setLoad</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a5b672deb1ea7feca8dc1b2edd6970e08" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>setValue</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1af6c812b43306431812791769cc63a7f1" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>StackAddress</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1a0f261c4cfff3ae3fcd99537d2588a180" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>zero</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a512ea103436d620cad8b3fc80ca9c06c" prot="public" virt="virtual"><scope>Hack::Chips::Memory</scope><name>~Chip</name></member>
      <member refid="classHack_1_1Chips_1_1Memory_1ab977922882f28388d828482d2bba497d" prot="public" virt="non-virtual"><scope>Hack::Chips::Memory</scope><name>~Memory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
