<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Assembler_1_1Parser" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Hack::Assembler::Parser</compoundname>
    <basecompoundref refid="classHack_1_1ParserBase" prot="public" virt="non-virtual">Hack::ParserBase</basecompoundref>
    <includes local="no">Source/Assembler/Parser.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classHack_1_1Assembler_1_1Parser_1a9e0e8293fb5dfb34d2669b83ee4e7a61" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classuint16__t" kindref="compound">uint16_t</ref> &gt;</type>
        <definition>typedef std::vector&lt;uint16_t&gt; Hack::Assembler::Parser::Instructions</definition>
        <argsstring></argsstring>
        <name>Instructions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="34" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classHack_1_1Assembler_1_1Parser_1ad1744b6d9135f851433d88b8e79d824a" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespaceHack_1_1Assembler_1ad1af9d4a0a202058a0d533d12c60c3b6" kindref="member">StringIndex</ref> &gt;</type>
        <definition>typedef std::vector&lt;StringIndex&gt; Hack::Assembler::Parser::LabelLookup</definition>
        <argsstring></argsstring>
        <name>LabelLookup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="36" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classHack_1_1Assembler_1_1Parser_1ac1448535aceaa8dcc7d35a3067790d62" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref>, size_t &gt;</type>
        <definition>typedef std::unordered_map&lt;String, size_t&gt; Hack::Assembler::Parser::Labels</definition>
        <argsstring></argsstring>
        <name>Labels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="35" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHack_1_1Assembler_1_1Parser_1a9e635ed5ef04faa52e02e3016ec2462c" prot="private" static="no" mutable="no">
        <type><ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
        <definition>uint8_t Hack::Assembler::Parser::_aBit</definition>
        <argsstring></argsstring>
        <name>_aBit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="43" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Assembler_1_1Parser_1ad30fc37042c885a1a02ef1f30a43eeab" prot="private" static="no" mutable="no">
        <type><ref refid="classuint16__t" kindref="compound">uint16_t</ref></type>
        <definition>uint16_t Hack::Assembler::Parser::_cBits</definition>
        <argsstring></argsstring>
        <name>_cBits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="41" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Assembler_1_1Parser_1a335052745a9227e85fabefbe8b58675f" prot="private" static="no" mutable="no">
        <type><ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
        <definition>uint8_t Hack::Assembler::Parser::_dBits</definition>
        <argsstring></argsstring>
        <name>_dBits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="42" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Assembler_1_1Parser_1a8bb78b6efd3d4d98b67a0dbb2f0bbd34" prot="private" static="no" mutable="no">
        <type><ref refid="classHack_1_1Assembler_1_1Parser_1a9e0e8293fb5dfb34d2669b83ee4e7a61" kindref="member">Instructions</ref></type>
        <definition>Instructions Hack::Assembler::Parser::_instructions</definition>
        <argsstring></argsstring>
        <name>_instructions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="39" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Assembler_1_1Parser_1aed408db18fa5a8daeb47947e0c0db97f" prot="private" static="no" mutable="no">
        <type><ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
        <definition>uint8_t Hack::Assembler::Parser::_jBits</definition>
        <argsstring></argsstring>
        <name>_jBits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="44" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Assembler_1_1Parser_1ae0261723aae1d040467767a92712bd2c" prot="private" static="no" mutable="no">
        <type><ref refid="classHack_1_1Assembler_1_1Parser_1ac1448535aceaa8dcc7d35a3067790d62" kindref="member">Labels</ref></type>
        <definition>Labels Hack::Assembler::Parser::_labels</definition>
        <argsstring></argsstring>
        <name>_labels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="40" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Assembler_1_1Parser_1a74a723794ca6f1b3895fe46fbc966ff1" prot="private" static="no" mutable="no">
        <type><ref refid="classHack_1_1Assembler_1_1Parser_1ad1744b6d9135f851433d88b8e79d824a" kindref="member">LabelLookup</ref></type>
        <definition>LabelLookup Hack::Assembler::Parser::_resolution</definition>
        <argsstring></argsstring>
        <name>_resolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="45" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a57c3c5382a89c3a834a41e95de23075c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::assignmentExpression</definition>
        <argsstring>()</argsstring>
        <name>assignmentExpression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="55" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="359" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1af9d6c140008cef8aafc6564f32563b57" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::compoundExpression</definition>
        <argsstring>()</argsstring>
        <name>compoundExpression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="53" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="342" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a5157786441962e2395d0025d39ed553a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::compoundExpressionAOne</definition>
        <argsstring>()</argsstring>
        <name>compoundExpressionAOne</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="51" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="271" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a1c9d43451214a8df14bdbc6811e2ef19" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::compoundExpressionAZero</definition>
        <argsstring>()</argsstring>
        <name>compoundExpressionAZero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="49" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="182" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a04cbe144334344b789cde9514f38ce02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::expression</definition>
        <argsstring>()</argsstring>
        <name>expression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="65" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="472" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a57dae3dba31f7f1581c80748d189aa21" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::expressionA</definition>
        <argsstring>()</argsstring>
        <name>expressionA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="61" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="105" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a174453710e1514f5507f07bae9cd32d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::expressionC</definition>
        <argsstring>()</argsstring>
        <name>expressionC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="59" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="387" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1ab59071441d9b15f8e967643312bb04f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::identityExpression</definition>
        <argsstring>()</argsstring>
        <name>identityExpression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="57" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="154" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1ada3c87e4753d15fedf01064f97c2874d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::label</definition>
        <argsstring>()</argsstring>
        <name>label</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="63" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="451" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a80c15795f9a3fc4b6c89680bb5ce6095" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::parseImpl</definition>
        <argsstring>(IStream &amp;is) override</argsstring>
        <name>parseImpl</name>
        <reimplements refid="classHack_1_1ParserBase_1aca4fd325b8520d930ca612cf3337c625">parseImpl</reimplements>
        <param>
          <type><ref refid="namespaceHack_1a830c8eb3c005ef2fbc470e0b141b93c5" kindref="member">IStream</ref> &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="69" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="491" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a7bcbfcf290bcc1cd129e82c0bcdb52c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::pushCInstruction</definition>
        <argsstring>()</argsstring>
        <name>pushCInstruction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="47" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="78" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a515e2db9af0063e30d1c2653650e643f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::resolveLabels</definition>
        <argsstring>()</argsstring>
        <name>resolveLabels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="67" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="416" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a02ab9d276c5d8c6152d2392e417cfe2b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Parser::writeImpl</definition>
        <argsstring>(OStream &amp;os, int format=0) override</argsstring>
        <name>writeImpl</name>
        <reimplements refid="classHack_1_1ParserBase_1a4e9dd3f0283226de48b148d66b416f0f">writeImpl</reimplements>
        <param>
          <type><ref refid="namespaceHack_1a404ae4dff97be2fec362955db83690da" kindref="member">OStream</ref> &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>int</type>
          <declname>format</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="71" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="517" bodyend="524"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1ad076691ece43e0632cd613e597df061e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Assembler::Parser::Parser</definition>
        <argsstring>()</argsstring>
        <name>Parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="74" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="63" bodyend="70"/>
        <references refid="classHack_1_1ParserBase_1aec27fb418bd286a67e449bbf42ddb4e7" compoundref="ParserBase_8h" startline="40">Hack::ParserBase::_scanner</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a48c44a16d5bae99c1adb31f12e6aa4c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Assembler::Parser::~Parser</definition>
        <argsstring>() override</argsstring>
        <name>~Parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="75" column="1" bodyfile="Source/Assembler/Parser.cpp" bodystart="72" bodyend="76"/>
        <references refid="classHack_1_1ParserBase_1aec27fb418bd286a67e449bbf42ddb4e7" compoundref="ParserBase_8h" startline="40">Hack::ParserBase::_scanner</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Parser_1a5f8343d626d9e19a9d1cd7d64979ae24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classHack_1_1Assembler_1_1Parser_1a9e0e8293fb5dfb34d2669b83ee4e7a61" kindref="member">Instructions</ref> &amp;</type>
        <definition>const Parser::Instructions &amp; Hack::Assembler::Parser::instructions</definition>
        <argsstring>() const</argsstring>
        <name>instructions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Parser.h" line="77" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="80" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>Hack::ParserBase</label>
        <link refid="classHack_1_1ParserBase"/>
      </node>
      <node id="6">
        <label>Hack::Assembler::Parser</label>
        <link refid="classHack_1_1Assembler_1_1Parser"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14">
        <label>size_t</label>
      </node>
      <node id="12">
        <label>Hack::IndexCache&lt; String &gt;</label>
        <link refid="classHack_1_1IndexCache"/>
      </node>
      <node id="16">
        <label>IStream *</label>
      </node>
      <node id="17">
        <label>int32_t</label>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="10">
        <label>vector&lt; TokenBase &gt;</label>
      </node>
      <node id="9">
        <label>Hack::ParserBase</label>
        <link refid="classHack_1_1ParserBase"/>
        <childnode refid="10" relation="usage">
          <edgelabel>_tokens</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>_scanner</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>_cursor</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>_filePath</edgelabel>
          <edgelabel>_file</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>Hack::Assembler::Parser</label>
        <link refid="classHack_1_1Assembler_1_1Parser"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>Hack::ScannerBase</label>
        <link refid="classHack_1_1ScannerBase"/>
        <childnode refid="12" relation="usage">
          <edgelabel>_stringTable</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>_intTable</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>_line</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>_file</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>_stream</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>Hack::IndexCache&lt; int &gt;</label>
        <link refid="classHack_1_1IndexCache"/>
      </node>
    </collaborationgraph>
    <location file="Source/Assembler/Parser.h" line="32" column="1" bodyfile="Source/Assembler/Parser.h" bodystart="31" bodyend="78"/>
    <listofallmembers>
      <member refid="classHack_1_1Assembler_1_1Parser_1a9e635ed5ef04faa52e02e3016ec2462c" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_aBit</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1ad30fc37042c885a1a02ef1f30a43eeab" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_cBits</name></member>
      <member refid="classHack_1_1ParserBase_1a050b6fa7aa7a8a0ad9e6dc769c5fe1ab" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_cursor</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a335052745a9227e85fabefbe8b58675f" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_dBits</name></member>
      <member refid="classHack_1_1ParserBase_1a3845bf25a071be865d1abf5d86547d4e" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_file</name></member>
      <member refid="classHack_1_1ParserBase_1ab0e5c4de751cb9162c1068d08fe5108f" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_filePath</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a8bb78b6efd3d4d98b67a0dbb2f0bbd34" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_instructions</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1aed408db18fa5a8daeb47947e0c0db97f" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_jBits</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1ae0261723aae1d040467767a92712bd2c" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_labels</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a74a723794ca6f1b3895fe46fbc966ff1" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_resolution</name></member>
      <member refid="classHack_1_1ParserBase_1aec27fb418bd286a67e449bbf42ddb4e7" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_scanner</name></member>
      <member refid="classHack_1_1ParserBase_1a848d7a2893106ea47afc8839aae2f4e4" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>_tokens</name></member>
      <member refid="classHack_1_1ParserBase_1a857d4ca08875acc4a5ae351eab22ebee" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>advanceCursor</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a57c3c5382a89c3a834a41e95de23075c" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>assignmentExpression</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1af9d6c140008cef8aafc6564f32563b57" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>compoundExpression</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a5157786441962e2395d0025d39ed553a" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>compoundExpressionAOne</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a1c9d43451214a8df14bdbc6811e2ef19" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>compoundExpressionAZero</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a04cbe144334344b789cde9514f38ce02" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>expression</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a57dae3dba31f7f1581c80748d189aa21" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>expressionA</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a174453710e1514f5507f07bae9cd32d6" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>expressionC</name></member>
      <member refid="classHack_1_1ParserBase_1ab701a1a26d52964d228d1c1472130483" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>filename</name></member>
      <member refid="classHack_1_1ParserBase_1a6b9602e4c23316318668f57da6db421c" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>getToken</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1ab59071441d9b15f8e967643312bb04f5" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>identityExpression</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a9e0e8293fb5dfb34d2669b83ee4e7a61" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>Instructions</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a5f8343d626d9e19a9d1cd7d64979ae24" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>instructions</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1ada3c87e4753d15fedf01064f97c2874d" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>label</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1ad1744b6d9135f851433d88b8e79d824a" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>LabelLookup</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1ac1448535aceaa8dcc7d35a3067790d62" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>Labels</name></member>
      <member refid="classHack_1_1ParserBase_1a87c46515fd89517db2645943cb44493b" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>line</name></member>
      <member refid="classHack_1_1ParserBase_1a4668ec9b913931ce518de6d7f92fb4e0" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>parse</name></member>
      <member refid="classHack_1_1ParserBase_1a526cddbd87b36f03b8e76db9b7d640b9" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>parse</name></member>
      <member refid="classHack_1_1ParserBase_1aa78f3654190d9b4f2ea49f8bcfa97f2b" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>parseError</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a80c15795f9a3fc4b6c89680bb5ce6095" prot="private" virt="virtual"><scope>Hack::Assembler::Parser</scope><name>parseImpl</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1ad076691ece43e0632cd613e597df061e" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>Parser</name></member>
      <member refid="classHack_1_1ParserBase_1ad2acc126d182c46c5d7f2afbb2aaeb66" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>ParserBase</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a7bcbfcf290bcc1cd129e82c0bcdb52c7" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>pushCInstruction</name></member>
      <member refid="classHack_1_1ParserBase_1a8436c3d2c31c4a3e822c946c8a6b1a92" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>readToken</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a515e2db9af0063e30d1c2653650e643f" prot="private" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>resolveLabels</name></member>
      <member refid="classHack_1_1ParserBase_1a7fbbfbffb70e56bfd7d117f8aabcd8f0" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>Tokens</name></member>
      <member refid="classHack_1_1ParserBase_1a4560ce70fee098d7508b053b409c1d19" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>write</name></member>
      <member refid="classHack_1_1ParserBase_1a644c6667a785050f490a4ee24a98e2e7" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>write</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a02ab9d276c5d8c6152d2392e417cfe2b" prot="private" virt="virtual"><scope>Hack::Assembler::Parser</scope><name>writeImpl</name></member>
      <member refid="classHack_1_1Assembler_1_1Parser_1a48c44a16d5bae99c1adb31f12e6aa4c7" prot="public" virt="non-virtual"><scope>Hack::Assembler::Parser</scope><name>~Parser</name></member>
      <member refid="classHack_1_1ParserBase_1a6e57377073e2e728304316b73986ded2" prot="public" virt="virtual"><scope>Hack::Assembler::Parser</scope><name>~ParserBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
