<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Chips_1_1DFlipFlop" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Hack::Chips::DFlipFlop</compoundname>
    <basecompoundref refid="classHack_1_1Chips_1_1Chip" prot="public" virt="non-virtual">Hack::Chips::Chip&lt; uint8_t, 8 &gt;</basecompoundref>
    <includes local="no">Source/Chips/DFlipFlop.h</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHack_1_1Chips_1_1DFlipFlop_1a2bcfa79ca5626de08ee6b8e8c801da35" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::DFlipFlop::evaluate</definition>
        <argsstring>()</argsstring>
        <name>evaluate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DFlipFlop.h" line="30" column="1" bodyfile="Source/Chips/DFlipFlop.cpp" bodystart="67" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Chips_1_1DFlipFlop_1a504a17e25d0b715e4163a5fe68c406bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Chips::DFlipFlop::DFlipFlop</definition>
        <argsstring>()</argsstring>
        <name>DFlipFlop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DFlipFlop.h" line="33" column="1" bodyfile="Source/Chips/DFlipFlop.cpp" bodystart="26" bodyend="30"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a5a604431fa35bc87e0d7f4328b4ad4a1" compoundref="Chip_8h" startline="109" endline="112">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::assignBit</references>
        <references refid="classHack_1_1Chips_1_1Chip_1a1240a9c5045e3dfcb5595700b6c474d6" compoundref="Chip_8h" startline="103" endline="106">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::setBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DFlipFlop_1a0274009b26b5ad3ed9feae2fd21d8373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::DFlipFlop::getQ</definition>
        <argsstring>()</argsstring>
        <name>getQ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DFlipFlop.h" line="41" column="1" bodyfile="Source/Chips/DFlipFlop.cpp" bodystart="53" bodyend="58"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DFlipFlop_1afb916037f8a778cef3063ed839c33ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::DFlipFlop::getQPlus</definition>
        <argsstring>()</argsstring>
        <name>getQPlus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DFlipFlop.h" line="43" column="1" bodyfile="Source/Chips/DFlipFlop.cpp" bodystart="60" bodyend="65"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DFlipFlop_1ab27bf000cec95c98a91a9810a5b56be2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::DFlipFlop::setD</definition>
        <argsstring>(bool d)</argsstring>
        <name>setD</name>
        <param>
          <type>bool</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DFlipFlop.h" line="35" column="1" bodyfile="Source/Chips/DFlipFlop.cpp" bodystart="32" bodyend="36"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a1971f958edb5fa83790baa14c9d39ee8" compoundref="Chip_8h" startline="121" endline="124">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::applyBit</references>
        <references refid="classHack_1_1Chips_1_1Chip_1a1240a9c5045e3dfcb5595700b6c474d6" compoundref="Chip_8h" startline="103" endline="106">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::setBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DFlipFlop_1aa1096ebaad4ebbcc976f48ec9a835732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::DFlipFlop::setG</definition>
        <argsstring>(bool g)</argsstring>
        <name>setG</name>
        <param>
          <type>bool</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DFlipFlop.h" line="37" column="1" bodyfile="Source/Chips/DFlipFlop.cpp" bodystart="38" bodyend="42"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a1971f958edb5fa83790baa14c9d39ee8" compoundref="Chip_8h" startline="121" endline="124">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::applyBit</references>
        <references refid="classHack_1_1Chips_1_1Chip_1a1240a9c5045e3dfcb5595700b6c474d6" compoundref="Chip_8h" startline="103" endline="106">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::setBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DFlipFlop_1a23b698493da3fedf5d51f429803e1b91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::DFlipFlop::setQn</definition>
        <argsstring>(bool qn)</argsstring>
        <name>setQn</name>
        <param>
          <type>bool</type>
          <declname>qn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DFlipFlop.h" line="39" column="1" bodyfile="Source/Chips/DFlipFlop.cpp" bodystart="44" bodyend="51"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a1971f958edb5fa83790baa14c9d39ee8" compoundref="Chip_8h" startline="121" endline="124">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::applyBit</references>
        <references refid="classHack_1_1Chips_1_1Chip_1a21ec8cfbaba9e08deb3607c7eff9ad63" compoundref="Chip_8h" startline="115" endline="118">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::clearBit</references>
        <references refid="classHack_1_1Chips_1_1Chip_1a1240a9c5045e3dfcb5595700b6c474d6" compoundref="Chip_8h" startline="103" endline="106">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::setBit</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="121">
        <label>Hack::Chips::Chip&lt; uint8_t, 8 &gt;</label>
        <link refid="classHack_1_1Chips_1_1Chip"/>
      </node>
      <node id="120">
        <label>Hack::Chips::DFlipFlop</label>
        <link refid="classHack_1_1Chips_1_1DFlipFlop"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="124">
        <label>uint8_t</label>
        <link refid="classuint8__t"/>
      </node>
      <node id="123">
        <label>Hack::Chips::Chip&lt; uint8_t, 8 &gt;</label>
        <link refid="classHack_1_1Chips_1_1Chip"/>
        <childnode refid="124" relation="usage">
          <edgelabel>_bits</edgelabel>
        </childnode>
      </node>
      <node id="122">
        <label>Hack::Chips::DFlipFlop</label>
        <link refid="classHack_1_1Chips_1_1DFlipFlop"/>
        <childnode refid="123" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Source/Chips/DFlipFlop.h" line="28" column="1" bodyfile="Source/Chips/DFlipFlop.h" bodystart="27" bodyend="44"/>
    <listofallmembers>
      <member refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" prot="protected" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>_bits</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a1971f958edb5fa83790baa14c9d39ee8" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>applyBit</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a5a604431fa35bc87e0d7f4328b4ad4a1" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>assignBit</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a485588367ebaefcaaec8847faffe8870" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>Chip</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a21ec8cfbaba9e08deb3607c7eff9ad63" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>clearBit</name></member>
      <member refid="classHack_1_1Chips_1_1DFlipFlop_1a504a17e25d0b715e4163a5fe68c406bf" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>DFlipFlop</name></member>
      <member refid="classHack_1_1Chips_1_1DFlipFlop_1a2bcfa79ca5626de08ee6b8e8c801da35" prot="private" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>evaluate</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>getBit</name></member>
      <member refid="classHack_1_1Chips_1_1DFlipFlop_1a0274009b26b5ad3ed9feae2fd21d8373" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>getQ</name></member>
      <member refid="classHack_1_1Chips_1_1DFlipFlop_1afb916037f8a778cef3063ed839c33ff3" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>getQPlus</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a63bb368bb0827830235759b33718d1b4" prot="protected" virt="virtual"><scope>Hack::Chips::DFlipFlop</scope><name>isDirty</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a1240a9c5045e3dfcb5595700b6c474d6" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>setBit</name></member>
      <member refid="classHack_1_1Chips_1_1DFlipFlop_1ab27bf000cec95c98a91a9810a5b56be2" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>setD</name></member>
      <member refid="classHack_1_1Chips_1_1DFlipFlop_1aa1096ebaad4ebbcc976f48ec9a835732" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>setG</name></member>
      <member refid="classHack_1_1Chips_1_1DFlipFlop_1a23b698493da3fedf5d51f429803e1b91" prot="public" virt="non-virtual"><scope>Hack::Chips::DFlipFlop</scope><name>setQn</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a512ea103436d620cad8b3fc80ca9c06c" prot="public" virt="virtual"><scope>Hack::Chips::DFlipFlop</scope><name>~Chip</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
