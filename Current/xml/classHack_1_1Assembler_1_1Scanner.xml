<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Assembler_1_1Scanner" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Hack::Assembler::Scanner</compoundname>
    <basecompoundref refid="classHack_1_1ScannerBase" prot="public" virt="non-virtual">Hack::ScannerBase</basecompoundref>
    <includes local="no">Source/Assembler/Scanner.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHack_1_1Assembler_1_1Scanner_1aa67d1592e456602655f77bae087246f3" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Hack::Assembler::Scanner::_fsr</definition>
        <argsstring></argsstring>
        <name>_fsr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="31" column="1" bodyfile="Source/Assembler/Scanner.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Assembler_1_1Scanner_1a402d67558e183171f70723b5a70c994d" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Hack::Assembler::Scanner::_offs</definition>
        <argsstring></argsstring>
        <name>_offs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="31" column="1" bodyfile="Source/Assembler/Scanner.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1a596dc9b84a0efaf3527099156fd4b36e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Assembler::Scanner::extractRSymbol</definition>
        <argsstring>(Token &amp;tok)</argsstring>
        <name>extractRSymbol</name>
        <param>
          <type><ref refid="namespaceHack_1_1Assembler_1a9a9dde9280f429162b9c9d91279c7f26" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="39" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="139" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1a01bda1e83e652239d1ada89ade5ef757" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Scanner::initializeTables</definition>
        <argsstring>()</argsstring>
        <name>initializeTables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="33" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="75" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1ab2f954db5ae4dc0bac4218281dd7e5d1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Scanner::readSymbol</definition>
        <argsstring>(String &amp;dest) const</argsstring>
        <name>readSymbol</name>
        <param>
          <type><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="41" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="163" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1ae79a6f7cc03dc841486dde86d6e2623c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Scanner::scanDecimal</definition>
        <argsstring>(Token &amp;tok)</argsstring>
        <name>scanDecimal</name>
        <param>
          <type><ref refid="namespaceHack_1_1Assembler_1a9a9dde9280f429162b9c9d91279c7f26" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="35" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="95" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1a6321cc53877b70e8b2b0634730e894a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Scanner::scanSymbol</definition>
        <argsstring>(Token &amp;tok)</argsstring>
        <name>scanSymbol</name>
        <param>
          <type><ref refid="namespaceHack_1_1Assembler_1a9a9dde9280f429162b9c9d91279c7f26" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="37" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="250" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1a859ea24a3d1228f68f7248b3fbd1454f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Assembler::Scanner::testMultipleRegisterAndJump</definition>
        <argsstring>(Token &amp;tok) const</argsstring>
        <name>testMultipleRegisterAndJump</name>
        <param>
          <type><ref refid="namespaceHack_1_1Assembler_1a9a9dde9280f429162b9c9d91279c7f26" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="45" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="216" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1a8f4417255df1ab33deefb27ff7115cef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Assembler::Scanner::testSingleRegister</definition>
        <argsstring>(Token &amp;tok)</argsstring>
        <name>testSingleRegister</name>
        <param>
          <type><ref refid="namespaceHack_1_1Assembler_1a9a9dde9280f429162b9c9d91279c7f26" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="43" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="180" bodyend="214"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1a3892c05ec60454b2a695452a238e18d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Assembler::Scanner::Scanner</definition>
        <argsstring>()</argsstring>
        <name>Scanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="48" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1aff82440b93c9dbacb6e0243ef5c75f60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Hack::Assembler::Scanner::firstStaticRegister</definition>
        <argsstring>() const</argsstring>
        <name>firstStaticRegister</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="54" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1a5a52101959a1324e168049b8d681131d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Hack::Assembler::Scanner::nextStaticRegister</definition>
        <argsstring>()</argsstring>
        <name>nextStaticRegister</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="56" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Assembler_1_1Scanner_1aa9e49e0419656f2c55d98ed200ceb7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hack::Assembler::Scanner::scan</definition>
        <argsstring>(Token &amp;tok) override</argsstring>
        <name>scan</name>
        <reimplements refid="classHack_1_1ScannerBase_1ac24b88935d8f5463217aacbfa9b87e9b">scan</reimplements>
        <param>
          <type><ref refid="namespaceHack_1_1Assembler_1a9a9dde9280f429162b9c9d91279c7f26" kindref="member">Token</ref> &amp;</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Scanner.h" line="50" column="1" bodyfile="Source/Assembler/Scanner.cpp" bodystart="285" bodyend="361"/>
        <references refid="classHack_1_1ScannerBase_1a553484b098225d77804ffcfbf0382922" compoundref="ScannerBase_8h" startline="34">Hack::ScannerBase::_stream</references>
        <references refid="classHack_1_1TokenBase_1a30cd135b1d593a583b727309323138ad" compoundref="TokenBase_8h" startline="47" endline="56">Hack::TokenBase::clear</references>
        <references refid="classHack_1_1TokenBase_1ae4eadcf3980d196a66db3dc5a1c0d4bd" compoundref="TokenBase_8h" startline="96" endline="99">Hack::TokenBase::setLine</references>
        <references refid="classHack_1_1ScannerBase_1ac7ff4bb59d95de6dcd83f827794086f2" compoundref="ScannerBase_8h" startline="38">Hack::ScannerBase::_line</references>
        <references refid="classHack_1_1ScannerBase_1a16d67c5310c35106dd5caed204460adb" compoundref="ScannerBase_8cpp" startline="66" endline="76">Hack::ScannerBase::scanLineComment</references>
        <references refid="classHack_1_1TokenBase_1aa299ccac72d52b74f3ebc2ce2dcf96a1" compoundref="Token_8cpp" startline="38" endline="41">Hack::TokenBase::setType</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908a6e216370a7594ccc1bba1c215c1aea55" compoundref="Assembler_2Token_8h" startline="57">Hack::Assembler::TOK_AT</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908a4ff9eb9fe01140f2790d23262aee15b9" compoundref="Assembler_2Token_8h" startline="52">Hack::Assembler::TOK_MINUS</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908a57fc3c8374e06e1a4aad4dd701ddfc14" compoundref="Assembler_2Token_8h" startline="55">Hack::Assembler::TOK_AND</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908a4d7b6070721cbd12a68714ef366b7710" compoundref="Assembler_2Token_8h" startline="56">Hack::Assembler::TOK_OR</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908aa40c60bb7f9740a9bf55e8483a17b2cf" compoundref="Assembler_2Token_8h" startline="53">Hack::Assembler::TOK_NOT</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908a5a07d14bb9d7796ce1fd76da13d97329" compoundref="Assembler_2Token_8h" startline="58">Hack::Assembler::TOK_SEMI_COLON</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908aa25dfa8318505862372dc7e5ab7a1105" compoundref="Assembler_2Token_8h" startline="54">Hack::Assembler::TOK_PLUS</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908a9f29e07041ce4ada94e31fc4188ff8eb" compoundref="Assembler_2Token_8h" startline="59">Hack::Assembler::TOK_EQUAL</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908a1d63c313df724c7f5becbc7061c98233" compoundref="Assembler_2Token_8h" startline="60">Hack::Assembler::TOK_L_PAREN</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908af9015f131c8e3d89a5c90de1f2c71c12" compoundref="Assembler_2Token_8h" startline="61">Hack::Assembler::TOK_R_PAREN</references>
        <references refid="classHack_1_1ScannerBase_1a4b419e3a4f91e1f4f136ead8941b7c5e">Hack::ScannerBase::scanWhiteSpace</references>
        <references refid="classHack_1_1ScannerBase_1a0aa5a628913e1c8f04db54201f97e1a7" compoundref="ScannerBase_8h" startline="51" endline="57">Hack::ScannerBase::syntaxError</references>
        <references refid="namespaceHack_1_1Assembler_1ab52345149881cbf184ed8dbc45774908a0b04f0c4d57271cb40554de353dc604a" compoundref="Assembler_2Token_8h" startline="30">Hack::Assembler::TOK_EOF</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="23">
        <label>Hack::Assembler::Scanner</label>
        <link refid="classHack_1_1Assembler_1_1Scanner"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>Hack::ScannerBase</label>
        <link refid="classHack_1_1ScannerBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="29">
        <label>size_t</label>
      </node>
      <node id="27">
        <label>Hack::IndexCache&lt; String &gt;</label>
        <link refid="classHack_1_1IndexCache"/>
      </node>
      <node id="31">
        <label>IStream *</label>
      </node>
      <node id="30">
        <label>string</label>
      </node>
      <node id="25">
        <label>Hack::Assembler::Scanner</label>
        <link refid="classHack_1_1Assembler_1_1Scanner"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>Hack::ScannerBase</label>
        <link refid="classHack_1_1ScannerBase"/>
        <childnode refid="27" relation="usage">
          <edgelabel>_stringTable</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>_intTable</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>_line</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>_file</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>_stream</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>Hack::IndexCache&lt; int &gt;</label>
        <link refid="classHack_1_1IndexCache"/>
      </node>
    </collaborationgraph>
    <location file="Source/Assembler/Scanner.h" line="29" column="1" bodyfile="Source/Assembler/Scanner.h" bodystart="28" bodyend="57"/>
    <listofallmembers>
      <member refid="classHack_1_1ScannerBase_1aee2410ff35c9642a4addab5377339b99" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>_file</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1aa67d1592e456602655f77bae087246f3" prot="private" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>_fsr</name></member>
      <member refid="classHack_1_1ScannerBase_1aa2fe138fe481c6a129d048ed4d58bab8" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>_intTable</name></member>
      <member refid="classHack_1_1ScannerBase_1ac7ff4bb59d95de6dcd83f827794086f2" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>_line</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1a402d67558e183171f70723b5a70c994d" prot="private" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>_offs</name></member>
      <member refid="classHack_1_1ScannerBase_1a553484b098225d77804ffcfbf0382922" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>_stream</name></member>
      <member refid="classHack_1_1ScannerBase_1a414a40b1cf631e4125e828c2607ee137" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>_stringTable</name></member>
      <member refid="classHack_1_1ScannerBase_1a2412fd20aba2fc636877f3ac8db780d0" prot="public" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>attach</name></member>
      <member refid="classHack_1_1ScannerBase_1a5255f93a5545c9c6e5ea7a80f9ed12f5" prot="public" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>containsString</name></member>
      <member refid="classHack_1_1ScannerBase_1a60a1083d1af7068a54330d565ddcb44f" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>extractCode</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1a596dc9b84a0efaf3527099156fd4b36e" prot="private" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>extractRSymbol</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1aff82440b93c9dbacb6e0243ef5c75f60" prot="public" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>firstStaticRegister</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1a01bda1e83e652239d1ada89ade5ef757" prot="private" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>initializeTables</name></member>
      <member refid="classHack_1_1ScannerBase_1ad43d94370b9191abd0a79c6148f1ce5c" prot="public" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>integer</name></member>
      <member refid="classHack_1_1ScannerBase_1a30f51f62024dec9e10aae0f40bfe04e6" prot="public" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>line</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1a5a52101959a1324e168049b8d681131d" prot="public" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>nextStaticRegister</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1ab2f954db5ae4dc0bac4218281dd7e5d1" prot="private" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>readSymbol</name></member>
      <member refid="classHack_1_1ScannerBase_1ac95ab910b82639657337e5a3f6b634ed" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>save</name></member>
      <member refid="classHack_1_1ScannerBase_1a857c80250b61d01dc34925958b979362" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>save</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1aa9e49e0419656f2c55d98ed200ceb7f2" prot="public" virt="virtual"><scope>Hack::Assembler::Scanner</scope><name>scan</name></member>
      <member refid="classHack_1_1ScannerBase_1a4d2174fd338ba032ccb9101087e752dd" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>scanAny</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1ae79a6f7cc03dc841486dde86d6e2623c" prot="private" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>scanDecimal</name></member>
      <member refid="classHack_1_1ScannerBase_1a16d67c5310c35106dd5caed204460adb" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>scanLineComment</name></member>
      <member refid="classHack_1_1ScannerBase_1af515b00a44514c004aaefa7da2944674" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>scanMultiLineComment</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1a3892c05ec60454b2a695452a238e18d2" prot="public" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>Scanner</name></member>
      <member refid="classHack_1_1ScannerBase_1a39a50ecb7b671cefcbf45b1900c10ffb" prot="public" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>ScannerBase</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1a6321cc53877b70e8b2b0634730e894a8" prot="private" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>scanSymbol</name></member>
      <member refid="classHack_1_1ScannerBase_1a4b419e3a4f91e1f4f136ead8941b7c5e" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>scanWhiteSpace</name></member>
      <member refid="classHack_1_1ScannerBase_1aa7dc42bcd86a806dffaf235aed8efeb6" prot="public" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>string</name></member>
      <member refid="classHack_1_1ScannerBase_1a2b080ab6ef2ee68120cbc10a883c92bd" prot="public" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>string</name></member>
      <member refid="classHack_1_1ScannerBase_1a0aa5a628913e1c8f04db54201f97e1a7" prot="protected" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>syntaxError</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1a859ea24a3d1228f68f7248b3fbd1454f" prot="private" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>testMultipleRegisterAndJump</name></member>
      <member refid="classHack_1_1Assembler_1_1Scanner_1a8f4417255df1ab33deefb27ff7115cef" prot="private" virt="non-virtual"><scope>Hack::Assembler::Scanner</scope><name>testSingleRegister</name></member>
      <member refid="classHack_1_1ScannerBase_1a3ed512a25958a785d2ca050c254d113e" prot="public" virt="virtual"><scope>Hack::Assembler::Scanner</scope><name>~ScannerBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
