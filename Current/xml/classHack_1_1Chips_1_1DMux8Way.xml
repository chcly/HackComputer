<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Chips_1_1DMux8Way" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Hack::Chips::DMux8Way</compoundname>
    <basecompoundref refid="classHack_1_1Chips_1_1Chip" prot="public" virt="non-virtual">Hack::Chips::Chip&lt; uint16_t, 16 &gt;</basecompoundref>
    <includes local="no">Source/Chips/DMux8Way.h</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1a73aa8775df607d9ececf2626872ffb66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::DMux8Way::evaluate</definition>
        <argsstring>()</argsstring>
        <name>evaluate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="30" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="133" bodyend="167"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1acf482fcb79b7f1ea5c425c27c49a74c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Chips::DMux8Way::DMux8Way</definition>
        <argsstring>()</argsstring>
        <name>DMux8Way</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="33" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="32" bodyend="35"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a5a604431fa35bc87e0d7f4328b4ad4a1" compoundref="Chip_8h" startline="109" endline="112">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::assignBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1abb3738614a44f125a3f3170cfeaa41e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::DMux8Way::getA</definition>
        <argsstring>()</argsstring>
        <name>getA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="39" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="51" bodyend="56"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1a6151f81178e5a08789ac06b2b44fa9bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::DMux8Way::getB</definition>
        <argsstring>()</argsstring>
        <name>getB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="41" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="58" bodyend="63"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1aa7c7fd1db4e48eff6a91dd60c405a3ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::DMux8Way::getC</definition>
        <argsstring>()</argsstring>
        <name>getC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="43" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="65" bodyend="70"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1a2e013f1b61831e56294f1f9f1101ea13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::DMux8Way::getD</definition>
        <argsstring>()</argsstring>
        <name>getD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="45" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="72" bodyend="77"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1a7b76060d80f9badaa1db6edf01626d51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::DMux8Way::getE</definition>
        <argsstring>()</argsstring>
        <name>getE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="47" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="79" bodyend="84"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1af3c9353fb0320dacacf875e3e1d85d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::DMux8Way::getF</definition>
        <argsstring>()</argsstring>
        <name>getF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="49" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="86" bodyend="91"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1aa8225987b02c7ffeb6f89cd9f742131f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::DMux8Way::getG</definition>
        <argsstring>()</argsstring>
        <name>getG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="51" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="93" bodyend="98"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1a1cab370c7f20c85b4a403c4403aee911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::DMux8Way::getH</definition>
        <argsstring>()</argsstring>
        <name>getH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="53" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="100" bodyend="105"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1a75c8382bcaa366855d0256b28d6c96ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint8__t" kindref="compound">uint8_t</ref></type>
        <definition>uint8_t Hack::Chips::DMux8Way::getOut</definition>
        <argsstring>()</argsstring>
        <name>getOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="55" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="107" bodyend="130"/>
        <references refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="Chip_8h" startline="97" endline="100">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1af84f536333042ba130a9f6ac956ac363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::DMux8Way::setIn</definition>
        <argsstring>(bool input)</argsstring>
        <name>setIn</name>
        <param>
          <type>bool</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="35" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="37" bodyend="41"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a1971f958edb5fa83790baa14c9d39ee8" compoundref="Chip_8h" startline="121" endline="124">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::applyBit</references>
        <references refid="classHack_1_1Chips_1_1Chip_1a1240a9c5045e3dfcb5595700b6c474d6" compoundref="Chip_8h" startline="103" endline="106">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::setBit</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1DMux8Way_1a3c683f9b48d2a2ca3db4c703df084e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::DMux8Way::setSel</definition>
        <argsstring>(const uint8_t &amp;selection)</argsstring>
        <name>setSel</name>
        <param>
          <type>const <ref refid="classuint8__t" kindref="compound">uint8_t</ref> &amp;</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/DMux8Way.h" line="37" column="1" bodyfile="Source/Chips/DMux8Way.cpp" bodystart="43" bodyend="49"/>
        <references refid="classHack_1_1Chips_1_1Chip_1a1971f958edb5fa83790baa14c9d39ee8" compoundref="Chip_8h" startline="121" endline="124">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::applyBit</references>
        <references refid="classHack_1_1Chips_1_1Chip_1a1240a9c5045e3dfcb5595700b6c474d6" compoundref="Chip_8h" startline="103" endline="106">Hack::Chips::Chip&lt; uint16_t, 16 &gt;::setBit</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="136">
        <label>Hack::Chips::Chip&lt; uint16_t, 16 &gt;</label>
        <link refid="classHack_1_1Chips_1_1Chip"/>
      </node>
      <node id="135">
        <label>Hack::Chips::DMux8Way</label>
        <link refid="classHack_1_1Chips_1_1DMux8Way"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="138">
        <label>Hack::Chips::Chip&lt; uint16_t, 16 &gt;</label>
        <link refid="classHack_1_1Chips_1_1Chip"/>
        <childnode refid="139" relation="usage">
          <edgelabel>_bits</edgelabel>
        </childnode>
      </node>
      <node id="137">
        <label>Hack::Chips::DMux8Way</label>
        <link refid="classHack_1_1Chips_1_1DMux8Way"/>
        <childnode refid="138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="139">
        <label>uint16_t</label>
        <link refid="classuint16__t"/>
      </node>
    </collaborationgraph>
    <location file="Source/Chips/DMux8Way.h" line="28" column="1" bodyfile="Source/Chips/DMux8Way.h" bodystart="27" bodyend="56"/>
    <listofallmembers>
      <member refid="classHack_1_1Chips_1_1Chip_1a301128353dd4d1c24a1a0ad7b933ceda" prot="protected" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>_bits</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a1971f958edb5fa83790baa14c9d39ee8" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>applyBit</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a5a604431fa35bc87e0d7f4328b4ad4a1" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>assignBit</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a485588367ebaefcaaec8847faffe8870" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>Chip</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a21ec8cfbaba9e08deb3607c7eff9ad63" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>clearBit</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1acf482fcb79b7f1ea5c425c27c49a74c8" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>DMux8Way</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1a73aa8775df607d9ececf2626872ffb66" prot="private" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>evaluate</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1abb3738614a44f125a3f3170cfeaa41e5" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>getA</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1a6151f81178e5a08789ac06b2b44fa9bc" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>getB</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1aef5a1c7bf3e9b65a35b55a008b5463ac" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>getBit</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1aa7c7fd1db4e48eff6a91dd60c405a3ec" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>getC</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1a2e013f1b61831e56294f1f9f1101ea13" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>getD</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1a7b76060d80f9badaa1db6edf01626d51" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>getE</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1af3c9353fb0320dacacf875e3e1d85d4c" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>getF</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1aa8225987b02c7ffeb6f89cd9f742131f" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>getG</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1a1cab370c7f20c85b4a403c4403aee911" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>getH</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1a75c8382bcaa366855d0256b28d6c96ab" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>getOut</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a63bb368bb0827830235759b33718d1b4" prot="protected" virt="virtual"><scope>Hack::Chips::DMux8Way</scope><name>isDirty</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a1240a9c5045e3dfcb5595700b6c474d6" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>setBit</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1af84f536333042ba130a9f6ac956ac363" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>setIn</name></member>
      <member refid="classHack_1_1Chips_1_1DMux8Way_1a3c683f9b48d2a2ca3db4c703df084e7b" prot="public" virt="non-virtual"><scope>Hack::Chips::DMux8Way</scope><name>setSel</name></member>
      <member refid="classHack_1_1Chips_1_1Chip_1a512ea103436d620cad8b3fc80ca9c06c" prot="public" virt="virtual"><scope>Hack::Chips::DMux8Way</scope><name>~Chip</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
