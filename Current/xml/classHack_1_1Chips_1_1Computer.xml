<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classHack_1_1Chips_1_1Computer" kind="class" language="C++" prot="public">
    <compoundname>Hack::Chips::Computer</compoundname>
    <includes local="no">Source/Chips/Computer.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Computer_1aa280cc035bb3869f0d63c55d5c608a7f" prot="public" static="yes" mutable="no">
        <type><ref refid="structHack_1_1Chips_1_1CpuState" kindref="compound">CpuState</ref></type>
        <definition>CpuState Hack::Chips::Computer::NullState</definition>
        <argsstring></argsstring>
        <name>NullState</name>
        <initializer>= {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="47" column="1" bodyfile="Source/Chips/Computer.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Computer_1ade34b79d7f55f19d5a0d87efad803de5" prot="private" static="no" mutable="no">
        <type><ref refid="classHack_1_1Chips_1_1Cpu" kindref="compound">Cpu</ref> *</type>
        <definition>Cpu* Hack::Chips::Computer::_cpu</definition>
        <argsstring></argsstring>
        <name>_cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="51" column="1" bodyfile="Source/Chips/Computer.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Computer_1abe41ac7f0383e1625d645575c877da11" prot="private" static="no" mutable="no">
        <type><ref refid="structHack_1_1Chips_1_1CpuState" kindref="compound">CpuState</ref></type>
        <definition>CpuState Hack::Chips::Computer::_cpuState</definition>
        <argsstring></argsstring>
        <name>_cpuState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="54" column="1" bodyfile="Source/Chips/Computer.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Computer_1afd22c36758f592041d2c7ec1ef2249de" prot="private" static="no" mutable="no">
        <type><ref refid="classHack_1_1Chips_1_1Memory" kindref="compound">Memory</ref> *</type>
        <definition>Memory* Hack::Chips::Computer::_ram</definition>
        <argsstring></argsstring>
        <name>_ram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="52" column="1" bodyfile="Source/Chips/Computer.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Computer_1a1a320ac1d4aa97c92c94423b1bf39046" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hack::Chips::Computer::_reset</definition>
        <argsstring></argsstring>
        <name>_reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="53" column="1" bodyfile="Source/Chips/Computer.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHack_1_1Chips_1_1Computer_1a53ce6e8eec3b7e09e97ef5bd5ab297b5" prot="private" static="no" mutable="no">
        <type><ref refid="classHack_1_1Chips_1_1Rom32" kindref="compound">Rom32</ref> *</type>
        <definition>Rom32* Hack::Chips::Computer::_rom</definition>
        <argsstring></argsstring>
        <name>_rom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="50" column="1" bodyfile="Source/Chips/Computer.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1a9c7075caa055fa5f990bb084ca1f7f10" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Computer::clearState</definition>
        <argsstring>()</argsstring>
        <name>clearState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="56" column="1" bodyfile="Source/Chips/Computer.cpp" bodystart="70" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1ad9e1addc596ec6f58fa56631086491e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Chips::Computer::Computer</definition>
        <argsstring>()</argsstring>
        <name>Computer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="60" column="1" bodyfile="Source/Chips/Computer.cpp" bodystart="32" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1ae76586a1a8385c183863269158c19083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Chips::Computer::~Computer</definition>
        <argsstring>()</argsstring>
        <name>~Computer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="61" column="1" bodyfile="Source/Chips/Computer.cpp" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1af05aa34a76553dbe510a97b0c7027399" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::Computer::canRead</definition>
        <argsstring>() const</argsstring>
        <name>canRead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="75" column="1" bodyfile="Source/Chips/Computer.cpp" bodystart="56" bodyend="59"/>
        <references refid="structHack_1_1Chips_1_1CpuState_1a8ff12fb359df46f8c2b7bb4536b03bd2" compoundref="Computer_8h" startline="32">Hack::Chips::CpuState::pc</references>
        <references refid="classHack_1_1Chips_1_1Rom32_1aca05d80f8b7c52b5c17e0465fe2aeb7c" compoundref="Rom32_8h" startline="55" endline="58">Hack::Chips::Rom32::size</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1a2dbfa6b9bb02786f4e91770527d8624b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Computer::captureState</definition>
        <argsstring>()</argsstring>
        <name>captureState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="79" column="1" bodyfile="Source/Chips/Computer.cpp" bodystart="81" bodyend="102"/>
        <references refid="classHack_1_1Chips_1_1Cpu_1ae5b1d8f46e76e589ca99c6dee2fd7390" compoundref="CPU_8cpp" startline="61" endline="71">Hack::Chips::Cpu::lock</references>
        <references refid="classHack_1_1Chips_1_1Memory_1a5d32929ad9a9abf8f0634549462e7f0b" compoundref="Chips_2Memory_8cpp" startline="106" endline="112">Hack::Chips::Memory::lock</references>
        <references refid="classHack_1_1Chips_1_1Rom32_1a767e0cee036509120d2a6436b7be26f4" compoundref="Rom32_8cpp" startline="57" endline="63">Hack::Chips::Rom32::lock</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1a918ad89614f75599104e9c1a8123c916" compoundref="Computer_8h" startline="35">Hack::Chips::CpuState::regD</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a91db924b7a0e4fe6b99999402b00336b" compoundref="CPU_8cpp" startline="137" endline="142">Hack::Chips::Cpu::getDRegister</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1a764dbb644ba5bb323c97e09cb26ae122" compoundref="Computer_8h" startline="36">Hack::Chips::CpuState::regA</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a6ac458a81ab675897e277d07cb093193" compoundref="CPU_8cpp" startline="144" endline="149">Hack::Chips::Cpu::getAmRegister</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1a8ff12fb359df46f8c2b7bb4536b03bd2" compoundref="Computer_8h" startline="32">Hack::Chips::CpuState::pc</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a9500b587542088fd9b9574d81508e6e2" compoundref="CPU_8cpp" startline="151" endline="156">Hack::Chips::Cpu::getNext</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1a3bdae3da64a41fd9b98171cea0f1b1c1" compoundref="Computer_8h" startline="38">Hack::Chips::CpuState::inst</references>
        <references refid="classHack_1_1Chips_1_1Rom32_1ac4786f98ecaa6c91a1cd31e438c29aab" compoundref="Rom32_8cpp" startline="65" endline="70">Hack::Chips::Rom32::getOut</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1ae932a7489f8bdecf33ffd43c9410130f" compoundref="Computer_8h" startline="40">Hack::Chips::CpuState::ram</references>
        <references refid="classHack_1_1Chips_1_1Memory_1a9c799940a43fb1588ec230cd4d799ed3" compoundref="Chips_2Memory_8cpp" startline="114" endline="119">Hack::Chips::Memory::getOut</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1af1398587a09d5722d1d794f87d427a35" compoundref="Computer_8h" startline="39">Hack::Chips::CpuState::writeM</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a09ccfdbe1ebceb25ef9964834cee904f" compoundref="CPU_8cpp" startline="116" endline="121">Hack::Chips::Cpu::getWrite</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1a7b6ea40228d9e23b00fd2ee43133a6f3" compoundref="Computer_8h" startline="34">Hack::Chips::CpuState::addrM</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a5af96f7c73c15c4f0fff860481dc83bf" compoundref="CPU_8cpp" startline="130" endline="135">Hack::Chips::Cpu::getAddress</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1a4898fb8aa66f45e0e07d4b754b8d93ba" compoundref="Computer_8h" startline="33">Hack::Chips::CpuState::outM</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a1f9a2cb8f03f3196c82d0fca242c6903" compoundref="CPU_8cpp" startline="123" endline="128">Hack::Chips::Cpu::getOut</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1af9c11b4b51b6cd89cdfdcccdf52341db" compoundref="Computer_8h" startline="41">Hack::Chips::CpuState::reset</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1ab215c3ad1dfa7242b4edaccb75869063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Computer::load</definition>
        <argsstring>(const uint16_t *data, size_t size)</argsstring>
        <name>load</name>
        <param>
          <type>const <ref refid="classuint16__t" kindref="compound">uint16_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="63" column="1" bodyfile="Source/Chips/Computer.cpp" bodystart="48" bodyend="54"/>
        <references refid="classHack_1_1Chips_1_1Rom32_1ac604efafb3c2bec9d439d7d33f551b2a" compoundref="Rom32_8cpp" startline="90" endline="102">Hack::Chips::Rom32::load</references>
        <references refid="classHack_1_1Chips_1_1Computer_1aa44e98396b5191c503bd5255fe0ffa1f" compoundref="Computer_8cpp" startline="105" endline="138">update</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1abf924e51c33908fd52168a0c29228d1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHack_1_1Chips_1_1Memory" kindref="compound">Memory</ref> *</type>
        <definition>Memory * Hack::Chips::Computer::memory</definition>
        <argsstring>() const</argsstring>
        <name>memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="69" column="1" bodyfile="Source/Chips/Computer.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1a5e2ff33095c4f19eecdfdbfdba101b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Computer::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="67" column="1" bodyfile="Source/Chips/Computer.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1aa88d19943c50711fbe12d82e901fb21a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHack_1_1Chips_1_1Rom32" kindref="compound">Rom32</ref> *</type>
        <definition>Rom32 * Hack::Chips::Computer::rom</definition>
        <argsstring>() const</argsstring>
        <name>rom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="71" column="1" bodyfile="Source/Chips/Computer.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1ad4e3bd9b1c6831220b8c9802cbf679bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Computer::runToEnd</definition>
        <argsstring>()</argsstring>
        <name>runToEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="77" column="1" bodyfile="Source/Chips/Computer.cpp" bodystart="62" bodyend="68"/>
        <references refid="classHack_1_1Chips_1_1Rom32_1aca05d80f8b7c52b5c17e0465fe2aeb7c" compoundref="Rom32_8h" startline="55" endline="58">Hack::Chips::Rom32::size</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1a8ff12fb359df46f8c2b7bb4536b03bd2" compoundref="Computer_8h" startline="32">Hack::Chips::CpuState::pc</references>
        <references refid="classHack_1_1Chips_1_1Computer_1aa44e98396b5191c503bd5255fe0ffa1f" compoundref="Computer_8cpp" startline="105" endline="138">update</references>
        <references refid="classHack_1_1Chips_1_1Computer_1a2dbfa6b9bb02786f4e91770527d8624b" compoundref="Computer_8cpp" startline="81" endline="102">captureState</references>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1a90309c49a06a3585499693ca005aa643" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structHack_1_1Chips_1_1CpuState" kindref="compound">CpuState</ref> &amp;</type>
        <definition>const CpuState &amp; Hack::Chips::Computer::state</definition>
        <argsstring>() const</argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="73" column="1" bodyfile="Source/Chips/Computer.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classHack_1_1Chips_1_1Computer_1aa44e98396b5191c503bd5255fe0ffa1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::Computer::update</definition>
        <argsstring>(bool saveState=false)</argsstring>
        <name>update</name>
        <param>
          <type>bool</type>
          <declname>saveState</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/Computer.h" line="65" column="1" bodyfile="Source/Chips/Computer.cpp" bodystart="105" bodyend="138"/>
        <references refid="structHack_1_1Chips_1_1CpuState_1a5606ebaf9ae4d826b421dce343c223f9" compoundref="Computer_8h" startline="37">Hack::Chips::CpuState::clock</references>
        <references refid="classHack_1_1Chips_1_1Timer_1a06197be547ad70f903d23120252cf044" compoundref="Timer_8cpp" startline="29" endline="32">Hack::Chips::Timer::tick</references>
        <references refid="classHack_1_1Chips_1_1Computer_1a2dbfa6b9bb02786f4e91770527d8624b" compoundref="Computer_8cpp" startline="81" endline="102">captureState</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1a8ff12fb359df46f8c2b7bb4536b03bd2" compoundref="Computer_8h" startline="32">Hack::Chips::CpuState::pc</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a9500b587542088fd9b9574d81508e6e2" compoundref="CPU_8cpp" startline="151" endline="156">Hack::Chips::Cpu::getNext</references>
        <references refid="structHack_1_1Chips_1_1CpuState_1af9c11b4b51b6cd89cdfdcccdf52341db" compoundref="Computer_8h" startline="41">Hack::Chips::CpuState::reset</references>
        <references refid="classHack_1_1Chips_1_1Rom32_1ae7bd95475bee92dfd9c9992da8fba511" compoundref="Rom32_8cpp" startline="45" endline="55">Hack::Chips::Rom32::setIn</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1aed70d190ffe8390a4ad3f74ade6e60fe" compoundref="CPU_8cpp" startline="110" endline="114">Hack::Chips::Cpu::setInstruction</references>
        <references refid="classHack_1_1Chips_1_1Rom32_1ac4786f98ecaa6c91a1cd31e438c29aab" compoundref="Rom32_8cpp" startline="65" endline="70">Hack::Chips::Rom32::getOut</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1ad12d07395a9bb6a137027a086bad44d3" compoundref="CPU_8cpp" startline="82" endline="95">Hack::Chips::Cpu::setClock</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1ac14c3298730fc31946de0c05ee2c7a2b" compoundref="CPU_8cpp" startline="97" endline="108">Hack::Chips::Cpu::setReset</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a79cecbb18e73a58f32d84d8a4da53dc8" compoundref="CPU_8cpp" startline="73" endline="80">Hack::Chips::Cpu::setInMemory</references>
        <references refid="classHack_1_1Chips_1_1Memory_1a9c799940a43fb1588ec230cd4d799ed3" compoundref="Chips_2Memory_8cpp" startline="114" endline="119">Hack::Chips::Memory::getOut</references>
        <references refid="classHack_1_1Chips_1_1Memory_1aff5964e2c12b9d9d2df86251852f7667" compoundref="Chips_2Memory_8cpp" startline="97" endline="104">Hack::Chips::Memory::setClock</references>
        <references refid="classHack_1_1Chips_1_1Memory_1a1e0256353b44cb5742b01d569e004aa3" compoundref="Chips_2Memory_8cpp" startline="88" endline="95">Hack::Chips::Memory::setLoad</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a09ccfdbe1ebceb25ef9964834cee904f" compoundref="CPU_8cpp" startline="116" endline="121">Hack::Chips::Cpu::getWrite</references>
        <references refid="classHack_1_1Chips_1_1Memory_1a5baffcb2b03efd29620483621723b412" compoundref="Chips_2Memory_8cpp" startline="71" endline="75">Hack::Chips::Memory::setAddress</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a5af96f7c73c15c4f0fff860481dc83bf" compoundref="CPU_8cpp" startline="130" endline="135">Hack::Chips::Cpu::getAddress</references>
        <references refid="classHack_1_1Chips_1_1Memory_1a2543b6659fa9ecce5b9f72076a6dc4f9" compoundref="Chips_2Memory_8cpp" startline="62" endline="69">Hack::Chips::Memory::setIn</references>
        <references refid="classHack_1_1Chips_1_1Cpu_1a1f9a2cb8f03f3196c82d0fca242c6903" compoundref="CPU_8cpp" startline="123" endline="128">Hack::Chips::Cpu::getOut</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="101">
        <label>Hack::Chips::Computer</label>
        <link refid="classHack_1_1Chips_1_1Computer"/>
        <childnode refid="102" relation="usage">
          <edgelabel>NullState</edgelabel>
        </childnode>
      </node>
      <node id="103">
        <label>uint16_t</label>
        <link refid="classuint16__t"/>
      </node>
      <node id="102">
        <label>Hack::Chips::CpuState</label>
        <link refid="structHack_1_1Chips_1_1CpuState"/>
        <childnode refid="103" relation="usage">
          <edgelabel>regA</edgelabel>
          <edgelabel>outM</edgelabel>
          <edgelabel>regD</edgelabel>
          <edgelabel>pc</edgelabel>
          <edgelabel>inst</edgelabel>
          <edgelabel>reset</edgelabel>
          <edgelabel>ram</edgelabel>
          <edgelabel>clock</edgelabel>
          <edgelabel>addrM</edgelabel>
          <edgelabel>writeM</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Source/Chips/Computer.h" line="45" column="1" bodyfile="Source/Chips/Computer.h" bodystart="44" bodyend="80"/>
    <listofallmembers>
      <member refid="classHack_1_1Chips_1_1Computer_1ade34b79d7f55f19d5a0d87efad803de5" prot="private" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>_cpu</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1abe41ac7f0383e1625d645575c877da11" prot="private" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>_cpuState</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1afd22c36758f592041d2c7ec1ef2249de" prot="private" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>_ram</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1a1a320ac1d4aa97c92c94423b1bf39046" prot="private" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>_reset</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1a53ce6e8eec3b7e09e97ef5bd5ab297b5" prot="private" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>_rom</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1af05aa34a76553dbe510a97b0c7027399" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>canRead</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1a2dbfa6b9bb02786f4e91770527d8624b" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>captureState</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1a9c7075caa055fa5f990bb084ca1f7f10" prot="private" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>clearState</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1ad9e1addc596ec6f58fa56631086491e3" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>Computer</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1ab215c3ad1dfa7242b4edaccb75869063" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>load</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1abf924e51c33908fd52168a0c29228d1c" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>memory</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1aa280cc035bb3869f0d63c55d5c608a7f" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>NullState</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1a5e2ff33095c4f19eecdfdbfdba101b52" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>reset</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1aa88d19943c50711fbe12d82e901fb21a" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>rom</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1ad4e3bd9b1c6831220b8c9802cbf679bf" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>runToEnd</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1a90309c49a06a3585499693ca005aa643" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>state</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1aa44e98396b5191c503bd5255fe0ffa1f" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>update</name></member>
      <member refid="classHack_1_1Chips_1_1Computer_1ae76586a1a8385c183863269158c19083" prot="public" virt="non-virtual"><scope>Hack::Chips::Computer</scope><name>~Computer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
