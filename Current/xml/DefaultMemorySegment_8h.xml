<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="DefaultMemorySegment_8h" kind="file" language="C++">
    <compoundname>DefaultMemorySegment.h</compoundname>
    <includes refid="IMemorySegment_8h" local="yes">Chips/IMemorySegment.h</includes>
    <includedby refid="Ram16k_8h" local="yes">Source/Chips/Ram16k.h</includedby>
    <includedby refid="Screen_8h" local="yes">Source/Chips/Screen.h</includedby>
    <incdepgraph>
      <node id="1276">
        <label>cstdint</label>
      </node>
      <node id="1267">
        <label>Chips/BitUtils.h</label>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
      </node>
      <node id="1274">
        <label>UserInterface/Context.h</label>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
      </node>
      <node id="1272">
        <label>string</label>
      </node>
      <node id="1275">
        <label>Utils/UserInterface/Common.h</label>
        <childnode refid="1276" relation="include">
        </childnode>
      </node>
      <node id="1270">
        <label>String.h</label>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
      </node>
      <node id="1264">
        <label>Chips/IMemorySegment.h</label>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
      </node>
      <node id="1268">
        <label>bitset</label>
      </node>
      <node id="1263">
        <label>Source/Chips/DefaultMemorySegment.h</label>
        <link refid="DefaultMemorySegment_8h"/>
        <childnode refid="1264" relation="include">
        </childnode>
      </node>
      <node id="1273">
        <label>vector</label>
      </node>
      <node id="1271">
        <label>sstream</label>
      </node>
      <node id="1277">
        <label>Utils/UserInterface/Math.h</label>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
      </node>
      <node id="1266">
        <label>Chips/Chip.h</label>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
      </node>
      <node id="1269">
        <label>Utils/Console.h</label>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
      </node>
      <node id="1265">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1292">
        <label>Source/Computer/AssemblyDebugger.h</label>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
      </node>
      <node id="1296">
        <label>Source/Chips/Screen.h</label>
        <childnode refid="1280" relation="include">
        </childnode>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1293" relation="include">
        </childnode>
        <childnode refid="1291" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
      </node>
      <node id="1282">
        <label>Source/Bindings/Bindings.cpp</label>
      </node>
      <node id="1284">
        <label>Source/Computer/AssemblyDebugger/AssemblyDebuggerPrivate.cpp</label>
      </node>
      <node id="1285">
        <label>Source/Computer/AssemblyDebugger/AssemblyDebuggerPrivate.h</label>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
      </node>
      <node id="1290">
        <label>Source/Computer/Executable.cpp</label>
      </node>
      <node id="1288">
        <label>Source/Computer/ConsoleRuntime/ConsoleRuntimePrivate.h</label>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1289" relation="include">
        </childnode>
      </node>
      <node id="1278">
        <label>Source/Chips/DefaultMemorySegment.h</label>
        <link refid="DefaultMemorySegment_8h"/>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1296" relation="include">
        </childnode>
      </node>
      <node id="1279">
        <label>Source/Chips/Ram16k.h</label>
        <childnode refid="1280" relation="include">
        </childnode>
      </node>
      <node id="1286">
        <label>Source/Computer/AssemblyDebugger.cpp</label>
      </node>
      <node id="1287">
        <label>Source/Computer/ConsoleRuntime/ConsoleRuntimePrivate.cpp</label>
      </node>
      <node id="1291">
        <label>Source/Computer/RuntimeInterface.h</label>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1293" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
      </node>
      <node id="1295">
        <label>Source/Chips/Memory.cpp</label>
      </node>
      <node id="1294">
        <label>Source/Computer/WindowedRuntime.h</label>
      </node>
      <node id="1281">
        <label>Source/Chips/Computer.h</label>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
        <childnode refid="1289" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1291" relation="include">
        </childnode>
      </node>
      <node id="1280">
        <label>Source/Chips/Memory.h</label>
        <childnode refid="1281" relation="include">
        </childnode>
        <childnode refid="1295" relation="include">
        </childnode>
      </node>
      <node id="1283">
        <label>Source/Chips/Computer.cpp</label>
      </node>
      <node id="1289">
        <label>Source/Computer/ConsoleRuntime.cpp</label>
      </node>
      <node id="1293">
        <label>Source/Computer/ConsoleRuntime.h</label>
        <childnode refid="1289" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classHack_1_1Chips_1_1DefaultMemorySegment" prot="public">Hack::Chips::DefaultMemorySegment</innerclass>
    <innernamespace refid="namespaceHack_1_1Chips">Hack::Chips</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>Charles<sp/>Carley.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Chips/IMemorySegment.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceHack_1_1Chips" kindref="compound">Hack::Chips</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="28" refid="classHack_1_1Chips_1_1DefaultMemorySegment" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment" kindref="compound">DefaultMemorySegment</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment" kindref="compound">IMemorySegment</ref>&lt;High,<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="classHack_1_1Chips_1_1DefaultMemorySegment_1aa04cb9e6857a0b613e33e7f27f18efc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1IMemorySegment" kindref="compound">IMemorySegment&lt;High, ElementCount&gt;</ref><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1aa04cb9e6857a0b613e33e7f27f18efc8" kindref="member">BaseType</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>*<sp/>_ram;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ac20cd1025034ccde9abbd06b8a30b9b1" kindref="member">DefaultMemorySegment</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ab86f5452f2831b2f439f0a3984d3effe" kindref="member">~DefaultMemorySegment</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>*<sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ad4b862a78421101fef5afc7ad76cd942" kindref="member">pointer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>address)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ac10efeb1855e75c99717840b6bca98d7" kindref="member">setValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>address,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>&amp;<sp/>value)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1af6db3804cc8555a3a302e9264885d5b4" kindref="member">zero</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1a111146260aff6fd6a3c98ecbbfa14d26" kindref="member">getOut</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1a8dda4aef718d10a18e206aa105b85e3c" kindref="member">evaluate</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="56" refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ac20cd1025034ccde9abbd06b8a30b9b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ac20cd1025034ccde9abbd06b8a30b9b1" kindref="member">DefaultMemorySegment&lt;High, ElementCount&gt;::DefaultMemorySegment</ref>()<sp/>:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram(new<sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>[<ref refid="classHack_1_1Chips_1_1IMemorySegment" kindref="compound">BaseType</ref>::Max<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1af6db3804cc8555a3a302e9264885d5b4" kindref="member">zero</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="63" refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ab86f5452f2831b2f439f0a3984d3effe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ab86f5452f2831b2f439f0a3984d3effe" kindref="member">DefaultMemorySegment&lt;High, ElementCount&gt;::~DefaultMemorySegment</ref>()</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>_ram;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="69" refid="classHack_1_1Chips_1_1DefaultMemorySegment_1a94ef78fc28470abbd4b024e2b6d44510" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1a94ef78fc28470abbd4b024e2b6d44510" kindref="member">DefaultMemorySegment&lt;High, ElementCount&gt;::get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="70"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>High)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ram[index];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CHECK_INT_BOUNDS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IndexOutOfBounds();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="81" refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ad4b862a78421101fef5afc7ad76cd942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>*<sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ad4b862a78421101fef5afc7ad76cd942" kindref="member">DefaultMemorySegment&lt;High, ElementCount&gt;::pointer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>address)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>&lt;<sp/>High)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;_ram[address];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="89" refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ac10efeb1855e75c99717840b6bca98d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1ac10efeb1855e75c99717840b6bca98d7" kindref="member">DefaultMemorySegment&lt;High, ElementCount&gt;::setValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><sp/><sp/>address,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref>&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="91"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>&lt;<sp/>High)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram[address]<sp/>=<sp/>_ram[address<sp/>+<sp/>High]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="97" refid="classHack_1_1Chips_1_1DefaultMemorySegment_1af6db3804cc8555a3a302e9264885d5b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1af6db3804cc8555a3a302e9264885d5b4" kindref="member">DefaultMemorySegment&lt;High, ElementCount&gt;::zero</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="98"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(_ram,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classuint16__t" kindref="compound">uint16_t</ref>)<sp/>*<sp/>BaseType::Max);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="103" refid="classHack_1_1Chips_1_1DefaultMemorySegment_1a8dda4aef718d10a18e206aa105b85e3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1a8dda4aef718d10a18e206aa105b85e3c" kindref="member">DefaultMemorySegment&lt;High, ElementCount&gt;::evaluate</ref>()</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/>loBit<sp/>=<sp/>this-&gt;_address;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loBit<sp/>&gt;=<sp/>High)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_bits<sp/>&amp;<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a3c93b3dc9ed5f470c6f86f10b05b2386" kindref="member">Bit0</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/>hiBit<sp/>=<sp/>loBit<sp/>+<sp/>High;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hiBit<sp/>&lt;<sp/>BaseType::Max)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_bits<sp/>&amp;<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a8487c63d5dca7d87b359feca1a2c2ac8" kindref="member">Bit1</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram[loBit]<sp/>=<sp/>_ram[hiBit]<sp/>=<sp/>this-&gt;_in;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram[loBit]<sp/>=<sp/>_ram[hiBit];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ram[hiBit]<sp/>=<sp/>this-&gt;_in;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>InputException(</highlight><highlight class="stringliteral">&quot;ram<sp/>index<sp/>(&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hiBit,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;)<sp/>out<sp/>of<sp/>bounds<sp/>[0,<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hiBit,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_out<sp/>=<sp/>_ram[loBit];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_bits<sp/>&amp;=<sp/>0b01111100;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>High,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">16_t<sp/>ElementCount&gt;</highlight></codeline>
<codeline lineno="138" refid="classHack_1_1Chips_1_1DefaultMemorySegment_1a111146260aff6fd6a3c98ecbbfa14d26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classuint16__t" kindref="compound">uint16_t</ref><sp/><ref refid="classHack_1_1Chips_1_1DefaultMemorySegment_1a111146260aff6fd6a3c98ecbbfa14d26" kindref="member">DefaultMemorySegment&lt;High, ElementCount&gt;::getOut</ref>()</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;_bits<sp/>&amp;<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2ad8bde3cde810be7fb777c966f997edd9" kindref="member">Bit7</ref>)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>!(this-&gt;_bits<sp/>&amp;<sp/><ref refid="namespaceHack_1_1Chips_1a89719f49d745047f03bca80bfff48bd2a558a82390f139f886fdec62375e5209e" kindref="member">Bit6</ref>))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evaluate();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_out;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Hack::Chips</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Chips/DefaultMemorySegment.h"/>
  </compounddef>
</doxygen>
