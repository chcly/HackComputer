<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="Hc05" kind="page">
    <compoundname>Hc05</compoundname>
    <title>Compiler</title>
    <briefdescription>
<para>Implements the compiler for the .jack source file. </para>    </briefdescription>
    <detaileddescription>
<para>Implements the compiler for the .jack source file.</para><para><linebreak/>
<linebreak/>
The primary job of the compiler is to take the high-level jack language and translate it from, <computeroutput>.jack,</computeroutput> to <computeroutput>.vm,</computeroutput> then <computeroutput>.asm,</computeroutput> and finally to machine code.</para><para><heading level="2">ParseTreeBuilder</heading>
</para><para>The ParseTreeBuilder project provides a static library that compiles the jack code into an intermediate parse tree. <linebreak/>
<linebreak/>
The definition for the jack grammar can be found <ulink url="../../Source/Compiler/Analyzer/Jack.grm">here.</ulink> The primary difference in syntax between this implementation and the course is that the not operator <computeroutput>!</computeroutput> is implemented both as &apos;~&apos; and &apos;!&apos;.</para><para><heading level="2">ParseTree</heading>
</para><para>Provides an intermediate static library that implements the parse tree structure. The tree structure is meant to be shared between multiple projects. This library provides that space. As such, it also contains extra classes that provide output formats for the parse tree.</para><para><heading level="2">Jack2XML</heading>
</para><para>Is an executable project that provides the means to output inspection files.</para><para><linebreak/>
<linebreak/>
<programlisting filename=".txt"><codeline><highlight class="normal">Usage:<sp/>Jack2xml<sp/>&lt;options&gt;<sp/>&lt;arg[0]<sp/>..<sp/>arg[n]&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-h,<sp/>--help<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Display<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>help<sp/>message</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-f,<sp/>--format<sp/><sp/><sp/><sp/><sp/>Specify<sp/>an<sp/>output<sp/>file<sp/>format</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>xml,<sp/>format<sp/>as<sp/>XML<sp/>(</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>dot,<sp/>format<sp/>as<sp/>DOT</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-d,<sp/>--directory<sp/><sp/>Converts<sp/>all<sp/>.jack<sp/>files<sp/>in<sp/>the<sp/>current<sp/>directory<sp/>to<sp/>.xml</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-o,<sp/>--output<sp/><sp/><sp/><sp/><sp/>Specify<sp/>an<sp/>output<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>directory<sp/>option<sp/>takes<sp/>precedence</highlight></codeline>
</programlisting></para><para><heading level="3">Example</heading>
</para><para>The following shows the different outputs of Jack2XML using the supplied <computeroutput>.jack</computeroutput> source file.</para><para><programlisting filename=".txt"><codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">Main</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>Using <ref refid="classHack_1_1Compiler_1_1XmlWriterImpl" kindref="compound">XmlWriter</ref></para><para><programlisting filename=".xml"><codeline><highlight class="normal">&lt;?</highlight><highlight class="keyword">xml</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">version</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&apos;1.0&apos;</highlight><highlight class="normal">?&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">ClassList</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Filename</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;example.jack&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">RuleClass</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">Main</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;{&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleClassDescription</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleMethod</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleMethodSpecification</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">function</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleMethodSpecification</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleMethodReturnType</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleDataType</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">int</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleDataType</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleMethodReturnType</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">main</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;(&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleParameterList</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleParameterList</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;)&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleMethodBody</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;{&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleBody</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleStatement</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleReturnStatement</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">return</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleExpression</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleSingleExpression</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Subtype</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;SubtypeTerm&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleTerm</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleSimpleTerm</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;0&lt;/</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleSimpleTerm</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleTerm</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleSingleExpression</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleExpression</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;;&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleReturnStatement</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleStatement</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleBody</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;}&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleMethodBody</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleMethod</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleClassDescription</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;}&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/>&lt;/</highlight><highlight class="keywordtype">RuleClass</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">ClassList</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para><para>Using <ref refid="classHack_1_1Compiler_1_1DotWriterImpl" kindref="compound">DotWriter</ref> after it has be converted to SVG with dot.</para><para><image type="html" name="Example.svg"></image>
</para><para><heading level="2">CodeGenerator</heading>
</para><para>Is a static library which implements the conversion from parse tree to <computeroutput>.vm</computeroutput>.</para><para><heading level="2">Compiler</heading>
</para><para>A standalone compiler can be found in the <ulink url="../../Source/Compiler/Compiler/">Source/Compiler/Compiler/</ulink> directory. It allows the code to be reduced to any stage in the process of reducing to machine code.</para><para>Its primary purpose is for testing only at the moment. Any execution happens in the <ref refid="Hc06" kindref="compound">Computer</ref> executable.</para><sect1 id="Hc05_1Hc05Defined">
<title>Defined in</title>
<para>The source is defined in <ulink url="../../Source/Compiler">Source/Compiler</ulink><linebreak/>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
