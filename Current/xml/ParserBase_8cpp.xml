<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="ParserBase_8cpp" kind="file" language="C++">
    <compoundname>ParserBase.cpp</compoundname>
    <includes refid="ParserBase_8h" local="yes">Utils/ParserBase/ParserBase.h</includes>
    <includes local="no">filesystem</includes>
    <includes local="no">fstream</includes>
    <includes local="no">vector</includes>
    <includes refid="Char_8h" local="yes">Utils/Char.h</includes>
    <includes refid="ParseError_8h" local="yes">Utils/ParserBase/ParseError.h</includes>
    <includes refid="ScannerBase_8h" local="yes">Utils/ParserBase/ScannerBase.h</includes>
    <includes refid="TokenBase_8h" local="yes">Utils/ParserBase/TokenBase.h</includes>
    <incdepgraph>
      <node id="3935">
        <label>Utils/ParserBase/TokenBase.h</label>
        <childnode refid="3928" relation="include">
        </childnode>
      </node>
      <node id="3936">
        <label>filesystem</label>
      </node>
      <node id="3923">
        <label>Utils/Exception.h</label>
        <childnode refid="3924" relation="include">
        </childnode>
        <childnode refid="3925" relation="include">
        </childnode>
        <childnode refid="3926" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3928" relation="include">
        </childnode>
      </node>
      <node id="3919">
        <label>ScannerBase.h</label>
        <childnode refid="3920" relation="include">
        </childnode>
        <childnode refid="3935" relation="include">
        </childnode>
      </node>
      <node id="3933">
        <label>cstdint</label>
      </node>
      <node id="3938">
        <label>Utils/Char.h</label>
        <childnode refid="3933" relation="include">
        </childnode>
        <childnode refid="3928" relation="include">
        </childnode>
      </node>
      <node id="3931">
        <label>UserInterface/Context.h</label>
        <childnode refid="3928" relation="include">
        </childnode>
        <childnode refid="3932" relation="include">
        </childnode>
        <childnode refid="3934" relation="include">
        </childnode>
      </node>
      <node id="3925">
        <label>stdexcept</label>
      </node>
      <node id="3930">
        <label>string</label>
      </node>
      <node id="3922">
        <label>unordered_set</label>
      </node>
      <node id="3924">
        <label>exception</label>
      </node>
      <node id="3937">
        <label>fstream</label>
      </node>
      <node id="3932">
        <label>Utils/UserInterface/Common.h</label>
        <childnode refid="3933" relation="include">
        </childnode>
      </node>
      <node id="3928">
        <label>String.h</label>
        <childnode refid="3929" relation="include">
        </childnode>
        <childnode refid="3930" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
      </node>
      <node id="3917">
        <label>Utils/ParserBase/ParserBase.h</label>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3919" relation="include">
        </childnode>
        <childnode refid="3935" relation="include">
        </childnode>
      </node>
      <node id="3920">
        <label>Utils/IndexCache.h</label>
        <childnode refid="3921" relation="include">
        </childnode>
        <childnode refid="3922" relation="include">
        </childnode>
        <childnode refid="3923" relation="include">
        </childnode>
      </node>
      <node id="3918">
        <label>vector</label>
      </node>
      <node id="3926">
        <label>utility</label>
      </node>
      <node id="3929">
        <label>sstream</label>
      </node>
      <node id="3916">
        <label>Source/Utils/ParserBase/ParserBase.cpp</label>
        <link refid="ParserBase_8cpp"/>
        <childnode refid="3917" relation="include">
        </childnode>
        <childnode refid="3936" relation="include">
        </childnode>
        <childnode refid="3937" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3938" relation="include">
        </childnode>
        <childnode refid="3939" relation="include">
        </childnode>
        <childnode refid="3919" relation="include">
        </childnode>
        <childnode refid="3935" relation="include">
        </childnode>
      </node>
      <node id="3921">
        <label>unordered_map</label>
      </node>
      <node id="3934">
        <label>Utils/UserInterface/Math.h</label>
        <childnode refid="3933" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3932" relation="include">
        </childnode>
      </node>
      <node id="3927">
        <label>Utils/Console.h</label>
        <childnode refid="3928" relation="include">
        </childnode>
        <childnode refid="3931" relation="include">
        </childnode>
      </node>
      <node id="3939">
        <label>Utils/ParserBase/ParseError.h</label>
        <childnode refid="3923" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceHack">Hack</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>Charles<sp/>Carley.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Utils/ParserBase/ParserBase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Utils/Char.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Utils/ParserBase/ParseError.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Utils/ParserBase/ScannerBase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Utils/ParserBase/TokenBase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceHack" kindref="compound">Hack</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33" refid="classHack_1_1ParserBase_1ad2acc126d182c46c5d7f2afbb2aaeb66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1ad2acc126d182c46c5d7f2afbb2aaeb66" kindref="member">ParserBase::ParserBase</ref>()<sp/>:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cursor(0),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_scanner(nullptr)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1a6e57377073e2e728304316b73986ded2" kindref="member">ParserBase::~ParserBase</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classHack_1_1ParserBase_1a8436c3d2c31c4a3e822c946c8a6b1a92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1ParserBase_1a8436c3d2c31c4a3e822c946c8a6b1a92" kindref="member">ParserBase::readToken</ref>(int32_t<sp/>n)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1TokenBase" kindref="compound">TokenBase</ref><sp/>tok;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1aec27fb418bd286a67e449bbf42ddb4e7" kindref="member">_scanner</ref>-&gt;<ref refid="classHack_1_1ScannerBase_1ac24b88935d8f5463217aacbfa9b87e9b" kindref="member">scan</ref>(tok);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1a848d7a2893106ea47afc8839aae2f4e4" kindref="member">_tokens</ref>.push_back(tok);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--n<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classHack_1_1ParserBase_1a6b9602e4c23316318668f57da6db421c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHack_1_1TokenBase" kindref="compound">TokenBase</ref><sp/><ref refid="classHack_1_1ParserBase_1a6b9602e4c23316318668f57da6db421c" kindref="member">ParserBase::getToken</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>offs)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>next<sp/>=<sp/>offs<sp/>+<sp/><ref refid="classHack_1_1ParserBase_1a050b6fa7aa7a8a0ad9e6dc769c5fe1ab" kindref="member">_cursor</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(next<sp/>+<sp/>1<sp/>&gt;<sp/>(int32_t)<ref refid="classHack_1_1ParserBase_1a848d7a2893106ea47afc8839aae2f4e4" kindref="member">_tokens</ref>.size())</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1a8436c3d2c31c4a3e822c946c8a6b1a92" kindref="member">readToken</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&lt;<sp/>(int32_t)<ref refid="classHack_1_1ParserBase_1a848d7a2893106ea47afc8839aae2f4e4" kindref="member">_tokens</ref>.size()<sp/>&amp;&amp;<sp/>next<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1ParserBase_1a848d7a2893106ea47afc8839aae2f4e4" kindref="member">_tokens</ref>.at(next);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1aa78f3654190d9b4f2ea49f8bcfa97f2b" kindref="member">parseError</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>token&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classHack_1_1ParserBase_1a857d4ca08875acc4a5ae351eab22ebee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1ParserBase_1a857d4ca08875acc4a5ae351eab22ebee" kindref="member">ParserBase::advanceCursor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>n)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1a050b6fa7aa7a8a0ad9e6dc769c5fe1ab" kindref="member">_cursor</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>[[noreturn]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParserBase::parseErrorThrow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref>&amp;<sp/>message)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1ParseError" kindref="compound">ParseError</ref>(1,<sp/><ref refid="classHack_1_1ParserBase_1ab0e5c4de751cb9162c1068d08fe5108f" kindref="member">_filePath</ref>,<sp/><ref refid="classHack_1_1ParserBase_1aec27fb418bd286a67e449bbf42ddb4e7" kindref="member">_scanner</ref>-&gt;<ref refid="classHack_1_1ScannerBase_1a30f51f62024dec9e10aae0f40bfe04e6" kindref="member">line</ref>(),<sp/>message);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classHack_1_1ParserBase_1a4668ec9b913931ce518de6d7f92fb4e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1ParserBase_1a4668ec9b913931ce518de6d7f92fb4e0" kindref="member">ParserBase::parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref>&amp;<sp/>file)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>is(file);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is.is_open())</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>the<sp/>input<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal">,<sp/>file,<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>base<sp/>file<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::filesystem::path<sp/>pth<sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1a3845bf25a071be865d1abf5d86547d4e" kindref="member">_file</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>pth.stem().string();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1ab0e5c4de751cb9162c1068d08fe5108f" kindref="member">_filePath</ref><sp/>=<sp/>absolute(pth).string();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1aca4fd325b8520d930ca612cf3337c625" kindref="member">parseImpl</ref>(is);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classHack_1_1ParserBase_1a526cddbd87b36f03b8e76db9b7d640b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1ParserBase_1a4668ec9b913931ce518de6d7f92fb4e0" kindref="member">ParserBase::parse</ref>(<ref refid="namespaceHack_1a830c8eb3c005ef2fbc470e0b141b93c5" kindref="member">IStream</ref>&amp;<sp/>is,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref>&amp;<sp/>file)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>some<sp/>relatively<sp/>unique<sp/>name<sp/>for<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.empty())</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref><sp/>ex;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1StringUtils_1a317411e0785122e1f415d6da27351ba6" kindref="member">StringUtils::scramble</ref>(ex,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1a3845bf25a071be865d1abf5d86547d4e" kindref="member">_file</ref><sp/>=<sp/><ref refid="namespaceHack_1a0022073c844c619a094704ae6c9b14bf" kindref="member">StringCombine</ref>(</highlight><highlight class="stringliteral">&quot;MemoryStream&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>ex);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1a3845bf25a071be865d1abf5d86547d4e" kindref="member">_file</ref><sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1ab0e5c4de751cb9162c1068d08fe5108f" kindref="member">_filePath</ref><sp/>=<sp/><ref refid="classHack_1_1ParserBase_1a3845bf25a071be865d1abf5d86547d4e" kindref="member">_file</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1aca4fd325b8520d930ca612cf3337c625" kindref="member">parseImpl</ref>(is);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classHack_1_1ParserBase_1a4560ce70fee098d7508b053b409c1d19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1ParserBase_1a4560ce70fee098d7508b053b409c1d19" kindref="member">ParserBase::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceHack_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref>&amp;<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>os(file);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!os.is_open())</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>the<sp/>input<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal">,<sp/>file,<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1a4e9dd3f0283226de48b148d66b416f0f" kindref="member">writeImpl</ref>(os,<sp/>format);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classHack_1_1ParserBase_1a644c6667a785050f490a4ee24a98e2e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classHack_1_1ParserBase_1a4560ce70fee098d7508b053b409c1d19" kindref="member">ParserBase::write</ref>(<ref refid="namespaceHack_1a404ae4dff97be2fec362955db83690da" kindref="member">OStream</ref>&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHack_1_1ParserBase_1a4e9dd3f0283226de48b148d66b416f0f" kindref="member">writeImpl</ref>(os,<sp/>format);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Hack</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/Utils/ParserBase/ParserBase.cpp"/>
  </compounddef>
</doxygen>
